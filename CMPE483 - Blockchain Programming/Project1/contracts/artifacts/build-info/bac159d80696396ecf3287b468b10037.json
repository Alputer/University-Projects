{
	"id": "bac159d80696396ecf3287b468b10037",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.21;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract MyGov is ERC20 {\n    uint256 token_supply;\n    ERC20 public USD_BaseCoinContract;\n\n    mapping(address => bool) usedFaucet;\n\n    bool isTesting;\n\n    constructor(uint tokensupply, address usdStableCoinAddress, bool test) ERC20(\"MyGov\", \"MG\") {\n\t\trequire(tokensupply == 20000000, \"MyGov token supply must be equal to 20 million\");\n        token_supply = tokensupply;\n        isTesting = test;\n        _mint(address(this), tokensupply);\n        USD_BaseCoinContract = ERC20(usdStableCoinAddress);\n    }\n\n    function emptyTokenSupply() public {\n        require(isTesting, \"Function can only be called in test mode\");\n        token_supply = 0;\n    }\n\n    function donateUSD(uint amount) public {\n        USD_BaseCoinContract.transfer(address(this), amount);\n    }\n\n    function donateMyGovToken(uint amount) public {\n        transfer(address(this), amount);\n    }\n\n    function getUSDBalanceOfAccount(address _account) public view returns (uint256) {\n        return USD_BaseCoinContract.balanceOf(_account);\n    }\n\n    function isMyGovMember(address _address) public view returns(bool){\n        return balanceOf(_address) > 0;\n    }\n\n\tfunction faucet() public {\n\n\t\trequire(balanceOf(address(this)) > 0, \"No tokens left on contract\");\n\t\trequire(!usedFaucet[msg.sender], \"You already received token from contract\");\n    \n        this.transfer(msg.sender, 10); //Change to 1 before submission.\n        usedFaucet[msg.sender] = true; \n        \n\t}\n\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol": {
				"MyGov": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokensupply",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "usdStableCoinAddress",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "test",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "USD_BaseCoinContract",
							"outputs": [
								{
									"internalType": "contract ERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "donateMyGovToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "donateUSD",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emptyTokenSupply",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "faucet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "getUSDBalanceOfAccount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "isMyGovMember",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":115:1566  contract MyGov is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":274:624  constructor(uint tokensupply, address usdStableCoinAddress, bool test) ERC20(\"MyGov\", \"MG\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x4d79476f76000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x02\n  dup2\n  mstore\n  0x20\n  add\n  0x4d47000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":393:401  20000000 */\n  0x01312d00\n    /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":378:389  tokensupply */\n  dup4\n    /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":378:401  tokensupply == 20000000 */\n  eq\n    /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":370:452  require(tokensupply == 20000000, \"MyGov token supply must be equal to 20 million\") */\n  tag_11\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_11:\n    /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":477:488  tokensupply */\n  dup3\n    /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":462:474  token_supply */\n  0x05\n    /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":462:488  token_supply = tokensupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":510:514  test */\n  dup1\n    /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":498:507  isTesting */\n  0x08\n  0x00\n    /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":498:514  isTesting = test */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":524:557  _mint(address(this), tokensupply) */\n  tag_14\n    /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":538:542  this */\n  address\n    /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":545:556  tokensupply */\n  dup5\n    /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":524:529  _mint */\n  shl(0x20, tag_15)\n    /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":524:557  _mint(address(this), tokensupply) */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":596:616  usdStableCoinAddress */\n  dup2\n    /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":567:587  USD_BaseCoinContract */\n  0x06\n  0x00\n    /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":567:617  USD_BaseCoinContract = ERC20(usdStableCoinAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":274:624  constructor(uint tokensupply, address usdStableCoinAddress, bool test) ERC20(\"MyGov\", \"MG\") {... */\n  pop\n  pop\n  pop\n    /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":115:1566  contract MyGov is ERC20 {... */\n  jump(tag_16)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_15:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_18\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_18:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_21\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_22)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_22:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_24\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_25\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_27)\ntag_24:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_29\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_27:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_31\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_32)\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_33\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_36:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_38:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_39:\n    /* \"#utility.yul\":490:514   */\n  tag_79\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_38\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_80\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_80:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_40:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_82\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_39\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:820   */\ntag_41:\n    /* \"#utility.yul\":731:738   */\n  0x00\n    /* \"#utility.yul\":771:813   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":764:769   */\n  dup3\n    /* \"#utility.yul\":760:814   */\n  and\n    /* \"#utility.yul\":749:814   */\n  swap1\n  pop\n    /* \"#utility.yul\":694:820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":826:922   */\ntag_42:\n    /* \"#utility.yul\":863:870   */\n  0x00\n    /* \"#utility.yul\":892:916   */\n  tag_85\n    /* \"#utility.yul\":910:915   */\n  dup3\n    /* \"#utility.yul\":892:916   */\n  tag_41\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":881:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":826:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_43:\n    /* \"#utility.yul\":1001:1025   */\n  tag_87\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_42\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_88:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_44:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_90\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_43\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1295   */\ntag_45:\n    /* \"#utility.yul\":1239:1246   */\n  0x00\n    /* \"#utility.yul\":1282:1287   */\n  dup2\n    /* \"#utility.yul\":1275:1288   */\n  iszero\n    /* \"#utility.yul\":1268:1289   */\n  iszero\n    /* \"#utility.yul\":1257:1289   */\n  swap1\n  pop\n    /* \"#utility.yul\":1205:1295   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1301:1417   */\ntag_46:\n    /* \"#utility.yul\":1371:1392   */\n  tag_93\n    /* \"#utility.yul\":1386:1391   */\n  dup2\n    /* \"#utility.yul\":1371:1392   */\n  tag_45\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":1364:1369   */\n  dup2\n    /* \"#utility.yul\":1361:1393   */\n  eq\n    /* \"#utility.yul\":1351:1411   */\n  tag_94\n  jumpi\n    /* \"#utility.yul\":1407:1408   */\n  0x00\n    /* \"#utility.yul\":1404:1405   */\n  dup1\n    /* \"#utility.yul\":1397:1409   */\n  revert\n    /* \"#utility.yul\":1351:1411   */\ntag_94:\n    /* \"#utility.yul\":1301:1417   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1423:1560   */\ntag_47:\n    /* \"#utility.yul\":1477:1482   */\n  0x00\n    /* \"#utility.yul\":1508:1514   */\n  dup2\n    /* \"#utility.yul\":1502:1515   */\n  mload\n    /* \"#utility.yul\":1493:1515   */\n  swap1\n  pop\n    /* \"#utility.yul\":1524:1554   */\n  tag_96\n    /* \"#utility.yul\":1548:1553   */\n  dup2\n    /* \"#utility.yul\":1524:1554   */\n  tag_46\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":1423:1560   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1566:2223   */\ntag_3:\n    /* \"#utility.yul\":1651:1657   */\n  0x00\n    /* \"#utility.yul\":1659:1665   */\n  dup1\n    /* \"#utility.yul\":1667:1673   */\n  0x00\n    /* \"#utility.yul\":1716:1718   */\n  0x60\n    /* \"#utility.yul\":1704:1713   */\n  dup5\n    /* \"#utility.yul\":1695:1702   */\n  dup7\n    /* \"#utility.yul\":1691:1714   */\n  sub\n    /* \"#utility.yul\":1687:1719   */\n  slt\n    /* \"#utility.yul\":1684:1803   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":1722:1801   */\n  tag_99\n  tag_36\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":1684:1803   */\ntag_98:\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1867:1931   */\n  tag_100\n    /* \"#utility.yul\":1923:1930   */\n  dup7\n    /* \"#utility.yul\":1914:1920   */\n  dup3\n    /* \"#utility.yul\":1903:1912   */\n  dup8\n    /* \"#utility.yul\":1899:1921   */\n  add\n    /* \"#utility.yul\":1867:1931   */\n  tag_40\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":1857:1931   */\n  swap4\n  pop\n    /* \"#utility.yul\":1813:1941   */\n  pop\n    /* \"#utility.yul\":1980:1982   */\n  0x20\n    /* \"#utility.yul\":2006:2070   */\n  tag_101\n    /* \"#utility.yul\":2062:2069   */\n  dup7\n    /* \"#utility.yul\":2053:2059   */\n  dup3\n    /* \"#utility.yul\":2042:2051   */\n  dup8\n    /* \"#utility.yul\":2038:2060   */\n  add\n    /* \"#utility.yul\":2006:2070   */\n  tag_44\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":1996:2070   */\n  swap3\n  pop\n    /* \"#utility.yul\":1951:2080   */\n  pop\n    /* \"#utility.yul\":2119:2121   */\n  0x40\n    /* \"#utility.yul\":2145:2206   */\n  tag_102\n    /* \"#utility.yul\":2198:2205   */\n  dup7\n    /* \"#utility.yul\":2189:2195   */\n  dup3\n    /* \"#utility.yul\":2178:2187   */\n  dup8\n    /* \"#utility.yul\":2174:2196   */\n  add\n    /* \"#utility.yul\":2145:2206   */\n  tag_47\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":2135:2206   */\n  swap2\n  pop\n    /* \"#utility.yul\":2090:2216   */\n  pop\n    /* \"#utility.yul\":1566:2223   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":2229:2328   */\ntag_48:\n    /* \"#utility.yul\":2281:2287   */\n  0x00\n    /* \"#utility.yul\":2315:2320   */\n  dup2\n    /* \"#utility.yul\":2309:2321   */\n  mload\n    /* \"#utility.yul\":2299:2321   */\n  swap1\n  pop\n    /* \"#utility.yul\":2229:2328   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2334:2514   */\ntag_49:\n    /* \"#utility.yul\":2382:2459   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2379:2380   */\n  0x00\n    /* \"#utility.yul\":2372:2460   */\n  mstore\n    /* \"#utility.yul\":2479:2483   */\n  0x41\n    /* \"#utility.yul\":2476:2477   */\n  0x04\n    /* \"#utility.yul\":2469:2484   */\n  mstore\n    /* \"#utility.yul\":2503:2507   */\n  0x24\n    /* \"#utility.yul\":2500:2501   */\n  0x00\n    /* \"#utility.yul\":2493:2508   */\n  revert\n    /* \"#utility.yul\":2520:2700   */\ntag_50:\n    /* \"#utility.yul\":2568:2645   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2565:2566   */\n  0x00\n    /* \"#utility.yul\":2558:2646   */\n  mstore\n    /* \"#utility.yul\":2665:2669   */\n  0x22\n    /* \"#utility.yul\":2662:2663   */\n  0x04\n    /* \"#utility.yul\":2655:2670   */\n  mstore\n    /* \"#utility.yul\":2689:2693   */\n  0x24\n    /* \"#utility.yul\":2686:2687   */\n  0x00\n    /* \"#utility.yul\":2679:2694   */\n  revert\n    /* \"#utility.yul\":2706:3026   */\ntag_51:\n    /* \"#utility.yul\":2750:2756   */\n  0x00\n    /* \"#utility.yul\":2787:2788   */\n  0x02\n    /* \"#utility.yul\":2781:2785   */\n  dup3\n    /* \"#utility.yul\":2777:2789   */\n  div\n    /* \"#utility.yul\":2767:2789   */\n  swap1\n  pop\n    /* \"#utility.yul\":2834:2835   */\n  0x01\n    /* \"#utility.yul\":2828:2832   */\n  dup3\n    /* \"#utility.yul\":2824:2836   */\n  and\n    /* \"#utility.yul\":2855:2873   */\n  dup1\n    /* \"#utility.yul\":2845:2926   */\n  tag_107\n  jumpi\n    /* \"#utility.yul\":2911:2915   */\n  0x7f\n    /* \"#utility.yul\":2903:2909   */\n  dup3\n    /* \"#utility.yul\":2899:2916   */\n  and\n    /* \"#utility.yul\":2889:2916   */\n  swap2\n  pop\n    /* \"#utility.yul\":2845:2926   */\ntag_107:\n    /* \"#utility.yul\":2973:2975   */\n  0x20\n    /* \"#utility.yul\":2965:2971   */\n  dup3\n    /* \"#utility.yul\":2962:2976   */\n  lt\n    /* \"#utility.yul\":2942:2960   */\n  dup2\n    /* \"#utility.yul\":2939:2977   */\n  sub\n    /* \"#utility.yul\":2936:3020   */\n  tag_108\n  jumpi\n    /* \"#utility.yul\":2992:3010   */\n  tag_109\n  tag_50\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":2936:3020   */\ntag_108:\n    /* \"#utility.yul\":2757:3026   */\n  pop\n    /* \"#utility.yul\":2706:3026   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3032:3173   */\ntag_52:\n    /* \"#utility.yul\":3081:3085   */\n  0x00\n    /* \"#utility.yul\":3104:3107   */\n  dup2\n    /* \"#utility.yul\":3096:3107   */\n  swap1\n  pop\n    /* \"#utility.yul\":3127:3130   */\n  dup2\n    /* \"#utility.yul\":3124:3125   */\n  0x00\n    /* \"#utility.yul\":3117:3131   */\n  mstore\n    /* \"#utility.yul\":3161:3165   */\n  0x20\n    /* \"#utility.yul\":3158:3159   */\n  0x00\n    /* \"#utility.yul\":3148:3166   */\n  keccak256\n    /* \"#utility.yul\":3140:3166   */\n  swap1\n  pop\n    /* \"#utility.yul\":3032:3173   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3179:3272   */\ntag_53:\n    /* \"#utility.yul\":3216:3222   */\n  0x00\n    /* \"#utility.yul\":3263:3265   */\n  0x20\n    /* \"#utility.yul\":3258:3260   */\n  0x1f\n    /* \"#utility.yul\":3251:3256   */\n  dup4\n    /* \"#utility.yul\":3247:3261   */\n  add\n    /* \"#utility.yul\":3243:3266   */\n  div\n    /* \"#utility.yul\":3233:3266   */\n  swap1\n  pop\n    /* \"#utility.yul\":3179:3272   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3278:3385   */\ntag_54:\n    /* \"#utility.yul\":3322:3330   */\n  0x00\n    /* \"#utility.yul\":3372:3377   */\n  dup3\n    /* \"#utility.yul\":3366:3370   */\n  dup3\n    /* \"#utility.yul\":3362:3378   */\n  shl\n    /* \"#utility.yul\":3341:3378   */\n  swap1\n  pop\n    /* \"#utility.yul\":3278:3385   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3391:3784   */\ntag_55:\n    /* \"#utility.yul\":3460:3466   */\n  0x00\n    /* \"#utility.yul\":3510:3511   */\n  0x08\n    /* \"#utility.yul\":3498:3508   */\n  dup4\n    /* \"#utility.yul\":3494:3512   */\n  mul\n    /* \"#utility.yul\":3533:3630   */\n  tag_114\n    /* \"#utility.yul\":3563:3629   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3552:3561   */\n  dup3\n    /* \"#utility.yul\":3533:3630   */\n  tag_54\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":3651:3690   */\n  tag_115\n    /* \"#utility.yul\":3681:3689   */\n  dup7\n    /* \"#utility.yul\":3670:3679   */\n  dup4\n    /* \"#utility.yul\":3651:3690   */\n  tag_54\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":3639:3690   */\n  swap6\n  pop\n    /* \"#utility.yul\":3723:3727   */\n  dup1\n    /* \"#utility.yul\":3719:3728   */\n  not\n    /* \"#utility.yul\":3712:3717   */\n  dup5\n    /* \"#utility.yul\":3708:3729   */\n  and\n    /* \"#utility.yul\":3699:3729   */\n  swap4\n  pop\n    /* \"#utility.yul\":3772:3776   */\n  dup1\n    /* \"#utility.yul\":3762:3770   */\n  dup7\n    /* \"#utility.yul\":3758:3777   */\n  and\n    /* \"#utility.yul\":3751:3756   */\n  dup5\n    /* \"#utility.yul\":3748:3778   */\n  or\n    /* \"#utility.yul\":3738:3778   */\n  swap3\n  pop\n    /* \"#utility.yul\":3467:3784   */\n  pop\n  pop\n    /* \"#utility.yul\":3391:3784   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3790:3850   */\ntag_56:\n    /* \"#utility.yul\":3818:3821   */\n  0x00\n    /* \"#utility.yul\":3839:3844   */\n  dup2\n    /* \"#utility.yul\":3832:3844   */\n  swap1\n  pop\n    /* \"#utility.yul\":3790:3850   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3856:3998   */\ntag_57:\n    /* \"#utility.yul\":3906:3915   */\n  0x00\n    /* \"#utility.yul\":3939:3992   */\n  tag_118\n    /* \"#utility.yul\":3957:3991   */\n  tag_119\n    /* \"#utility.yul\":3966:3990   */\n  tag_120\n    /* \"#utility.yul\":3984:3989   */\n  dup5\n    /* \"#utility.yul\":3966:3990   */\n  tag_38\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":3957:3991   */\n  tag_56\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":3939:3992   */\n  tag_38\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":3926:3992   */\n  swap1\n  pop\n    /* \"#utility.yul\":3856:3998   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4004:4079   */\ntag_58:\n    /* \"#utility.yul\":4047:4050   */\n  0x00\n    /* \"#utility.yul\":4068:4073   */\n  dup2\n    /* \"#utility.yul\":4061:4073   */\n  swap1\n  pop\n    /* \"#utility.yul\":4004:4079   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4085:4354   */\ntag_59:\n    /* \"#utility.yul\":4195:4234   */\n  tag_123\n    /* \"#utility.yul\":4226:4233   */\n  dup4\n    /* \"#utility.yul\":4195:4234   */\n  tag_57\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":4256:4347   */\n  tag_124\n    /* \"#utility.yul\":4305:4346   */\n  tag_125\n    /* \"#utility.yul\":4329:4345   */\n  dup3\n    /* \"#utility.yul\":4305:4346   */\n  tag_58\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":4297:4303   */\n  dup5\n    /* \"#utility.yul\":4290:4294   */\n  dup5\n    /* \"#utility.yul\":4284:4295   */\n  sload\n    /* \"#utility.yul\":4256:4347   */\n  tag_55\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":4250:4254   */\n  dup3\n    /* \"#utility.yul\":4243:4348   */\n  sstore\n    /* \"#utility.yul\":4161:4354   */\n  pop\n    /* \"#utility.yul\":4085:4354   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4360:4433   */\ntag_60:\n    /* \"#utility.yul\":4405:4408   */\n  0x00\n    /* \"#utility.yul\":4360:4433   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":4439:4628   */\ntag_61:\n    /* \"#utility.yul\":4516:4548   */\n  tag_128\n  tag_60\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":4557:4622   */\n  tag_129\n    /* \"#utility.yul\":4615:4621   */\n  dup2\n    /* \"#utility.yul\":4607:4613   */\n  dup5\n    /* \"#utility.yul\":4601:4605   */\n  dup5\n    /* \"#utility.yul\":4557:4622   */\n  tag_59\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":4492:4628   */\n  pop\n    /* \"#utility.yul\":4439:4628   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4634:4820   */\ntag_62:\n    /* \"#utility.yul\":4694:4814   */\ntag_131:\n    /* \"#utility.yul\":4711:4714   */\n  dup2\n    /* \"#utility.yul\":4704:4709   */\n  dup2\n    /* \"#utility.yul\":4701:4715   */\n  lt\n    /* \"#utility.yul\":4694:4814   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":4765:4804   */\n  tag_134\n    /* \"#utility.yul\":4802:4803   */\n  0x00\n    /* \"#utility.yul\":4795:4800   */\n  dup3\n    /* \"#utility.yul\":4765:4804   */\n  tag_61\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":4738:4739   */\n  0x01\n    /* \"#utility.yul\":4731:4736   */\n  dup2\n    /* \"#utility.yul\":4727:4740   */\n  add\n    /* \"#utility.yul\":4718:4740   */\n  swap1\n  pop\n    /* \"#utility.yul\":4694:4814   */\n  jump(tag_131)\ntag_133:\n    /* \"#utility.yul\":4634:4820   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4826:5369   */\ntag_63:\n    /* \"#utility.yul\":4927:4929   */\n  0x1f\n    /* \"#utility.yul\":4922:4925   */\n  dup3\n    /* \"#utility.yul\":4919:4930   */\n  gt\n    /* \"#utility.yul\":4916:5362   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":4961:4999   */\n  tag_137\n    /* \"#utility.yul\":4993:4998   */\n  dup2\n    /* \"#utility.yul\":4961:4999   */\n  tag_52\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":5045:5074   */\n  tag_138\n    /* \"#utility.yul\":5063:5073   */\n  dup5\n    /* \"#utility.yul\":5045:5074   */\n  tag_53\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":5035:5043   */\n  dup2\n    /* \"#utility.yul\":5031:5075   */\n  add\n    /* \"#utility.yul\":5228:5230   */\n  0x20\n    /* \"#utility.yul\":5216:5226   */\n  dup6\n    /* \"#utility.yul\":5213:5231   */\n  lt\n    /* \"#utility.yul\":5210:5259   */\n  iszero\n  tag_139\n  jumpi\n    /* \"#utility.yul\":5249:5257   */\n  dup2\n    /* \"#utility.yul\":5234:5257   */\n  swap1\n  pop\n    /* \"#utility.yul\":5210:5259   */\ntag_139:\n    /* \"#utility.yul\":5272:5352   */\n  tag_140\n    /* \"#utility.yul\":5328:5350   */\n  tag_141\n    /* \"#utility.yul\":5346:5349   */\n  dup6\n    /* \"#utility.yul\":5328:5350   */\n  tag_53\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":5318:5326   */\n  dup4\n    /* \"#utility.yul\":5314:5351   */\n  add\n    /* \"#utility.yul\":5301:5312   */\n  dup3\n    /* \"#utility.yul\":5272:5352   */\n  tag_62\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":4931:5362   */\n  pop\n  pop\n    /* \"#utility.yul\":4916:5362   */\ntag_136:\n    /* \"#utility.yul\":4826:5369   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5375:5492   */\ntag_64:\n    /* \"#utility.yul\":5429:5437   */\n  0x00\n    /* \"#utility.yul\":5479:5484   */\n  dup3\n    /* \"#utility.yul\":5473:5477   */\n  dup3\n    /* \"#utility.yul\":5469:5485   */\n  shr\n    /* \"#utility.yul\":5448:5485   */\n  swap1\n  pop\n    /* \"#utility.yul\":5375:5492   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5498:5667   */\ntag_65:\n    /* \"#utility.yul\":5542:5548   */\n  0x00\n    /* \"#utility.yul\":5575:5626   */\n  tag_144\n    /* \"#utility.yul\":5623:5624   */\n  0x00\n    /* \"#utility.yul\":5619:5625   */\n  not\n    /* \"#utility.yul\":5611:5616   */\n  dup5\n    /* \"#utility.yul\":5608:5609   */\n  0x08\n    /* \"#utility.yul\":5604:5617   */\n  mul\n    /* \"#utility.yul\":5575:5626   */\n  tag_64\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":5571:5627   */\n  not\n    /* \"#utility.yul\":5656:5660   */\n  dup1\n    /* \"#utility.yul\":5650:5654   */\n  dup4\n    /* \"#utility.yul\":5646:5661   */\n  and\n    /* \"#utility.yul\":5636:5661   */\n  swap2\n  pop\n    /* \"#utility.yul\":5549:5667   */\n  pop\n    /* \"#utility.yul\":5498:5667   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5672:5967   */\ntag_66:\n    /* \"#utility.yul\":5748:5752   */\n  0x00\n    /* \"#utility.yul\":5894:5923   */\n  tag_146\n    /* \"#utility.yul\":5919:5922   */\n  dup4\n    /* \"#utility.yul\":5913:5917   */\n  dup4\n    /* \"#utility.yul\":5894:5923   */\n  tag_65\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":5886:5923   */\n  swap2\n  pop\n    /* \"#utility.yul\":5956:5959   */\n  dup3\n    /* \"#utility.yul\":5953:5954   */\n  0x02\n    /* \"#utility.yul\":5949:5960   */\n  mul\n    /* \"#utility.yul\":5943:5947   */\n  dup3\n    /* \"#utility.yul\":5940:5961   */\n  or\n    /* \"#utility.yul\":5932:5961   */\n  swap1\n  pop\n    /* \"#utility.yul\":5672:5967   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5972:7367   */\ntag_8:\n    /* \"#utility.yul\":6089:6126   */\n  tag_148\n    /* \"#utility.yul\":6122:6125   */\n  dup3\n    /* \"#utility.yul\":6089:6126   */\n  tag_48\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":6191:6209   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":6183:6189   */\n  dup2\n    /* \"#utility.yul\":6180:6210   */\n  gt\n    /* \"#utility.yul\":6177:6233   */\n  iszero\n  tag_149\n  jumpi\n    /* \"#utility.yul\":6213:6231   */\n  tag_150\n  tag_49\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":6177:6233   */\ntag_149:\n    /* \"#utility.yul\":6257:6295   */\n  tag_151\n    /* \"#utility.yul\":6289:6293   */\n  dup3\n    /* \"#utility.yul\":6283:6294   */\n  sload\n    /* \"#utility.yul\":6257:6295   */\n  tag_51\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":6342:6409   */\n  tag_152\n    /* \"#utility.yul\":6402:6408   */\n  dup3\n    /* \"#utility.yul\":6394:6400   */\n  dup3\n    /* \"#utility.yul\":6388:6392   */\n  dup6\n    /* \"#utility.yul\":6342:6409   */\n  tag_63\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":6436:6437   */\n  0x00\n    /* \"#utility.yul\":6460:6464   */\n  0x20\n    /* \"#utility.yul\":6447:6464   */\n  swap1\n  pop\n    /* \"#utility.yul\":6492:6494   */\n  0x1f\n    /* \"#utility.yul\":6484:6490   */\n  dup4\n    /* \"#utility.yul\":6481:6495   */\n  gt\n    /* \"#utility.yul\":6509:6510   */\n  0x01\n    /* \"#utility.yul\":6504:7122   */\n  dup2\n  eq\n  tag_154\n  jumpi\n    /* \"#utility.yul\":7166:7167   */\n  0x00\n    /* \"#utility.yul\":7183:7189   */\n  dup5\n    /* \"#utility.yul\":7180:7257   */\n  iszero\n  tag_155\n  jumpi\n    /* \"#utility.yul\":7232:7241   */\n  dup3\n    /* \"#utility.yul\":7227:7230   */\n  dup8\n    /* \"#utility.yul\":7223:7242   */\n  add\n    /* \"#utility.yul\":7217:7243   */\n  mload\n    /* \"#utility.yul\":7208:7243   */\n  swap1\n  pop\n    /* \"#utility.yul\":7180:7257   */\ntag_155:\n    /* \"#utility.yul\":7283:7350   */\n  tag_156\n    /* \"#utility.yul\":7343:7349   */\n  dup6\n    /* \"#utility.yul\":7336:7341   */\n  dup3\n    /* \"#utility.yul\":7283:7350   */\n  tag_66\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":7277:7281   */\n  dup7\n    /* \"#utility.yul\":7270:7351   */\n  sstore\n    /* \"#utility.yul\":7139:7361   */\n  pop\n    /* \"#utility.yul\":6474:7361   */\n  jump(tag_153)\n    /* \"#utility.yul\":6504:7122   */\ntag_154:\n    /* \"#utility.yul\":6556:6560   */\n  0x1f\n    /* \"#utility.yul\":6552:6561   */\n  not\n    /* \"#utility.yul\":6544:6550   */\n  dup5\n    /* \"#utility.yul\":6540:6562   */\n  and\n    /* \"#utility.yul\":6590:6627   */\n  tag_157\n    /* \"#utility.yul\":6622:6626   */\n  dup7\n    /* \"#utility.yul\":6590:6627   */\n  tag_52\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":6649:6650   */\n  0x00\n    /* \"#utility.yul\":6663:6871   */\ntag_158:\n    /* \"#utility.yul\":6677:6684   */\n  dup3\n    /* \"#utility.yul\":6674:6675   */\n  dup2\n    /* \"#utility.yul\":6671:6685   */\n  lt\n    /* \"#utility.yul\":6663:6871   */\n  iszero\n  tag_160\n  jumpi\n    /* \"#utility.yul\":6756:6765   */\n  dup5\n    /* \"#utility.yul\":6751:6754   */\n  dup10\n    /* \"#utility.yul\":6747:6766   */\n  add\n    /* \"#utility.yul\":6741:6767   */\n  mload\n    /* \"#utility.yul\":6733:6739   */\n  dup3\n    /* \"#utility.yul\":6726:6768   */\n  sstore\n    /* \"#utility.yul\":6807:6808   */\n  0x01\n    /* \"#utility.yul\":6799:6805   */\n  dup3\n    /* \"#utility.yul\":6795:6809   */\n  add\n    /* \"#utility.yul\":6785:6809   */\n  swap2\n  pop\n    /* \"#utility.yul\":6854:6856   */\n  0x20\n    /* \"#utility.yul\":6843:6852   */\n  dup6\n    /* \"#utility.yul\":6839:6857   */\n  add\n    /* \"#utility.yul\":6826:6857   */\n  swap5\n  pop\n    /* \"#utility.yul\":6700:6704   */\n  0x20\n    /* \"#utility.yul\":6697:6698   */\n  dup2\n    /* \"#utility.yul\":6693:6705   */\n  add\n    /* \"#utility.yul\":6688:6705   */\n  swap1\n  pop\n    /* \"#utility.yul\":6663:6871   */\n  jump(tag_158)\ntag_160:\n    /* \"#utility.yul\":6899:6905   */\n  dup7\n    /* \"#utility.yul\":6890:6897   */\n  dup4\n    /* \"#utility.yul\":6887:6906   */\n  lt\n    /* \"#utility.yul\":6884:7063   */\n  iszero\n  tag_161\n  jumpi\n    /* \"#utility.yul\":6957:6966   */\n  dup5\n    /* \"#utility.yul\":6952:6955   */\n  dup10\n    /* \"#utility.yul\":6948:6967   */\n  add\n    /* \"#utility.yul\":6942:6968   */\n  mload\n    /* \"#utility.yul\":7000:7048   */\n  tag_162\n    /* \"#utility.yul\":7042:7046   */\n  0x1f\n    /* \"#utility.yul\":7034:7040   */\n  dup10\n    /* \"#utility.yul\":7030:7047   */\n  and\n    /* \"#utility.yul\":7019:7028   */\n  dup3\n    /* \"#utility.yul\":7000:7048   */\n  tag_65\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":6992:6998   */\n  dup4\n    /* \"#utility.yul\":6985:7049   */\n  sstore\n    /* \"#utility.yul\":6907:7063   */\n  pop\n    /* \"#utility.yul\":6884:7063   */\ntag_161:\n    /* \"#utility.yul\":7109:7110   */\n  0x01\n    /* \"#utility.yul\":7105:7106   */\n  0x02\n    /* \"#utility.yul\":7097:7103   */\n  dup9\n    /* \"#utility.yul\":7093:7107   */\n  mul\n    /* \"#utility.yul\":7089:7111   */\n  add\n    /* \"#utility.yul\":7083:7087   */\n  dup9\n    /* \"#utility.yul\":7076:7112   */\n  sstore\n    /* \"#utility.yul\":6511:7122   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":6474:7361   */\ntag_153:\n  pop\n    /* \"#utility.yul\":6064:7367   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5972:7367   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7373:7542   */\ntag_67:\n    /* \"#utility.yul\":7457:7468   */\n  0x00\n    /* \"#utility.yul\":7491:7497   */\n  dup3\n    /* \"#utility.yul\":7486:7489   */\n  dup3\n    /* \"#utility.yul\":7479:7498   */\n  mstore\n    /* \"#utility.yul\":7531:7535   */\n  0x20\n    /* \"#utility.yul\":7526:7529   */\n  dup3\n    /* \"#utility.yul\":7522:7536   */\n  add\n    /* \"#utility.yul\":7507:7536   */\n  swap1\n  pop\n    /* \"#utility.yul\":7373:7542   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7548:7781   */\ntag_68:\n    /* \"#utility.yul\":7688:7722   */\n  0x4d79476f7620746f6b656e20737570706c79206d75737420626520657175616c\n    /* \"#utility.yul\":7684:7685   */\n  0x00\n    /* \"#utility.yul\":7676:7682   */\n  dup3\n    /* \"#utility.yul\":7672:7686   */\n  add\n    /* \"#utility.yul\":7665:7723   */\n  mstore\n    /* \"#utility.yul\":7757:7773   */\n  0x20746f203230206d696c6c696f6e000000000000000000000000000000000000\n    /* \"#utility.yul\":7752:7754   */\n  0x20\n    /* \"#utility.yul\":7744:7750   */\n  dup3\n    /* \"#utility.yul\":7740:7755   */\n  add\n    /* \"#utility.yul\":7733:7774   */\n  mstore\n    /* \"#utility.yul\":7548:7781   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7787:8153   */\ntag_69:\n    /* \"#utility.yul\":7929:7932   */\n  0x00\n    /* \"#utility.yul\":7950:8017   */\n  tag_166\n    /* \"#utility.yul\":8014:8016   */\n  0x2e\n    /* \"#utility.yul\":8009:8012   */\n  dup4\n    /* \"#utility.yul\":7950:8017   */\n  tag_67\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":7943:8017   */\n  swap2\n  pop\n    /* \"#utility.yul\":8026:8119   */\n  tag_167\n    /* \"#utility.yul\":8115:8118   */\n  dup3\n    /* \"#utility.yul\":8026:8119   */\n  tag_68\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":8144:8146   */\n  0x40\n    /* \"#utility.yul\":8139:8142   */\n  dup3\n    /* \"#utility.yul\":8135:8147   */\n  add\n    /* \"#utility.yul\":8128:8147   */\n  swap1\n  pop\n    /* \"#utility.yul\":7787:8153   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8159:8578   */\ntag_13:\n    /* \"#utility.yul\":8325:8329   */\n  0x00\n    /* \"#utility.yul\":8363:8365   */\n  0x20\n    /* \"#utility.yul\":8352:8361   */\n  dup3\n    /* \"#utility.yul\":8348:8366   */\n  add\n    /* \"#utility.yul\":8340:8366   */\n  swap1\n  pop\n    /* \"#utility.yul\":8412:8421   */\n  dup2\n    /* \"#utility.yul\":8406:8410   */\n  dup2\n    /* \"#utility.yul\":8402:8422   */\n  sub\n    /* \"#utility.yul\":8398:8399   */\n  0x00\n    /* \"#utility.yul\":8387:8396   */\n  dup4\n    /* \"#utility.yul\":8383:8400   */\n  add\n    /* \"#utility.yul\":8376:8423   */\n  mstore\n    /* \"#utility.yul\":8440:8571   */\n  tag_169\n    /* \"#utility.yul\":8566:8570   */\n  dup2\n    /* \"#utility.yul\":8440:8571   */\n  tag_69\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":8432:8571   */\n  swap1\n  pop\n    /* \"#utility.yul\":8159:8578   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8584:8702   */\ntag_70:\n    /* \"#utility.yul\":8671:8695   */\n  tag_171\n    /* \"#utility.yul\":8689:8694   */\n  dup2\n    /* \"#utility.yul\":8671:8695   */\n  tag_42\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":8666:8669   */\n  dup3\n    /* \"#utility.yul\":8659:8696   */\n  mstore\n    /* \"#utility.yul\":8584:8702   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8708:8930   */\ntag_20:\n    /* \"#utility.yul\":8801:8805   */\n  0x00\n    /* \"#utility.yul\":8839:8841   */\n  0x20\n    /* \"#utility.yul\":8828:8837   */\n  dup3\n    /* \"#utility.yul\":8824:8842   */\n  add\n    /* \"#utility.yul\":8816:8842   */\n  swap1\n  pop\n    /* \"#utility.yul\":8852:8923   */\n  tag_173\n    /* \"#utility.yul\":8920:8921   */\n  0x00\n    /* \"#utility.yul\":8909:8918   */\n  dup4\n    /* \"#utility.yul\":8905:8922   */\n  add\n    /* \"#utility.yul\":8896:8902   */\n  dup5\n    /* \"#utility.yul\":8852:8923   */\n  tag_70\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":8708:8930   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8936:9116   */\ntag_71:\n    /* \"#utility.yul\":8984:9061   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":8981:8982   */\n  0x00\n    /* \"#utility.yul\":8974:9062   */\n  mstore\n    /* \"#utility.yul\":9081:9085   */\n  0x11\n    /* \"#utility.yul\":9078:9079   */\n  0x04\n    /* \"#utility.yul\":9071:9086   */\n  mstore\n    /* \"#utility.yul\":9105:9109   */\n  0x24\n    /* \"#utility.yul\":9102:9103   */\n  0x00\n    /* \"#utility.yul\":9095:9110   */\n  revert\n    /* \"#utility.yul\":9122:9313   */\ntag_26:\n    /* \"#utility.yul\":9162:9165   */\n  0x00\n    /* \"#utility.yul\":9181:9201   */\n  tag_176\n    /* \"#utility.yul\":9199:9200   */\n  dup3\n    /* \"#utility.yul\":9181:9201   */\n  tag_38\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":9176:9201   */\n  swap2\n  pop\n    /* \"#utility.yul\":9215:9235   */\n  tag_177\n    /* \"#utility.yul\":9233:9234   */\n  dup4\n    /* \"#utility.yul\":9215:9235   */\n  tag_38\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":9210:9235   */\n  swap3\n  pop\n    /* \"#utility.yul\":9258:9259   */\n  dup3\n    /* \"#utility.yul\":9255:9256   */\n  dup3\n    /* \"#utility.yul\":9251:9260   */\n  add\n    /* \"#utility.yul\":9244:9260   */\n  swap1\n  pop\n    /* \"#utility.yul\":9279:9282   */\n  dup1\n    /* \"#utility.yul\":9276:9277   */\n  dup3\n    /* \"#utility.yul\":9273:9283   */\n  gt\n    /* \"#utility.yul\":9270:9306   */\n  iszero\n  tag_178\n  jumpi\n    /* \"#utility.yul\":9286:9304   */\n  tag_179\n  tag_71\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":9270:9306   */\ntag_178:\n    /* \"#utility.yul\":9122:9313   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9319:9437   */\ntag_72:\n    /* \"#utility.yul\":9406:9430   */\n  tag_181\n    /* \"#utility.yul\":9424:9429   */\n  dup2\n    /* \"#utility.yul\":9406:9430   */\n  tag_38\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":9401:9404   */\n  dup3\n    /* \"#utility.yul\":9394:9431   */\n  mstore\n    /* \"#utility.yul\":9319:9437   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9443:9885   */\ntag_30:\n    /* \"#utility.yul\":9592:9596   */\n  0x00\n    /* \"#utility.yul\":9630:9632   */\n  0x60\n    /* \"#utility.yul\":9619:9628   */\n  dup3\n    /* \"#utility.yul\":9615:9633   */\n  add\n    /* \"#utility.yul\":9607:9633   */\n  swap1\n  pop\n    /* \"#utility.yul\":9643:9714   */\n  tag_183\n    /* \"#utility.yul\":9711:9712   */\n  0x00\n    /* \"#utility.yul\":9700:9709   */\n  dup4\n    /* \"#utility.yul\":9696:9713   */\n  add\n    /* \"#utility.yul\":9687:9693   */\n  dup7\n    /* \"#utility.yul\":9643:9714   */\n  tag_70\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":9724:9796   */\n  tag_184\n    /* \"#utility.yul\":9792:9794   */\n  0x20\n    /* \"#utility.yul\":9781:9790   */\n  dup4\n    /* \"#utility.yul\":9777:9795   */\n  add\n    /* \"#utility.yul\":9768:9774   */\n  dup6\n    /* \"#utility.yul\":9724:9796   */\n  tag_72\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":9806:9878   */\n  tag_185\n    /* \"#utility.yul\":9874:9876   */\n  0x40\n    /* \"#utility.yul\":9863:9872   */\n  dup4\n    /* \"#utility.yul\":9859:9877   */\n  add\n    /* \"#utility.yul\":9850:9856   */\n  dup5\n    /* \"#utility.yul\":9806:9878   */\n  tag_72\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":9443:9885   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9891:10113   */\ntag_34:\n    /* \"#utility.yul\":9984:9988   */\n  0x00\n    /* \"#utility.yul\":10022:10024   */\n  0x20\n    /* \"#utility.yul\":10011:10020   */\n  dup3\n    /* \"#utility.yul\":10007:10025   */\n  add\n    /* \"#utility.yul\":9999:10025   */\n  swap1\n  pop\n    /* \"#utility.yul\":10035:10106   */\n  tag_187\n    /* \"#utility.yul\":10103:10104   */\n  0x00\n    /* \"#utility.yul\":10092:10101   */\n  dup4\n    /* \"#utility.yul\":10088:10105   */\n  add\n    /* \"#utility.yul\":10079:10085   */\n  dup5\n    /* \"#utility.yul\":10035:10106   */\n  tag_72\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":9891:10113   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":115:1566  contract MyGov is ERC20 {... */\ntag_16:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":115:1566  contract MyGov is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x95d89b41\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xd915902e\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xd915902e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xde5f72fd\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe6664928\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb3afcee4\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc7f48df7\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x34dcb04e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39c94d2d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":171:204  ERC20 public USD_BaseCoinContract */\n    tag_8:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":890:984  function donateMyGovToken(uint amount) public {... */\n    tag_9:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_11:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_12:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1140:1253  function isMyGovMember(address _address) public view returns(bool){... */\n    tag_13:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":990:1134  function getUSDBalanceOfAccount(address _account) public view returns (uint256) {... */\n    tag_14:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":776:884  function donateUSD(uint amount) public {... */\n    tag_15:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_16:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1256:1563  function faucet() public {... */\n    tag_17:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      stop\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":630:770  function emptyTokenSupply() public {... */\n    tag_18:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_86\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_87\n      jump\t// in\n    tag_88:\n      dup1\n      iszero\n      tag_89\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_90\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_89)\n    tag_90:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_91:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_91\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_89:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":171:204  ERC20 public USD_BaseCoinContract */\n    tag_46:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":890:984  function donateMyGovToken(uint amount) public {... */\n    tag_52:\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":946:977  transfer(address(this), amount) */\n      tag_106\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":963:967  this */\n      address\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":970:976  amount */\n      dup3\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":946:954  transfer */\n      tag_63\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":946:977  transfer(address(this), amount) */\n      jump\t// in\n    tag_106:\n      pop\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":890:984  function donateMyGovToken(uint amount) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_109\n      swap1\n      tag_87\n      jump\t// in\n    tag_109:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_110\n      swap1\n      tag_87\n      jump\t// in\n    tag_110:\n      dup1\n      iszero\n      tag_111\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_112\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_111)\n    tag_112:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_113:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_113\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_111:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1140:1253  function isMyGovMember(address _address) public view returns(bool){... */\n    tag_67:\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1201:1205  bool */\n      0x00\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1245:1246  0 */\n      dup1\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1223:1242  balanceOf(_address) */\n      tag_118\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1233:1241  _address */\n      dup4\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1223:1232  balanceOf */\n      tag_56\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1223:1242  balanceOf(_address) */\n      jump\t// in\n    tag_118:\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1223:1246  balanceOf(_address) > 0 */\n      gt\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1216:1246  return balanceOf(_address) > 0 */\n      swap1\n      pop\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1140:1253  function isMyGovMember(address _address) public view returns(bool){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":990:1134  function getUSDBalanceOfAccount(address _account) public view returns (uint256) {... */\n    tag_71:\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1061:1068  uint256 */\n      0x00\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1087:1107  USD_BaseCoinContract */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1087:1117  USD_BaseCoinContract.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1118:1126  _account */\n      dup4\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1087:1127  USD_BaseCoinContract.balanceOf(_account) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_123\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_123:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1080:1127  return USD_BaseCoinContract.balanceOf(_account) */\n      swap1\n      pop\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":990:1134  function getUSDBalanceOfAccount(address _account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":776:884  function donateUSD(uint amount) public {... */\n    tag_75:\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":825:845  USD_BaseCoinContract */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":825:854  USD_BaseCoinContract.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":863:867  this */\n      address\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":870:876  amount */\n      dup4\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":825:877  USD_BaseCoinContract.transfer(address(this), amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap3\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_130\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_131\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      pop\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":776:884  function donateUSD(uint amount) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1256:1563  function faucet() public {... */\n    tag_82:\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1321:1322  0 */\n      0x00\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1294:1318  balanceOf(address(this)) */\n      tag_135\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1312:1316  this */\n      address\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1294:1303  balanceOf */\n      tag_56\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1294:1318  balanceOf(address(this)) */\n      jump\t// in\n    tag_135:\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1294:1322  balanceOf(address(this)) > 0 */\n      gt\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1286:1353  require(balanceOf(address(this)) > 0, \"No tokens left on contract\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1366:1376  usedFaucet */\n      0x07\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1366:1388  usedFaucet[msg.sender] */\n      0x00\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1377:1387  msg.sender */\n      caller\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1366:1388  usedFaucet[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1365:1388  !usedFaucet[msg.sender] */\n      iszero\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1357:1433  require(!usedFaucet[msg.sender], \"You already received token from contract\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1448:1452  this */\n      address\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1448:1461  this.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1462:1472  msg.sender */\n      caller\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1474:1476  10 */\n      0x0a\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1448:1477  this.transfer(msg.sender, 10) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap3\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_145\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_146\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_146:\n      pop\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1545:1549  true */\n      0x01\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1520:1530  usedFaucet */\n      0x07\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1520:1542  usedFaucet[msg.sender] */\n      0x00\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1531:1541  msg.sender */\n      caller\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1520:1542  usedFaucet[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1520:1549  usedFaucet[msg.sender] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":1256:1563  function faucet() public {... */\n      jump\t// out\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":630:770  function emptyTokenSupply() public {... */\n    tag_84:\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":683:692  isTesting */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":675:737  require(isTesting, \"Function can only be called in test mode\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":762:763  0 */\n      0x00\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":747:759  token_supply */\n      0x05\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":747:763  token_supply = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":630:770  function emptyTokenSupply() public {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_157\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_158\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_163\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_165\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_172\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_174\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_175\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_177\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_178\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_180)\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_181\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_183\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_184)\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_185\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_186:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_187:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_188:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_230:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_230)\n    tag_232:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_189:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_190:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_235\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_186\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":818:889   */\n      tag_236\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_187\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_237\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_188\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":988:1017   */\n      tag_238\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_189\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_25:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_240\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_190\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_192:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_194:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_195:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_246\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_194\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_196:\n        /* \"#utility.yul\":1983:2007   */\n      tag_248\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_195\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_249\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_249:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_197:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_251\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_196\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_198:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_199:\n        /* \"#utility.yul\":2339:2363   */\n      tag_254\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_198\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_255\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_255:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_200:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_257\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_199\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_28:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_260\n      tag_192\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":2632:2751   */\n    tag_259:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_261\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_197\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_262\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_200\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_201:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_202:\n        /* \"#utility.yul\":3196:3217   */\n      tag_265\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_201\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_31:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_267\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_202\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_203:\n        /* \"#utility.yul\":3533:3557   */\n      tag_269\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_198\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_35:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_271\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_203\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_38:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_274\n      tag_192\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":3908:4027   */\n    tag_273:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_275\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_197\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_276\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_197\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_277\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_200\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_204:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_205:\n        /* \"#utility.yul\":4598:4620   */\n      tag_280\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_204\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_44:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_282\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_205\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:4913   */\n    tag_206:\n        /* \"#utility.yul\":4881:4884   */\n      0x00\n        /* \"#utility.yul\":4902:4907   */\n      dup2\n        /* \"#utility.yul\":4895:4907   */\n      swap1\n      pop\n        /* \"#utility.yul\":4853:4913   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4919:5061   */\n    tag_207:\n        /* \"#utility.yul\":4969:4978   */\n      0x00\n        /* \"#utility.yul\":5002:5055   */\n      tag_285\n        /* \"#utility.yul\":5020:5054   */\n      tag_286\n        /* \"#utility.yul\":5029:5053   */\n      tag_287\n        /* \"#utility.yul\":5047:5052   */\n      dup5\n        /* \"#utility.yul\":5029:5053   */\n      tag_194\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":5020:5054   */\n      tag_206\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":5002:5055   */\n      tag_194\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":4989:5055   */\n      swap1\n      pop\n        /* \"#utility.yul\":4919:5061   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5067:5193   */\n    tag_208:\n        /* \"#utility.yul\":5117:5126   */\n      0x00\n        /* \"#utility.yul\":5150:5187   */\n      tag_289\n        /* \"#utility.yul\":5181:5186   */\n      dup3\n        /* \"#utility.yul\":5150:5187   */\n      tag_207\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":5137:5187   */\n      swap1\n      pop\n        /* \"#utility.yul\":5067:5193   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5199:5338   */\n    tag_209:\n        /* \"#utility.yul\":5262:5271   */\n      0x00\n        /* \"#utility.yul\":5295:5332   */\n      tag_291\n        /* \"#utility.yul\":5326:5331   */\n      dup3\n        /* \"#utility.yul\":5295:5332   */\n      tag_208\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":5282:5332   */\n      swap1\n      pop\n        /* \"#utility.yul\":5199:5338   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5344:5501   */\n    tag_210:\n        /* \"#utility.yul\":5444:5494   */\n      tag_293\n        /* \"#utility.yul\":5488:5493   */\n      dup2\n        /* \"#utility.yul\":5444:5494   */\n      tag_209\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":5439:5442   */\n      dup3\n        /* \"#utility.yul\":5432:5495   */\n      mstore\n        /* \"#utility.yul\":5344:5501   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5507:5755   */\n    tag_48:\n        /* \"#utility.yul\":5613:5617   */\n      0x00\n        /* \"#utility.yul\":5651:5653   */\n      0x20\n        /* \"#utility.yul\":5640:5649   */\n      dup3\n        /* \"#utility.yul\":5636:5654   */\n      add\n        /* \"#utility.yul\":5628:5654   */\n      swap1\n      pop\n        /* \"#utility.yul\":5664:5748   */\n      tag_295\n        /* \"#utility.yul\":5745:5746   */\n      0x00\n        /* \"#utility.yul\":5734:5743   */\n      dup4\n        /* \"#utility.yul\":5730:5747   */\n      add\n        /* \"#utility.yul\":5721:5727   */\n      dup5\n        /* \"#utility.yul\":5664:5748   */\n      tag_210\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":5507:5755   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5761:6090   */\n    tag_51:\n        /* \"#utility.yul\":5820:5826   */\n      0x00\n        /* \"#utility.yul\":5869:5871   */\n      0x20\n        /* \"#utility.yul\":5857:5866   */\n      dup3\n        /* \"#utility.yul\":5848:5855   */\n      dup5\n        /* \"#utility.yul\":5844:5867   */\n      sub\n        /* \"#utility.yul\":5840:5872   */\n      slt\n        /* \"#utility.yul\":5837:5956   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":5875:5954   */\n      tag_298\n      tag_192\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":5837:5956   */\n    tag_297:\n        /* \"#utility.yul\":5995:5996   */\n      0x00\n        /* \"#utility.yul\":6020:6073   */\n      tag_299\n        /* \"#utility.yul\":6065:6072   */\n      dup5\n        /* \"#utility.yul\":6056:6062   */\n      dup3\n        /* \"#utility.yul\":6045:6054   */\n      dup6\n        /* \"#utility.yul\":6041:6063   */\n      add\n        /* \"#utility.yul\":6020:6073   */\n      tag_200\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":6010:6073   */\n      swap2\n      pop\n        /* \"#utility.yul\":5966:6083   */\n      pop\n        /* \"#utility.yul\":5761:6090   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6096:6425   */\n    tag_55:\n        /* \"#utility.yul\":6155:6161   */\n      0x00\n        /* \"#utility.yul\":6204:6206   */\n      0x20\n        /* \"#utility.yul\":6192:6201   */\n      dup3\n        /* \"#utility.yul\":6183:6190   */\n      dup5\n        /* \"#utility.yul\":6179:6202   */\n      sub\n        /* \"#utility.yul\":6175:6207   */\n      slt\n        /* \"#utility.yul\":6172:6291   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":6210:6289   */\n      tag_302\n      tag_192\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":6172:6291   */\n    tag_301:\n        /* \"#utility.yul\":6330:6331   */\n      0x00\n        /* \"#utility.yul\":6355:6408   */\n      tag_303\n        /* \"#utility.yul\":6400:6407   */\n      dup5\n        /* \"#utility.yul\":6391:6397   */\n      dup3\n        /* \"#utility.yul\":6380:6389   */\n      dup6\n        /* \"#utility.yul\":6376:6398   */\n      add\n        /* \"#utility.yul\":6355:6408   */\n      tag_197\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":6345:6408   */\n      swap2\n      pop\n        /* \"#utility.yul\":6301:6418   */\n      pop\n        /* \"#utility.yul\":6096:6425   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6431:6905   */\n    tag_78:\n        /* \"#utility.yul\":6499:6505   */\n      0x00\n        /* \"#utility.yul\":6507:6513   */\n      dup1\n        /* \"#utility.yul\":6556:6558   */\n      0x40\n        /* \"#utility.yul\":6544:6553   */\n      dup4\n        /* \"#utility.yul\":6535:6542   */\n      dup6\n        /* \"#utility.yul\":6531:6554   */\n      sub\n        /* \"#utility.yul\":6527:6559   */\n      slt\n        /* \"#utility.yul\":6524:6643   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":6562:6641   */\n      tag_306\n      tag_192\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":6524:6643   */\n    tag_305:\n        /* \"#utility.yul\":6682:6683   */\n      0x00\n        /* \"#utility.yul\":6707:6760   */\n      tag_307\n        /* \"#utility.yul\":6752:6759   */\n      dup6\n        /* \"#utility.yul\":6743:6749   */\n      dup3\n        /* \"#utility.yul\":6732:6741   */\n      dup7\n        /* \"#utility.yul\":6728:6750   */\n      add\n        /* \"#utility.yul\":6707:6760   */\n      tag_197\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":6697:6760   */\n      swap3\n      pop\n        /* \"#utility.yul\":6653:6770   */\n      pop\n        /* \"#utility.yul\":6809:6811   */\n      0x20\n        /* \"#utility.yul\":6835:6888   */\n      tag_308\n        /* \"#utility.yul\":6880:6887   */\n      dup6\n        /* \"#utility.yul\":6871:6877   */\n      dup3\n        /* \"#utility.yul\":6860:6869   */\n      dup7\n        /* \"#utility.yul\":6856:6878   */\n      add\n        /* \"#utility.yul\":6835:6888   */\n      tag_197\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":6825:6888   */\n      swap2\n      pop\n        /* \"#utility.yul\":6780:6898   */\n      pop\n        /* \"#utility.yul\":6431:6905   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6911:7091   */\n    tag_211:\n        /* \"#utility.yul\":6959:7036   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6956:6957   */\n      0x00\n        /* \"#utility.yul\":6949:7037   */\n      mstore\n        /* \"#utility.yul\":7056:7060   */\n      0x22\n        /* \"#utility.yul\":7053:7054   */\n      0x04\n        /* \"#utility.yul\":7046:7061   */\n      mstore\n        /* \"#utility.yul\":7080:7084   */\n      0x24\n        /* \"#utility.yul\":7077:7078   */\n      0x00\n        /* \"#utility.yul\":7070:7085   */\n      revert\n        /* \"#utility.yul\":7097:7417   */\n    tag_87:\n        /* \"#utility.yul\":7141:7147   */\n      0x00\n        /* \"#utility.yul\":7178:7179   */\n      0x02\n        /* \"#utility.yul\":7172:7176   */\n      dup3\n        /* \"#utility.yul\":7168:7180   */\n      div\n        /* \"#utility.yul\":7158:7180   */\n      swap1\n      pop\n        /* \"#utility.yul\":7225:7226   */\n      0x01\n        /* \"#utility.yul\":7219:7223   */\n      dup3\n        /* \"#utility.yul\":7215:7227   */\n      and\n        /* \"#utility.yul\":7246:7264   */\n      dup1\n        /* \"#utility.yul\":7236:7317   */\n      tag_311\n      jumpi\n        /* \"#utility.yul\":7302:7306   */\n      0x7f\n        /* \"#utility.yul\":7294:7300   */\n      dup3\n        /* \"#utility.yul\":7290:7307   */\n      and\n        /* \"#utility.yul\":7280:7307   */\n      swap2\n      pop\n        /* \"#utility.yul\":7236:7317   */\n    tag_311:\n        /* \"#utility.yul\":7364:7366   */\n      0x20\n        /* \"#utility.yul\":7356:7362   */\n      dup3\n        /* \"#utility.yul\":7353:7367   */\n      lt\n        /* \"#utility.yul\":7333:7351   */\n      dup2\n        /* \"#utility.yul\":7330:7368   */\n      sub\n        /* \"#utility.yul\":7327:7411   */\n      tag_312\n      jumpi\n        /* \"#utility.yul\":7383:7401   */\n      tag_313\n      tag_211\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":7327:7411   */\n    tag_312:\n        /* \"#utility.yul\":7148:7417   */\n      pop\n        /* \"#utility.yul\":7097:7417   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7423:7541   */\n    tag_212:\n        /* \"#utility.yul\":7510:7534   */\n      tag_315\n        /* \"#utility.yul\":7528:7533   */\n      dup2\n        /* \"#utility.yul\":7510:7534   */\n      tag_195\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":7505:7508   */\n      dup3\n        /* \"#utility.yul\":7498:7535   */\n      mstore\n        /* \"#utility.yul\":7423:7541   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7547:7769   */\n    tag_121:\n        /* \"#utility.yul\":7640:7644   */\n      0x00\n        /* \"#utility.yul\":7678:7680   */\n      0x20\n        /* \"#utility.yul\":7667:7676   */\n      dup3\n        /* \"#utility.yul\":7663:7681   */\n      add\n        /* \"#utility.yul\":7655:7681   */\n      swap1\n      pop\n        /* \"#utility.yul\":7691:7762   */\n      tag_317\n        /* \"#utility.yul\":7759:7760   */\n      0x00\n        /* \"#utility.yul\":7748:7757   */\n      dup4\n        /* \"#utility.yul\":7744:7761   */\n      add\n        /* \"#utility.yul\":7735:7741   */\n      dup5\n        /* \"#utility.yul\":7691:7762   */\n      tag_212\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":7547:7769   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7775:7918   */\n    tag_213:\n        /* \"#utility.yul\":7832:7837   */\n      0x00\n        /* \"#utility.yul\":7863:7869   */\n      dup2\n        /* \"#utility.yul\":7857:7870   */\n      mload\n        /* \"#utility.yul\":7848:7870   */\n      swap1\n      pop\n        /* \"#utility.yul\":7879:7912   */\n      tag_319\n        /* \"#utility.yul\":7906:7911   */\n      dup2\n        /* \"#utility.yul\":7879:7912   */\n      tag_199\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":7775:7918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7924:8275   */\n    tag_125:\n        /* \"#utility.yul\":7994:8000   */\n      0x00\n        /* \"#utility.yul\":8043:8045   */\n      0x20\n        /* \"#utility.yul\":8031:8040   */\n      dup3\n        /* \"#utility.yul\":8022:8029   */\n      dup5\n        /* \"#utility.yul\":8018:8041   */\n      sub\n        /* \"#utility.yul\":8014:8046   */\n      slt\n        /* \"#utility.yul\":8011:8130   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":8049:8128   */\n      tag_322\n      tag_192\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":8011:8130   */\n    tag_321:\n        /* \"#utility.yul\":8169:8170   */\n      0x00\n        /* \"#utility.yul\":8194:8258   */\n      tag_323\n        /* \"#utility.yul\":8250:8257   */\n      dup5\n        /* \"#utility.yul\":8241:8247   */\n      dup3\n        /* \"#utility.yul\":8230:8239   */\n      dup6\n        /* \"#utility.yul\":8226:8248   */\n      add\n        /* \"#utility.yul\":8194:8258   */\n      tag_213\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":8184:8258   */\n      swap2\n      pop\n        /* \"#utility.yul\":8140:8268   */\n      pop\n        /* \"#utility.yul\":7924:8275   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8281:8613   */\n    tag_128:\n        /* \"#utility.yul\":8402:8406   */\n      0x00\n        /* \"#utility.yul\":8440:8442   */\n      0x40\n        /* \"#utility.yul\":8429:8438   */\n      dup3\n        /* \"#utility.yul\":8425:8443   */\n      add\n        /* \"#utility.yul\":8417:8443   */\n      swap1\n      pop\n        /* \"#utility.yul\":8453:8524   */\n      tag_325\n        /* \"#utility.yul\":8521:8522   */\n      0x00\n        /* \"#utility.yul\":8510:8519   */\n      dup4\n        /* \"#utility.yul\":8506:8523   */\n      add\n        /* \"#utility.yul\":8497:8503   */\n      dup6\n        /* \"#utility.yul\":8453:8524   */\n      tag_212\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":8534:8606   */\n      tag_326\n        /* \"#utility.yul\":8602:8604   */\n      0x20\n        /* \"#utility.yul\":8591:8600   */\n      dup4\n        /* \"#utility.yul\":8587:8605   */\n      add\n        /* \"#utility.yul\":8578:8584   */\n      dup5\n        /* \"#utility.yul\":8534:8606   */\n      tag_203\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":8281:8613   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8619:8735   */\n    tag_214:\n        /* \"#utility.yul\":8689:8710   */\n      tag_328\n        /* \"#utility.yul\":8704:8709   */\n      dup2\n        /* \"#utility.yul\":8689:8710   */\n      tag_201\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":8682:8687   */\n      dup2\n        /* \"#utility.yul\":8679:8711   */\n      eq\n        /* \"#utility.yul\":8669:8729   */\n      tag_329\n      jumpi\n        /* \"#utility.yul\":8725:8726   */\n      0x00\n        /* \"#utility.yul\":8722:8723   */\n      dup1\n        /* \"#utility.yul\":8715:8727   */\n      revert\n        /* \"#utility.yul\":8669:8729   */\n    tag_329:\n        /* \"#utility.yul\":8619:8735   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8741:8878   */\n    tag_215:\n        /* \"#utility.yul\":8795:8800   */\n      0x00\n        /* \"#utility.yul\":8826:8832   */\n      dup2\n        /* \"#utility.yul\":8820:8833   */\n      mload\n        /* \"#utility.yul\":8811:8833   */\n      swap1\n      pop\n        /* \"#utility.yul\":8842:8872   */\n      tag_331\n        /* \"#utility.yul\":8866:8871   */\n      dup2\n        /* \"#utility.yul\":8842:8872   */\n      tag_214\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":8741:8878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8884:9229   */\n    tag_132:\n        /* \"#utility.yul\":8951:8957   */\n      0x00\n        /* \"#utility.yul\":9000:9002   */\n      0x20\n        /* \"#utility.yul\":8988:8997   */\n      dup3\n        /* \"#utility.yul\":8979:8986   */\n      dup5\n        /* \"#utility.yul\":8975:8998   */\n      sub\n        /* \"#utility.yul\":8971:9003   */\n      slt\n        /* \"#utility.yul\":8968:9087   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":9006:9085   */\n      tag_334\n      tag_192\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":8968:9087   */\n    tag_333:\n        /* \"#utility.yul\":9126:9127   */\n      0x00\n        /* \"#utility.yul\":9151:9212   */\n      tag_335\n        /* \"#utility.yul\":9204:9211   */\n      dup5\n        /* \"#utility.yul\":9195:9201   */\n      dup3\n        /* \"#utility.yul\":9184:9193   */\n      dup6\n        /* \"#utility.yul\":9180:9202   */\n      add\n        /* \"#utility.yul\":9151:9212   */\n      tag_215\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":9141:9212   */\n      swap2\n      pop\n        /* \"#utility.yul\":9097:9222   */\n      pop\n        /* \"#utility.yul\":8884:9229   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9235:9411   */\n    tag_216:\n        /* \"#utility.yul\":9375:9403   */\n      0x4e6f20746f6b656e73206c656674206f6e20636f6e7472616374000000000000\n        /* \"#utility.yul\":9371:9372   */\n      0x00\n        /* \"#utility.yul\":9363:9369   */\n      dup3\n        /* \"#utility.yul\":9359:9373   */\n      add\n        /* \"#utility.yul\":9352:9404   */\n      mstore\n        /* \"#utility.yul\":9235:9411   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9417:9783   */\n    tag_217:\n        /* \"#utility.yul\":9559:9562   */\n      0x00\n        /* \"#utility.yul\":9580:9647   */\n      tag_338\n        /* \"#utility.yul\":9644:9646   */\n      0x1a\n        /* \"#utility.yul\":9639:9642   */\n      dup4\n        /* \"#utility.yul\":9580:9647   */\n      tag_187\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":9573:9647   */\n      swap2\n      pop\n        /* \"#utility.yul\":9656:9749   */\n      tag_339\n        /* \"#utility.yul\":9745:9748   */\n      dup3\n        /* \"#utility.yul\":9656:9749   */\n      tag_216\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":9774:9776   */\n      0x20\n        /* \"#utility.yul\":9769:9772   */\n      dup3\n        /* \"#utility.yul\":9765:9777   */\n      add\n        /* \"#utility.yul\":9758:9777   */\n      swap1\n      pop\n        /* \"#utility.yul\":9417:9783   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9789:10208   */\n    tag_138:\n        /* \"#utility.yul\":9955:9959   */\n      0x00\n        /* \"#utility.yul\":9993:9995   */\n      0x20\n        /* \"#utility.yul\":9982:9991   */\n      dup3\n        /* \"#utility.yul\":9978:9996   */\n      add\n        /* \"#utility.yul\":9970:9996   */\n      swap1\n      pop\n        /* \"#utility.yul\":10042:10051   */\n      dup2\n        /* \"#utility.yul\":10036:10040   */\n      dup2\n        /* \"#utility.yul\":10032:10052   */\n      sub\n        /* \"#utility.yul\":10028:10029   */\n      0x00\n        /* \"#utility.yul\":10017:10026   */\n      dup4\n        /* \"#utility.yul\":10013:10030   */\n      add\n        /* \"#utility.yul\":10006:10053   */\n      mstore\n        /* \"#utility.yul\":10070:10201   */\n      tag_341\n        /* \"#utility.yul\":10196:10200   */\n      dup2\n        /* \"#utility.yul\":10070:10201   */\n      tag_217\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":10062:10201   */\n      swap1\n      pop\n        /* \"#utility.yul\":9789:10208   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10214:10441   */\n    tag_218:\n        /* \"#utility.yul\":10354:10388   */\n      0x596f7520616c726561647920726563656976656420746f6b656e2066726f6d20\n        /* \"#utility.yul\":10350:10351   */\n      0x00\n        /* \"#utility.yul\":10342:10348   */\n      dup3\n        /* \"#utility.yul\":10338:10352   */\n      add\n        /* \"#utility.yul\":10331:10389   */\n      mstore\n        /* \"#utility.yul\":10423:10433   */\n      0x636f6e7472616374000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10418:10420   */\n      0x20\n        /* \"#utility.yul\":10410:10416   */\n      dup3\n        /* \"#utility.yul\":10406:10421   */\n      add\n        /* \"#utility.yul\":10399:10434   */\n      mstore\n        /* \"#utility.yul\":10214:10441   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10447:10813   */\n    tag_219:\n        /* \"#utility.yul\":10589:10592   */\n      0x00\n        /* \"#utility.yul\":10610:10677   */\n      tag_344\n        /* \"#utility.yul\":10674:10676   */\n      0x28\n        /* \"#utility.yul\":10669:10672   */\n      dup4\n        /* \"#utility.yul\":10610:10677   */\n      tag_187\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":10603:10677   */\n      swap2\n      pop\n        /* \"#utility.yul\":10686:10779   */\n      tag_345\n        /* \"#utility.yul\":10775:10778   */\n      dup3\n        /* \"#utility.yul\":10686:10779   */\n      tag_218\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":10804:10806   */\n      0x40\n        /* \"#utility.yul\":10799:10802   */\n      dup3\n        /* \"#utility.yul\":10795:10807   */\n      add\n        /* \"#utility.yul\":10788:10807   */\n      swap1\n      pop\n        /* \"#utility.yul\":10447:10813   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10819:11238   */\n    tag_141:\n        /* \"#utility.yul\":10985:10989   */\n      0x00\n        /* \"#utility.yul\":11023:11025   */\n      0x20\n        /* \"#utility.yul\":11012:11021   */\n      dup3\n        /* \"#utility.yul\":11008:11026   */\n      add\n        /* \"#utility.yul\":11000:11026   */\n      swap1\n      pop\n        /* \"#utility.yul\":11072:11081   */\n      dup2\n        /* \"#utility.yul\":11066:11070   */\n      dup2\n        /* \"#utility.yul\":11062:11082   */\n      sub\n        /* \"#utility.yul\":11058:11059   */\n      0x00\n        /* \"#utility.yul\":11047:11056   */\n      dup4\n        /* \"#utility.yul\":11043:11060   */\n      add\n        /* \"#utility.yul\":11036:11083   */\n      mstore\n        /* \"#utility.yul\":11100:11231   */\n      tag_347\n        /* \"#utility.yul\":11226:11230   */\n      dup2\n        /* \"#utility.yul\":11100:11231   */\n      tag_219\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":11092:11231   */\n      swap1\n      pop\n        /* \"#utility.yul\":10819:11238   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11244:11330   */\n    tag_220:\n        /* \"#utility.yul\":11290:11297   */\n      0x00\n        /* \"#utility.yul\":11319:11324   */\n      dup2\n        /* \"#utility.yul\":11308:11324   */\n      swap1\n      pop\n        /* \"#utility.yul\":11244:11330   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11336:11496   */\n    tag_221:\n        /* \"#utility.yul\":11395:11404   */\n      0x00\n        /* \"#utility.yul\":11428:11490   */\n      tag_350\n        /* \"#utility.yul\":11446:11489   */\n      tag_351\n        /* \"#utility.yul\":11455:11488   */\n      tag_352\n        /* \"#utility.yul\":11482:11487   */\n      dup5\n        /* \"#utility.yul\":11455:11488   */\n      tag_220\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":11446:11489   */\n      tag_206\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":11428:11490   */\n      tag_198\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":11415:11490   */\n      swap1\n      pop\n        /* \"#utility.yul\":11336:11496   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11502:11651   */\n    tag_222:\n        /* \"#utility.yul\":11598:11644   */\n      tag_354\n        /* \"#utility.yul\":11638:11643   */\n      dup2\n        /* \"#utility.yul\":11598:11644   */\n      tag_221\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":11593:11596   */\n      dup3\n        /* \"#utility.yul\":11586:11645   */\n      mstore\n        /* \"#utility.yul\":11502:11651   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11657:12007   */\n    tag_143:\n        /* \"#utility.yul\":11787:11791   */\n      0x00\n        /* \"#utility.yul\":11825:11827   */\n      0x40\n        /* \"#utility.yul\":11814:11823   */\n      dup3\n        /* \"#utility.yul\":11810:11828   */\n      add\n        /* \"#utility.yul\":11802:11828   */\n      swap1\n      pop\n        /* \"#utility.yul\":11838:11909   */\n      tag_356\n        /* \"#utility.yul\":11906:11907   */\n      0x00\n        /* \"#utility.yul\":11895:11904   */\n      dup4\n        /* \"#utility.yul\":11891:11908   */\n      add\n        /* \"#utility.yul\":11882:11888   */\n      dup6\n        /* \"#utility.yul\":11838:11909   */\n      tag_212\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":11919:12000   */\n      tag_357\n        /* \"#utility.yul\":11996:11998   */\n      0x20\n        /* \"#utility.yul\":11985:11994   */\n      dup4\n        /* \"#utility.yul\":11981:11999   */\n      add\n        /* \"#utility.yul\":11972:11978   */\n      dup5\n        /* \"#utility.yul\":11919:12000   */\n      tag_222\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":11657:12007   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12013:12240   */\n    tag_223:\n        /* \"#utility.yul\":12153:12187   */\n      0x46756e6374696f6e2063616e206f6e6c792062652063616c6c656420696e2074\n        /* \"#utility.yul\":12149:12150   */\n      0x00\n        /* \"#utility.yul\":12141:12147   */\n      dup3\n        /* \"#utility.yul\":12137:12151   */\n      add\n        /* \"#utility.yul\":12130:12188   */\n      mstore\n        /* \"#utility.yul\":12222:12232   */\n      0x657374206d6f6465000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12217:12219   */\n      0x20\n        /* \"#utility.yul\":12209:12215   */\n      dup3\n        /* \"#utility.yul\":12205:12220   */\n      add\n        /* \"#utility.yul\":12198:12233   */\n      mstore\n        /* \"#utility.yul\":12013:12240   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12246:12612   */\n    tag_224:\n        /* \"#utility.yul\":12388:12391   */\n      0x00\n        /* \"#utility.yul\":12409:12476   */\n      tag_360\n        /* \"#utility.yul\":12473:12475   */\n      0x28\n        /* \"#utility.yul\":12468:12471   */\n      dup4\n        /* \"#utility.yul\":12409:12476   */\n      tag_187\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":12402:12476   */\n      swap2\n      pop\n        /* \"#utility.yul\":12485:12578   */\n      tag_361\n        /* \"#utility.yul\":12574:12577   */\n      dup3\n        /* \"#utility.yul\":12485:12578   */\n      tag_223\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":12603:12605   */\n      0x40\n        /* \"#utility.yul\":12598:12601   */\n      dup3\n        /* \"#utility.yul\":12594:12606   */\n      add\n        /* \"#utility.yul\":12587:12606   */\n      swap1\n      pop\n        /* \"#utility.yul\":12246:12612   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12618:13037   */\n    tag_150:\n        /* \"#utility.yul\":12784:12788   */\n      0x00\n        /* \"#utility.yul\":12822:12824   */\n      0x20\n        /* \"#utility.yul\":12811:12820   */\n      dup3\n        /* \"#utility.yul\":12807:12825   */\n      add\n        /* \"#utility.yul\":12799:12825   */\n      swap1\n      pop\n        /* \"#utility.yul\":12871:12880   */\n      dup2\n        /* \"#utility.yul\":12865:12869   */\n      dup2\n        /* \"#utility.yul\":12861:12881   */\n      sub\n        /* \"#utility.yul\":12857:12858   */\n      0x00\n        /* \"#utility.yul\":12846:12855   */\n      dup4\n        /* \"#utility.yul\":12842:12859   */\n      add\n        /* \"#utility.yul\":12835:12882   */\n      mstore\n        /* \"#utility.yul\":12899:13030   */\n      tag_363\n        /* \"#utility.yul\":13025:13029   */\n      dup2\n        /* \"#utility.yul\":12899:13030   */\n      tag_224\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":12891:13030   */\n      swap1\n      pop\n        /* \"#utility.yul\":12618:13037   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13043:13485   */\n    tag_160:\n        /* \"#utility.yul\":13192:13196   */\n      0x00\n        /* \"#utility.yul\":13230:13232   */\n      0x60\n        /* \"#utility.yul\":13219:13228   */\n      dup3\n        /* \"#utility.yul\":13215:13233   */\n      add\n        /* \"#utility.yul\":13207:13233   */\n      swap1\n      pop\n        /* \"#utility.yul\":13243:13314   */\n      tag_365\n        /* \"#utility.yul\":13311:13312   */\n      0x00\n        /* \"#utility.yul\":13300:13309   */\n      dup4\n        /* \"#utility.yul\":13296:13313   */\n      add\n        /* \"#utility.yul\":13287:13293   */\n      dup7\n        /* \"#utility.yul\":13243:13314   */\n      tag_212\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":13324:13396   */\n      tag_366\n        /* \"#utility.yul\":13392:13394   */\n      0x20\n        /* \"#utility.yul\":13381:13390   */\n      dup4\n        /* \"#utility.yul\":13377:13395   */\n      add\n        /* \"#utility.yul\":13368:13374   */\n      dup6\n        /* \"#utility.yul\":13324:13396   */\n      tag_203\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":13406:13478   */\n      tag_367\n        /* \"#utility.yul\":13474:13476   */\n      0x40\n        /* \"#utility.yul\":13463:13472   */\n      dup4\n        /* \"#utility.yul\":13459:13477   */\n      add\n        /* \"#utility.yul\":13450:13456   */\n      dup5\n        /* \"#utility.yul\":13406:13478   */\n      tag_203\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":13043:13485   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13491:13671   */\n    tag_225:\n        /* \"#utility.yul\":13539:13616   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13536:13537   */\n      0x00\n        /* \"#utility.yul\":13529:13617   */\n      mstore\n        /* \"#utility.yul\":13636:13640   */\n      0x11\n        /* \"#utility.yul\":13633:13634   */\n      0x04\n        /* \"#utility.yul\":13626:13641   */\n      mstore\n        /* \"#utility.yul\":13660:13664   */\n      0x24\n        /* \"#utility.yul\":13657:13658   */\n      0x00\n        /* \"#utility.yul\":13650:13665   */\n      revert\n        /* \"#utility.yul\":13677:13868   */\n    tag_179:\n        /* \"#utility.yul\":13717:13720   */\n      0x00\n        /* \"#utility.yul\":13736:13756   */\n      tag_370\n        /* \"#utility.yul\":13754:13755   */\n      dup3\n        /* \"#utility.yul\":13736:13756   */\n      tag_198\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":13731:13756   */\n      swap2\n      pop\n        /* \"#utility.yul\":13770:13790   */\n      tag_371\n        /* \"#utility.yul\":13788:13789   */\n      dup4\n        /* \"#utility.yul\":13770:13790   */\n      tag_198\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":13765:13790   */\n      swap3\n      pop\n        /* \"#utility.yul\":13813:13814   */\n      dup3\n        /* \"#utility.yul\":13810:13811   */\n      dup3\n        /* \"#utility.yul\":13806:13815   */\n      add\n        /* \"#utility.yul\":13799:13815   */\n      swap1\n      pop\n        /* \"#utility.yul\":13834:13837   */\n      dup1\n        /* \"#utility.yul\":13831:13832   */\n      dup3\n        /* \"#utility.yul\":13828:13838   */\n      gt\n        /* \"#utility.yul\":13825:13861   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":13841:13859   */\n      tag_373\n      tag_225\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":13825:13861   */\n    tag_372:\n        /* \"#utility.yul\":13677:13868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206da1b7c8e5ea8864f12351c36e7b45a17f37b17f16865eaed0dd21ec1961520c64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_836": {
									"entryPoint": null,
									"id": 836,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 396,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 534,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_addresst_bool_fromMemory": {
									"entryPoint": 1297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_94b9a4ade9c8956771010031ab3026fb79e05a728412f62dfe1b190b3f2a81b2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2545,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_94b9a4ade9c8956771010031ab3026fb79e05a728412f62dfe1b190b3f2a81b2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1838,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1086,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1677,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1930,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2425,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1441,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1396,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1082,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_94b9a4ade9c8956771010031ab3026fb79e05a728412f62dfe1b190b3f2a81b2": {
									"entryPoint": 2233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1583,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1725,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1768,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10116:6",
										"nodeType": "YulBlock",
										"src": "0:10116:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:32:6",
													"nodeType": "YulBlock",
													"src": "379:32:6",
													"statements": [
														{
															"nativeSrc": "389:16:6",
															"nodeType": "YulAssignment",
															"src": "389:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:6",
																"nodeType": "YulIdentifier",
																"src": "400:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:77:6"
											},
											{
												"body": {
													"nativeSrc": "460:79:6",
													"nodeType": "YulBlock",
													"src": "460:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:6",
																"nodeType": "YulBlock",
																"src": "517:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:6",
																					"nodeType": "YulLiteral",
																					"src": "526:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:6",
																					"nodeType": "YulLiteral",
																					"src": "529:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:6"
																			},
																			"nativeSrc": "519:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:6"
																		},
																		"nativeSrc": "519:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:6"
																				},
																				"nativeSrc": "490:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:6"
																		},
																		"nativeSrc": "480:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:6"
																},
																"nativeSrc": "473:43:6",
																"nodeType": "YulFunctionCall",
																"src": "473:43:6"
															},
															"nativeSrc": "470:63:6",
															"nodeType": "YulIf",
															"src": "470:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:6",
														"nodeType": "YulTypedName",
														"src": "453:5:6",
														"type": ""
													}
												],
												"src": "417:122:6"
											},
											{
												"body": {
													"nativeSrc": "608:80:6",
													"nodeType": "YulBlock",
													"src": "608:80:6",
													"statements": [
														{
															"nativeSrc": "618:22:6",
															"nodeType": "YulAssignment",
															"src": "618:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:6"
																},
																"nativeSrc": "627:13:6",
																"nodeType": "YulFunctionCall",
																"src": "627:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:6"
																},
																"nativeSrc": "649:33:6",
																"nodeType": "YulFunctionCall",
																"src": "649:33:6"
															},
															"nativeSrc": "649:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:6",
														"nodeType": "YulTypedName",
														"src": "586:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:6",
														"nodeType": "YulTypedName",
														"src": "594:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:6",
														"nodeType": "YulTypedName",
														"src": "602:5:6",
														"type": ""
													}
												],
												"src": "545:143:6"
											},
											{
												"body": {
													"nativeSrc": "739:81:6",
													"nodeType": "YulBlock",
													"src": "739:81:6",
													"statements": [
														{
															"nativeSrc": "749:65:6",
															"nodeType": "YulAssignment",
															"src": "749:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "764:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "764:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "771:42:6",
																		"nodeType": "YulLiteral",
																		"src": "771:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "760:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "760:3:6"
																},
																"nativeSrc": "760:54:6",
																"nodeType": "YulFunctionCall",
																"src": "760:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "749:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "749:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "694:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "721:5:6",
														"nodeType": "YulTypedName",
														"src": "721:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "731:7:6",
														"nodeType": "YulTypedName",
														"src": "731:7:6",
														"type": ""
													}
												],
												"src": "694:126:6"
											},
											{
												"body": {
													"nativeSrc": "871:51:6",
													"nodeType": "YulBlock",
													"src": "871:51:6",
													"statements": [
														{
															"nativeSrc": "881:35:6",
															"nodeType": "YulAssignment",
															"src": "881:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "910:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "910:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "892:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "892:17:6"
																},
																"nativeSrc": "892:24:6",
																"nodeType": "YulFunctionCall",
																"src": "892:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "881:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "881:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "826:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "853:5:6",
														"nodeType": "YulTypedName",
														"src": "853:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "863:7:6",
														"nodeType": "YulTypedName",
														"src": "863:7:6",
														"type": ""
													}
												],
												"src": "826:96:6"
											},
											{
												"body": {
													"nativeSrc": "971:79:6",
													"nodeType": "YulBlock",
													"src": "971:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:6",
																"nodeType": "YulBlock",
																"src": "1028:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:6"
																			},
																			"nativeSrc": "1030:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:6"
																		},
																		"nativeSrc": "1030:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1001:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:6"
																				},
																				"nativeSrc": "1001:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:6"
																		},
																		"nativeSrc": "991:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:6"
																},
																"nativeSrc": "984:43:6",
																"nodeType": "YulFunctionCall",
																"src": "984:43:6"
															},
															"nativeSrc": "981:63:6",
															"nodeType": "YulIf",
															"src": "981:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "928:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:6",
														"nodeType": "YulTypedName",
														"src": "964:5:6",
														"type": ""
													}
												],
												"src": "928:122:6"
											},
											{
												"body": {
													"nativeSrc": "1119:80:6",
													"nodeType": "YulBlock",
													"src": "1119:80:6",
													"statements": [
														{
															"nativeSrc": "1129:22:6",
															"nodeType": "YulAssignment",
															"src": "1129:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:6"
																},
																"nativeSrc": "1138:13:6",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1160:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:6"
																},
																"nativeSrc": "1160:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:6"
															},
															"nativeSrc": "1160:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:6"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "1056:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:6",
														"nodeType": "YulTypedName",
														"src": "1097:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:6",
														"nodeType": "YulTypedName",
														"src": "1105:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:6",
														"nodeType": "YulTypedName",
														"src": "1113:5:6",
														"type": ""
													}
												],
												"src": "1056:143:6"
											},
											{
												"body": {
													"nativeSrc": "1247:48:6",
													"nodeType": "YulBlock",
													"src": "1247:48:6",
													"statements": [
														{
															"nativeSrc": "1257:32:6",
															"nodeType": "YulAssignment",
															"src": "1257:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1282:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1282:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1275:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1275:6:6"
																		},
																		"nativeSrc": "1275:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1275:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1268:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1268:6:6"
																},
																"nativeSrc": "1268:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1268:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1257:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1257:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1205:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1229:5:6",
														"nodeType": "YulTypedName",
														"src": "1229:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1239:7:6",
														"nodeType": "YulTypedName",
														"src": "1239:7:6",
														"type": ""
													}
												],
												"src": "1205:90:6"
											},
											{
												"body": {
													"nativeSrc": "1341:76:6",
													"nodeType": "YulBlock",
													"src": "1341:76:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1395:16:6",
																"nodeType": "YulBlock",
																"src": "1395:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1404:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1404:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1407:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1407:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1397:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1397:6:6"
																			},
																			"nativeSrc": "1397:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1397:12:6"
																		},
																		"nativeSrc": "1397:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1397:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1386:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1386:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "1371:14:6",
																					"nodeType": "YulIdentifier",
																					"src": "1371:14:6"
																				},
																				"nativeSrc": "1371:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1371:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1361:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1361:2:6"
																		},
																		"nativeSrc": "1361:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1361:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1354:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1354:6:6"
																},
																"nativeSrc": "1354:40:6",
																"nodeType": "YulFunctionCall",
																"src": "1354:40:6"
															},
															"nativeSrc": "1351:60:6",
															"nodeType": "YulIf",
															"src": "1351:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "1301:116:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1334:5:6",
														"nodeType": "YulTypedName",
														"src": "1334:5:6",
														"type": ""
													}
												],
												"src": "1301:116:6"
											},
											{
												"body": {
													"nativeSrc": "1483:77:6",
													"nodeType": "YulBlock",
													"src": "1483:77:6",
													"statements": [
														{
															"nativeSrc": "1493:22:6",
															"nodeType": "YulAssignment",
															"src": "1493:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1508:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1508:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1502:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1502:5:6"
																},
																"nativeSrc": "1502:13:6",
																"nodeType": "YulFunctionCall",
																"src": "1502:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1493:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1493:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1548:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1548:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "1524:23:6",
																	"nodeType": "YulIdentifier",
																	"src": "1524:23:6"
																},
																"nativeSrc": "1524:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1524:30:6"
															},
															"nativeSrc": "1524:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "1524:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "1423:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1461:6:6",
														"nodeType": "YulTypedName",
														"src": "1461:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1469:3:6",
														"nodeType": "YulTypedName",
														"src": "1469:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1477:5:6",
														"nodeType": "YulTypedName",
														"src": "1477:5:6",
														"type": ""
													}
												],
												"src": "1423:137:6"
											},
											{
												"body": {
													"nativeSrc": "1674:549:6",
													"nodeType": "YulBlock",
													"src": "1674:549:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1720:83:6",
																"nodeType": "YulBlock",
																"src": "1720:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1722:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1722:77:6"
																			},
																			"nativeSrc": "1722:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1722:79:6"
																		},
																		"nativeSrc": "1722:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1722:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1695:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1695:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1704:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1704:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1691:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1691:3:6"
																		},
																		"nativeSrc": "1691:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1691:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1716:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1716:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1687:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1687:3:6"
																},
																"nativeSrc": "1687:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1687:32:6"
															},
															"nativeSrc": "1684:119:6",
															"nodeType": "YulIf",
															"src": "1684:119:6"
														},
														{
															"nativeSrc": "1813:128:6",
															"nodeType": "YulBlock",
															"src": "1813:128:6",
															"statements": [
																{
																	"nativeSrc": "1828:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1828:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1842:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1842:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1832:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1832:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1857:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1857:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1903:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1903:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1914:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1914:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1899:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1899:3:6"
																				},
																				"nativeSrc": "1899:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1899:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1923:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1923:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1867:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "1867:31:6"
																		},
																		"nativeSrc": "1867:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1867:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1857:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1857:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1951:129:6",
															"nodeType": "YulBlock",
															"src": "1951:129:6",
															"statements": [
																{
																	"nativeSrc": "1966:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1966:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1980:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1980:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1970:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1970:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1996:74:6",
																	"nodeType": "YulAssignment",
																	"src": "1996:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2042:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2042:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2053:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2053:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2038:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2038:3:6"
																				},
																				"nativeSrc": "2038:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2038:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2062:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2062:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "2006:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "2006:31:6"
																		},
																		"nativeSrc": "2006:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2006:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1996:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1996:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2090:126:6",
															"nodeType": "YulBlock",
															"src": "2090:126:6",
															"statements": [
																{
																	"nativeSrc": "2105:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2105:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2119:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2119:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2109:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2109:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2135:71:6",
																	"nodeType": "YulAssignment",
																	"src": "2135:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2178:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2178:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2189:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2189:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2174:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2174:3:6"
																				},
																				"nativeSrc": "2174:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2174:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2198:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2198:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "2145:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "2145:28:6"
																		},
																		"nativeSrc": "2145:61:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2145:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2135:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2135:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_bool_fromMemory",
												"nativeSrc": "1566:657:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1628:9:6",
														"nodeType": "YulTypedName",
														"src": "1628:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1639:7:6",
														"nodeType": "YulTypedName",
														"src": "1639:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1651:6:6",
														"nodeType": "YulTypedName",
														"src": "1651:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1659:6:6",
														"nodeType": "YulTypedName",
														"src": "1659:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1667:6:6",
														"nodeType": "YulTypedName",
														"src": "1667:6:6",
														"type": ""
													}
												],
												"src": "1566:657:6"
											},
											{
												"body": {
													"nativeSrc": "2288:40:6",
													"nodeType": "YulBlock",
													"src": "2288:40:6",
													"statements": [
														{
															"nativeSrc": "2299:22:6",
															"nodeType": "YulAssignment",
															"src": "2299:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2315:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2315:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2309:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2309:5:6"
																},
																"nativeSrc": "2309:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2309:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2299:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2299:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "2229:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2271:5:6",
														"nodeType": "YulTypedName",
														"src": "2271:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2281:6:6",
														"nodeType": "YulTypedName",
														"src": "2281:6:6",
														"type": ""
													}
												],
												"src": "2229:99:6"
											},
											{
												"body": {
													"nativeSrc": "2362:152:6",
													"nodeType": "YulBlock",
													"src": "2362:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2379:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2379:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2382:77:6",
																		"nodeType": "YulLiteral",
																		"src": "2382:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2372:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2372:6:6"
																},
																"nativeSrc": "2372:88:6",
																"nodeType": "YulFunctionCall",
																"src": "2372:88:6"
															},
															"nativeSrc": "2372:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "2372:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2476:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2476:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2479:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2479:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2469:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2469:6:6"
																},
																"nativeSrc": "2469:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2469:15:6"
															},
															"nativeSrc": "2469:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2469:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2500:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2500:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2503:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2503:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2493:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2493:6:6"
																},
																"nativeSrc": "2493:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2493:15:6"
															},
															"nativeSrc": "2493:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2493:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "2334:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "2334:180:6"
											},
											{
												"body": {
													"nativeSrc": "2548:152:6",
													"nodeType": "YulBlock",
													"src": "2548:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2565:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2565:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2568:77:6",
																		"nodeType": "YulLiteral",
																		"src": "2568:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2558:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2558:6:6"
																},
																"nativeSrc": "2558:88:6",
																"nodeType": "YulFunctionCall",
																"src": "2558:88:6"
															},
															"nativeSrc": "2558:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "2558:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2662:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2662:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2665:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2665:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2655:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2655:6:6"
																},
																"nativeSrc": "2655:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2655:15:6"
															},
															"nativeSrc": "2655:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2655:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2686:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2686:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2689:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2689:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2679:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2679:6:6"
																},
																"nativeSrc": "2679:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2679:15:6"
															},
															"nativeSrc": "2679:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2679:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "2520:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "2520:180:6"
											},
											{
												"body": {
													"nativeSrc": "2757:269:6",
													"nodeType": "YulBlock",
													"src": "2757:269:6",
													"statements": [
														{
															"nativeSrc": "2767:22:6",
															"nodeType": "YulAssignment",
															"src": "2767:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2781:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2781:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2787:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2787:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2777:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2777:3:6"
																},
																"nativeSrc": "2777:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2777:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2767:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2767:6:6"
																}
															]
														},
														{
															"nativeSrc": "2798:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2798:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2828:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2828:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2834:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2834:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2824:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2824:3:6"
																},
																"nativeSrc": "2824:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2824:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2802:18:6",
																	"nodeType": "YulTypedName",
																	"src": "2802:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2875:51:6",
																"nodeType": "YulBlock",
																"src": "2875:51:6",
																"statements": [
																	{
																		"nativeSrc": "2889:27:6",
																		"nodeType": "YulAssignment",
																		"src": "2889:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2903:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2903:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2911:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2911:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2899:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2899:3:6"
																			},
																			"nativeSrc": "2899:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2899:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2889:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2889:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2855:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2855:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2848:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2848:6:6"
																},
																"nativeSrc": "2848:26:6",
																"nodeType": "YulFunctionCall",
																"src": "2848:26:6"
															},
															"nativeSrc": "2845:81:6",
															"nodeType": "YulIf",
															"src": "2845:81:6"
														},
														{
															"body": {
																"nativeSrc": "2978:42:6",
																"nodeType": "YulBlock",
																"src": "2978:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2992:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "2992:16:6"
																			},
																			"nativeSrc": "2992:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2992:18:6"
																		},
																		"nativeSrc": "2992:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2992:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2942:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2942:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2965:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2965:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2973:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2973:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2962:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2962:2:6"
																		},
																		"nativeSrc": "2962:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2962:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2939:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2939:2:6"
																},
																"nativeSrc": "2939:38:6",
																"nodeType": "YulFunctionCall",
																"src": "2939:38:6"
															},
															"nativeSrc": "2936:84:6",
															"nodeType": "YulIf",
															"src": "2936:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2706:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2741:4:6",
														"nodeType": "YulTypedName",
														"src": "2741:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2750:6:6",
														"nodeType": "YulTypedName",
														"src": "2750:6:6",
														"type": ""
													}
												],
												"src": "2706:320:6"
											},
											{
												"body": {
													"nativeSrc": "3086:87:6",
													"nodeType": "YulBlock",
													"src": "3086:87:6",
													"statements": [
														{
															"nativeSrc": "3096:11:6",
															"nodeType": "YulAssignment",
															"src": "3096:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "3104:3:6",
																"nodeType": "YulIdentifier",
																"src": "3104:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3096:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3096:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3124:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3124:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "3127:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3127:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3117:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3117:6:6"
																},
																"nativeSrc": "3117:14:6",
																"nodeType": "YulFunctionCall",
																"src": "3117:14:6"
															},
															"nativeSrc": "3117:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "3117:14:6"
														},
														{
															"nativeSrc": "3140:26:6",
															"nodeType": "YulAssignment",
															"src": "3140:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3158:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3158:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3161:4:6",
																		"nodeType": "YulLiteral",
																		"src": "3161:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3148:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3148:9:6"
																},
																"nativeSrc": "3148:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3148:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3140:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3140:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "3032:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "3073:3:6",
														"nodeType": "YulTypedName",
														"src": "3073:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "3081:4:6",
														"nodeType": "YulTypedName",
														"src": "3081:4:6",
														"type": ""
													}
												],
												"src": "3032:141:6"
											},
											{
												"body": {
													"nativeSrc": "3223:49:6",
													"nodeType": "YulBlock",
													"src": "3223:49:6",
													"statements": [
														{
															"nativeSrc": "3233:33:6",
															"nodeType": "YulAssignment",
															"src": "3233:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3251:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3251:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3258:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3258:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3247:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3247:3:6"
																		},
																		"nativeSrc": "3247:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3247:14:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3263:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3263:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3243:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3243:3:6"
																},
																"nativeSrc": "3243:23:6",
																"nodeType": "YulFunctionCall",
																"src": "3243:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3233:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3233:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "3179:93:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3206:5:6",
														"nodeType": "YulTypedName",
														"src": "3206:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3216:6:6",
														"nodeType": "YulTypedName",
														"src": "3216:6:6",
														"type": ""
													}
												],
												"src": "3179:93:6"
											},
											{
												"body": {
													"nativeSrc": "3331:54:6",
													"nodeType": "YulBlock",
													"src": "3331:54:6",
													"statements": [
														{
															"nativeSrc": "3341:37:6",
															"nodeType": "YulAssignment",
															"src": "3341:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3366:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3366:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3372:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3372:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "3362:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3362:3:6"
																},
																"nativeSrc": "3362:16:6",
																"nodeType": "YulFunctionCall",
																"src": "3362:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3341:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "3341:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "3278:107:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3306:4:6",
														"nodeType": "YulTypedName",
														"src": "3306:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3312:5:6",
														"nodeType": "YulTypedName",
														"src": "3312:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3322:8:6",
														"nodeType": "YulTypedName",
														"src": "3322:8:6",
														"type": ""
													}
												],
												"src": "3278:107:6"
											},
											{
												"body": {
													"nativeSrc": "3467:317:6",
													"nodeType": "YulBlock",
													"src": "3467:317:6",
													"statements": [
														{
															"nativeSrc": "3477:35:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3477:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "3498:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "3498:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3510:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3510:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3494:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3494:3:6"
																},
																"nativeSrc": "3494:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3494:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "3481:9:6",
																	"nodeType": "YulTypedName",
																	"src": "3481:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3521:109:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3521:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3552:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3552:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3563:66:6",
																		"nodeType": "YulLiteral",
																		"src": "3563:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3533:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "3533:18:6"
																},
																"nativeSrc": "3533:97:6",
																"nodeType": "YulFunctionCall",
																"src": "3533:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3525:4:6",
																	"nodeType": "YulTypedName",
																	"src": "3525:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3639:51:6",
															"nodeType": "YulAssignment",
															"src": "3639:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3670:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3670:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "3681:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "3681:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3651:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "3651:18:6"
																},
																"nativeSrc": "3651:39:6",
																"nodeType": "YulFunctionCall",
																"src": "3651:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "3639:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "3639:8:6"
																}
															]
														},
														{
															"nativeSrc": "3699:30:6",
															"nodeType": "YulAssignment",
															"src": "3699:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3712:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3712:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3723:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "3723:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3719:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3719:3:6"
																		},
																		"nativeSrc": "3719:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3719:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3708:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3708:3:6"
																},
																"nativeSrc": "3708:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3708:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3699:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3699:5:6"
																}
															]
														},
														{
															"nativeSrc": "3738:40:6",
															"nodeType": "YulAssignment",
															"src": "3738:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3751:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3751:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "3762:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "3762:8:6"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "3772:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "3772:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3758:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3758:3:6"
																		},
																		"nativeSrc": "3758:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3758:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3748:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3748:2:6"
																},
																"nativeSrc": "3748:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3748:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3738:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3738:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "3391:393:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3428:5:6",
														"nodeType": "YulTypedName",
														"src": "3428:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "3435:10:6",
														"nodeType": "YulTypedName",
														"src": "3435:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "3447:8:6",
														"nodeType": "YulTypedName",
														"src": "3447:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3460:6:6",
														"nodeType": "YulTypedName",
														"src": "3460:6:6",
														"type": ""
													}
												],
												"src": "3391:393:6"
											},
											{
												"body": {
													"nativeSrc": "3822:28:6",
													"nodeType": "YulBlock",
													"src": "3822:28:6",
													"statements": [
														{
															"nativeSrc": "3832:12:6",
															"nodeType": "YulAssignment",
															"src": "3832:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "3839:5:6",
																"nodeType": "YulIdentifier",
																"src": "3839:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3832:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3832:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3790:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3808:5:6",
														"nodeType": "YulTypedName",
														"src": "3808:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3818:3:6",
														"nodeType": "YulTypedName",
														"src": "3818:3:6",
														"type": ""
													}
												],
												"src": "3790:60:6"
											},
											{
												"body": {
													"nativeSrc": "3916:82:6",
													"nodeType": "YulBlock",
													"src": "3916:82:6",
													"statements": [
														{
															"nativeSrc": "3926:66:6",
															"nodeType": "YulAssignment",
															"src": "3926:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3984:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3984:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3966:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "3966:17:6"
																				},
																				"nativeSrc": "3966:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3966:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3957:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "3957:8:6"
																		},
																		"nativeSrc": "3957:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3957:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3939:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3939:17:6"
																},
																"nativeSrc": "3939:53:6",
																"nodeType": "YulFunctionCall",
																"src": "3939:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3926:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3926:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3856:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3896:5:6",
														"nodeType": "YulTypedName",
														"src": "3896:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3906:9:6",
														"nodeType": "YulTypedName",
														"src": "3906:9:6",
														"type": ""
													}
												],
												"src": "3856:142:6"
											},
											{
												"body": {
													"nativeSrc": "4051:28:6",
													"nodeType": "YulBlock",
													"src": "4051:28:6",
													"statements": [
														{
															"nativeSrc": "4061:12:6",
															"nodeType": "YulAssignment",
															"src": "4061:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "4068:5:6",
																"nodeType": "YulIdentifier",
																"src": "4068:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4061:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4061:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "4004:75:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4037:5:6",
														"nodeType": "YulTypedName",
														"src": "4037:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4047:3:6",
														"nodeType": "YulTypedName",
														"src": "4047:3:6",
														"type": ""
													}
												],
												"src": "4004:75:6"
											},
											{
												"body": {
													"nativeSrc": "4161:193:6",
													"nodeType": "YulBlock",
													"src": "4161:193:6",
													"statements": [
														{
															"nativeSrc": "4171:63:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4171:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "4226:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "4226:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "4195:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "4195:30:6"
																},
																"nativeSrc": "4195:39:6",
																"nodeType": "YulFunctionCall",
																"src": "4195:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "4175:16:6",
																	"nodeType": "YulTypedName",
																	"src": "4175:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4250:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4250:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "4290:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "4290:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "4284:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "4284:5:6"
																				},
																				"nativeSrc": "4284:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4284:11:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "4297:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4297:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "4329:16:6",
																						"nodeType": "YulIdentifier",
																						"src": "4329:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "4305:23:6",
																					"nodeType": "YulIdentifier",
																					"src": "4305:23:6"
																				},
																				"nativeSrc": "4305:41:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4305:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "4256:27:6",
																			"nodeType": "YulIdentifier",
																			"src": "4256:27:6"
																		},
																		"nativeSrc": "4256:91:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4256:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "4243:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4243:6:6"
																},
																"nativeSrc": "4243:105:6",
																"nodeType": "YulFunctionCall",
																"src": "4243:105:6"
															},
															"nativeSrc": "4243:105:6",
															"nodeType": "YulExpressionStatement",
															"src": "4243:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "4085:269:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4138:4:6",
														"nodeType": "YulTypedName",
														"src": "4138:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "4144:6:6",
														"nodeType": "YulTypedName",
														"src": "4144:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "4152:7:6",
														"nodeType": "YulTypedName",
														"src": "4152:7:6",
														"type": ""
													}
												],
												"src": "4085:269:6"
											},
											{
												"body": {
													"nativeSrc": "4409:24:6",
													"nodeType": "YulBlock",
													"src": "4409:24:6",
													"statements": [
														{
															"nativeSrc": "4419:8:6",
															"nodeType": "YulAssignment",
															"src": "4419:8:6",
															"value": {
																"kind": "number",
																"nativeSrc": "4426:1:6",
																"nodeType": "YulLiteral",
																"src": "4426:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4419:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4419:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "4360:73:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4405:3:6",
														"nodeType": "YulTypedName",
														"src": "4405:3:6",
														"type": ""
													}
												],
												"src": "4360:73:6"
											},
											{
												"body": {
													"nativeSrc": "4492:136:6",
													"nodeType": "YulBlock",
													"src": "4492:136:6",
													"statements": [
														{
															"nativeSrc": "4502:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4502:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "4516:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "4516:30:6"
																},
																"nativeSrc": "4516:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4516:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "4506:6:6",
																	"nodeType": "YulTypedName",
																	"src": "4506:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4601:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4601:4:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4607:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4607:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "4615:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4615:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "4557:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "4557:43:6"
																},
																"nativeSrc": "4557:65:6",
																"nodeType": "YulFunctionCall",
																"src": "4557:65:6"
															},
															"nativeSrc": "4557:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "4557:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "4439:189:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4478:4:6",
														"nodeType": "YulTypedName",
														"src": "4478:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "4484:6:6",
														"nodeType": "YulTypedName",
														"src": "4484:6:6",
														"type": ""
													}
												],
												"src": "4439:189:6"
											},
											{
												"body": {
													"nativeSrc": "4684:136:6",
													"nodeType": "YulBlock",
													"src": "4684:136:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4751:63:6",
																"nodeType": "YulBlock",
																"src": "4751:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4795:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "4795:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4802:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4802:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "4765:29:6",
																				"nodeType": "YulIdentifier",
																				"src": "4765:29:6"
																			},
																			"nativeSrc": "4765:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4765:39:6"
																		},
																		"nativeSrc": "4765:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4765:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4704:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4704:5:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4711:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4711:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4701:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4701:2:6"
																},
																"nativeSrc": "4701:14:6",
																"nodeType": "YulFunctionCall",
																"src": "4701:14:6"
															},
															"nativeSrc": "4694:120:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4716:26:6",
																"nodeType": "YulBlock",
																"src": "4716:26:6",
																"statements": [
																	{
																		"nativeSrc": "4718:22:6",
																		"nodeType": "YulAssignment",
																		"src": "4718:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4731:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "4731:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4738:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4738:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4727:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4727:3:6"
																			},
																			"nativeSrc": "4727:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4727:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4718:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4718:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4698:2:6",
																"nodeType": "YulBlock",
																"src": "4698:2:6",
																"statements": []
															},
															"src": "4694:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "4634:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "4672:5:6",
														"nodeType": "YulTypedName",
														"src": "4672:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4679:3:6",
														"nodeType": "YulTypedName",
														"src": "4679:3:6",
														"type": ""
													}
												],
												"src": "4634:186:6"
											},
											{
												"body": {
													"nativeSrc": "4905:464:6",
													"nodeType": "YulBlock",
													"src": "4905:464:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4931:431:6",
																"nodeType": "YulBlock",
																"src": "4931:431:6",
																"statements": [
																	{
																		"nativeSrc": "4945:54:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4945:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4993:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "4993:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4961:31:6",
																				"nodeType": "YulIdentifier",
																				"src": "4961:31:6"
																			},
																			"nativeSrc": "4961:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4961:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4949:8:6",
																				"nodeType": "YulTypedName",
																				"src": "4949:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "5012:63:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5012:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "5035:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "5035:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "5063:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "5063:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "5045:17:6",
																						"nodeType": "YulIdentifier",
																						"src": "5045:17:6"
																					},
																					"nativeSrc": "5045:29:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5045:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5031:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5031:3:6"
																			},
																			"nativeSrc": "5031:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5031:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "5016:11:6",
																				"nodeType": "YulTypedName",
																				"src": "5016:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "5232:27:6",
																			"nodeType": "YulBlock",
																			"src": "5232:27:6",
																			"statements": [
																				{
																					"nativeSrc": "5234:23:6",
																					"nodeType": "YulAssignment",
																					"src": "5234:23:6",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "5249:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "5249:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "5234:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "5234:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "5216:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "5216:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5228:2:6",
																					"nodeType": "YulLiteral",
																					"src": "5228:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "5213:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "5213:2:6"
																			},
																			"nativeSrc": "5213:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5213:18:6"
																		},
																		"nativeSrc": "5210:49:6",
																		"nodeType": "YulIf",
																		"src": "5210:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "5301:11:6",
																					"nodeType": "YulIdentifier",
																					"src": "5301:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "5318:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "5318:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "5346:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "5346:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "5328:17:6",
																								"nodeType": "YulIdentifier",
																								"src": "5328:17:6"
																							},
																							"nativeSrc": "5328:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "5328:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5314:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "5314:3:6"
																					},
																					"nativeSrc": "5314:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5314:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "5272:28:6",
																				"nodeType": "YulIdentifier",
																				"src": "5272:28:6"
																			},
																			"nativeSrc": "5272:80:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5272:80:6"
																		},
																		"nativeSrc": "5272:80:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5272:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4922:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4922:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4927:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4927:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4919:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4919:2:6"
																},
																"nativeSrc": "4919:11:6",
																"nodeType": "YulFunctionCall",
																"src": "4919:11:6"
															},
															"nativeSrc": "4916:446:6",
															"nodeType": "YulIf",
															"src": "4916:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4826:543:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4881:5:6",
														"nodeType": "YulTypedName",
														"src": "4881:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4888:3:6",
														"nodeType": "YulTypedName",
														"src": "4888:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4893:10:6",
														"nodeType": "YulTypedName",
														"src": "4893:10:6",
														"type": ""
													}
												],
												"src": "4826:543:6"
											},
											{
												"body": {
													"nativeSrc": "5438:54:6",
													"nodeType": "YulBlock",
													"src": "5438:54:6",
													"statements": [
														{
															"nativeSrc": "5448:37:6",
															"nodeType": "YulAssignment",
															"src": "5448:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5473:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5473:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5479:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5479:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5469:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5469:3:6"
																},
																"nativeSrc": "5469:16:6",
																"nodeType": "YulFunctionCall",
																"src": "5469:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5448:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "5448:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "5375:117:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5413:4:6",
														"nodeType": "YulTypedName",
														"src": "5413:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5419:5:6",
														"nodeType": "YulTypedName",
														"src": "5419:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5429:8:6",
														"nodeType": "YulTypedName",
														"src": "5429:8:6",
														"type": ""
													}
												],
												"src": "5375:117:6"
											},
											{
												"body": {
													"nativeSrc": "5549:118:6",
													"nodeType": "YulBlock",
													"src": "5549:118:6",
													"statements": [
														{
															"nativeSrc": "5559:68:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5559:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5608:1:6",
																						"nodeType": "YulLiteral",
																						"src": "5608:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "5611:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5611:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5604:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5604:3:6"
																				},
																				"nativeSrc": "5604:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5604:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5623:1:6",
																						"nodeType": "YulLiteral",
																						"src": "5623:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5619:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5619:3:6"
																				},
																				"nativeSrc": "5619:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5619:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "5575:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "5575:28:6"
																		},
																		"nativeSrc": "5575:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5575:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "5571:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5571:3:6"
																},
																"nativeSrc": "5571:56:6",
																"nodeType": "YulFunctionCall",
																"src": "5571:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5563:4:6",
																	"nodeType": "YulTypedName",
																	"src": "5563:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5636:25:6",
															"nodeType": "YulAssignment",
															"src": "5636:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5650:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5650:4:6"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "5656:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5656:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5646:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5646:3:6"
																},
																"nativeSrc": "5646:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5646:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5636:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5636:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "5498:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5526:4:6",
														"nodeType": "YulTypedName",
														"src": "5526:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "5532:5:6",
														"nodeType": "YulTypedName",
														"src": "5532:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5542:6:6",
														"nodeType": "YulTypedName",
														"src": "5542:6:6",
														"type": ""
													}
												],
												"src": "5498:169:6"
											},
											{
												"body": {
													"nativeSrc": "5753:214:6",
													"nodeType": "YulBlock",
													"src": "5753:214:6",
													"statements": [
														{
															"nativeSrc": "5886:37:6",
															"nodeType": "YulAssignment",
															"src": "5886:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5913:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5913:4:6"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5919:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5919:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5894:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "5894:18:6"
																},
																"nativeSrc": "5894:29:6",
																"nodeType": "YulFunctionCall",
																"src": "5894:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5886:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5886:4:6"
																}
															]
														},
														{
															"nativeSrc": "5932:29:6",
															"nodeType": "YulAssignment",
															"src": "5932:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5943:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5943:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5953:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5953:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5956:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5956:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5949:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5949:3:6"
																		},
																		"nativeSrc": "5949:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5949:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5940:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5940:2:6"
																},
																"nativeSrc": "5940:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5940:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5932:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5932:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5672:295:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5734:4:6",
														"nodeType": "YulTypedName",
														"src": "5734:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5740:3:6",
														"nodeType": "YulTypedName",
														"src": "5740:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5748:4:6",
														"nodeType": "YulTypedName",
														"src": "5748:4:6",
														"type": ""
													}
												],
												"src": "5672:295:6"
											},
											{
												"body": {
													"nativeSrc": "6064:1303:6",
													"nodeType": "YulBlock",
													"src": "6064:1303:6",
													"statements": [
														{
															"nativeSrc": "6075:51:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6075:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6122:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6122:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "6089:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "6089:32:6"
																},
																"nativeSrc": "6089:37:6",
																"nodeType": "YulFunctionCall",
																"src": "6089:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "6079:6:6",
																	"nodeType": "YulTypedName",
																	"src": "6079:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6211:22:6",
																"nodeType": "YulBlock",
																"src": "6211:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6213:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6213:16:6"
																			},
																			"nativeSrc": "6213:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6213:18:6"
																		},
																		"nativeSrc": "6213:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6213:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6183:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6183:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6191:18:6",
																		"nodeType": "YulLiteral",
																		"src": "6191:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6180:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6180:2:6"
																},
																"nativeSrc": "6180:30:6",
																"nodeType": "YulFunctionCall",
																"src": "6180:30:6"
															},
															"nativeSrc": "6177:56:6",
															"nodeType": "YulIf",
															"src": "6177:56:6"
														},
														{
															"nativeSrc": "6243:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6243:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "6289:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6289:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "6283:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "6283:5:6"
																		},
																		"nativeSrc": "6283:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6283:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "6257:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "6257:25:6"
																},
																"nativeSrc": "6257:38:6",
																"nodeType": "YulFunctionCall",
																"src": "6257:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "6247:6:6",
																	"nodeType": "YulTypedName",
																	"src": "6247:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6388:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6388:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "6394:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6394:6:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "6402:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6402:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "6342:45:6",
																	"nodeType": "YulIdentifier",
																	"src": "6342:45:6"
																},
																"nativeSrc": "6342:67:6",
																"nodeType": "YulFunctionCall",
																"src": "6342:67:6"
															},
															"nativeSrc": "6342:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "6342:67:6"
														},
														{
															"nativeSrc": "6419:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6419:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "6436:1:6",
																"nodeType": "YulLiteral",
																"src": "6436:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6423:9:6",
																	"nodeType": "YulTypedName",
																	"src": "6423:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6447:17:6",
															"nodeType": "YulAssignment",
															"src": "6447:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "6460:4:6",
																"nodeType": "YulLiteral",
																"src": "6460:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6447:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "6447:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6511:611:6",
																		"nodeType": "YulBlock",
																		"src": "6511:611:6",
																		"statements": [
																			{
																				"nativeSrc": "6525:37:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6525:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "6544:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "6544:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6556:4:6",
																									"nodeType": "YulLiteral",
																									"src": "6556:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "6552:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "6552:3:6"
																							},
																							"nativeSrc": "6552:9:6",
																							"nodeType": "YulFunctionCall",
																							"src": "6552:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "6540:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "6540:3:6"
																					},
																					"nativeSrc": "6540:22:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6540:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "6529:7:6",
																						"nodeType": "YulTypedName",
																						"src": "6529:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6576:51:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6576:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6622:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "6622:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "6590:31:6",
																						"nodeType": "YulIdentifier",
																						"src": "6590:31:6"
																					},
																					"nativeSrc": "6590:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6590:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "6580:6:6",
																						"nodeType": "YulTypedName",
																						"src": "6580:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6640:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6640:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6649:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6649:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6644:1:6",
																						"nodeType": "YulTypedName",
																						"src": "6644:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6708:163:6",
																					"nodeType": "YulBlock",
																					"src": "6708:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6733:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "6733:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6751:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "6751:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6756:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "6756:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6747:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "6747:3:6"
																												},
																												"nativeSrc": "6747:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "6747:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6741:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "6741:5:6"
																										},
																										"nativeSrc": "6741:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "6741:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6726:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "6726:6:6"
																								},
																								"nativeSrc": "6726:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6726:42:6"
																							},
																							"nativeSrc": "6726:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "6726:42:6"
																						},
																						{
																							"nativeSrc": "6785:24:6",
																							"nodeType": "YulAssignment",
																							"src": "6785:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6799:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "6799:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6807:1:6",
																										"nodeType": "YulLiteral",
																										"src": "6807:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6795:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "6795:3:6"
																								},
																								"nativeSrc": "6795:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6795:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6785:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "6785:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6826:31:6",
																							"nodeType": "YulAssignment",
																							"src": "6826:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6843:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "6843:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6854:2:6",
																										"nodeType": "YulLiteral",
																										"src": "6854:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6839:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "6839:3:6"
																								},
																								"nativeSrc": "6839:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6839:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6826:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "6826:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6674:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "6674:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6677:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "6677:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6671:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "6671:2:6"
																					},
																					"nativeSrc": "6671:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6671:14:6"
																				},
																				"nativeSrc": "6663:208:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6686:21:6",
																					"nodeType": "YulBlock",
																					"src": "6686:21:6",
																					"statements": [
																						{
																							"nativeSrc": "6688:17:6",
																							"nodeType": "YulAssignment",
																							"src": "6688:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6697:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "6697:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6700:4:6",
																										"nodeType": "YulLiteral",
																										"src": "6700:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6693:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "6693:3:6"
																								},
																								"nativeSrc": "6693:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6693:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6688:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "6688:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6667:3:6",
																					"nodeType": "YulBlock",
																					"src": "6667:3:6",
																					"statements": []
																				},
																				"src": "6663:208:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "6907:156:6",
																					"nodeType": "YulBlock",
																					"src": "6907:156:6",
																					"statements": [
																						{
																							"nativeSrc": "6925:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6925:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6952:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "6952:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6957:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "6957:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6948:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "6948:3:6"
																										},
																										"nativeSrc": "6948:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "6948:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6942:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "6942:5:6"
																								},
																								"nativeSrc": "6942:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6942:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6929:9:6",
																									"nodeType": "YulTypedName",
																									"src": "6929:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6992:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "6992:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "7019:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "7019:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "7034:6:6",
																														"nodeType": "YulIdentifier",
																														"src": "7034:6:6"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "7042:4:6",
																														"nodeType": "YulLiteral",
																														"src": "7042:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "7030:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "7030:3:6"
																												},
																												"nativeSrc": "7030:17:6",
																												"nodeType": "YulFunctionCall",
																												"src": "7030:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "7000:18:6",
																											"nodeType": "YulIdentifier",
																											"src": "7000:18:6"
																										},
																										"nativeSrc": "7000:48:6",
																										"nodeType": "YulFunctionCall",
																										"src": "7000:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6985:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "6985:6:6"
																								},
																								"nativeSrc": "6985:64:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6985:64:6"
																							},
																							"nativeSrc": "6985:64:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "6985:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6890:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "6890:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6899:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "6899:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6887:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "6887:2:6"
																					},
																					"nativeSrc": "6887:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6887:19:6"
																				},
																				"nativeSrc": "6884:179:6",
																				"nodeType": "YulIf",
																				"src": "6884:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7083:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "7083:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "7097:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "7097:6:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "7105:1:6",
																											"nodeType": "YulLiteral",
																											"src": "7105:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "7093:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "7093:3:6"
																									},
																									"nativeSrc": "7093:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "7093:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "7109:1:6",
																									"nodeType": "YulLiteral",
																									"src": "7109:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7089:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "7089:3:6"
																							},
																							"nativeSrc": "7089:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "7089:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "7076:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7076:6:6"
																					},
																					"nativeSrc": "7076:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7076:36:6"
																				},
																				"nativeSrc": "7076:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "7076:36:6"
																			}
																		]
																	},
																	"nativeSrc": "6504:618:6",
																	"nodeType": "YulCase",
																	"src": "6504:618:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6509:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6509:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "7139:222:6",
																		"nodeType": "YulBlock",
																		"src": "7139:222:6",
																		"statements": [
																			{
																				"nativeSrc": "7153:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7153:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7166:1:6",
																					"nodeType": "YulLiteral",
																					"src": "7166:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "7157:5:6",
																						"nodeType": "YulTypedName",
																						"src": "7157:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7190:67:6",
																					"nodeType": "YulBlock",
																					"src": "7190:67:6",
																					"statements": [
																						{
																							"nativeSrc": "7208:35:6",
																							"nodeType": "YulAssignment",
																							"src": "7208:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "7227:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "7227:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "7232:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "7232:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "7223:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "7223:3:6"
																										},
																										"nativeSrc": "7223:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "7223:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "7217:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "7217:5:6"
																								},
																								"nativeSrc": "7217:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "7217:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "7208:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "7208:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "7183:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "7183:6:6"
																				},
																				"nativeSrc": "7180:77:6",
																				"nodeType": "YulIf",
																				"src": "7180:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7277:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "7277:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "7336:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "7336:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "7343:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "7343:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "7283:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "7283:52:6"
																							},
																							"nativeSrc": "7283:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "7283:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "7270:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7270:6:6"
																					},
																					"nativeSrc": "7270:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7270:81:6"
																				},
																				"nativeSrc": "7270:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "7270:81:6"
																			}
																		]
																	},
																	"nativeSrc": "7131:230:6",
																	"nodeType": "YulCase",
																	"src": "7131:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6484:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6484:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6492:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6492:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6481:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6481:2:6"
																},
																"nativeSrc": "6481:14:6",
																"nodeType": "YulFunctionCall",
																"src": "6481:14:6"
															},
															"nativeSrc": "6474:887:6",
															"nodeType": "YulSwitch",
															"src": "6474:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5972:1395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6053:4:6",
														"nodeType": "YulTypedName",
														"src": "6053:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "6059:3:6",
														"nodeType": "YulTypedName",
														"src": "6059:3:6",
														"type": ""
													}
												],
												"src": "5972:1395:6"
											},
											{
												"body": {
													"nativeSrc": "7469:73:6",
													"nodeType": "YulBlock",
													"src": "7469:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7486:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7486:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7491:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7491:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7479:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7479:6:6"
																},
																"nativeSrc": "7479:19:6",
																"nodeType": "YulFunctionCall",
																"src": "7479:19:6"
															},
															"nativeSrc": "7479:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "7479:19:6"
														},
														{
															"nativeSrc": "7507:29:6",
															"nodeType": "YulAssignment",
															"src": "7507:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7526:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7526:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7531:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7531:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7522:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7522:3:6"
																},
																"nativeSrc": "7522:14:6",
																"nodeType": "YulFunctionCall",
																"src": "7522:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7507:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "7507:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7373:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7441:3:6",
														"nodeType": "YulTypedName",
														"src": "7441:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7446:6:6",
														"nodeType": "YulTypedName",
														"src": "7446:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7457:11:6",
														"nodeType": "YulTypedName",
														"src": "7457:11:6",
														"type": ""
													}
												],
												"src": "7373:169:6"
											},
											{
												"body": {
													"nativeSrc": "7654:127:6",
													"nodeType": "YulBlock",
													"src": "7654:127:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7676:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7676:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7684:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7684:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7672:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7672:3:6"
																		},
																		"nativeSrc": "7672:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7672:14:6"
																	},
																	{
																		"hexValue": "4d79476f7620746f6b656e20737570706c79206d75737420626520657175616c",
																		"kind": "string",
																		"nativeSrc": "7688:34:6",
																		"nodeType": "YulLiteral",
																		"src": "7688:34:6",
																		"type": "",
																		"value": "MyGov token supply must be equal"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7665:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7665:6:6"
																},
																"nativeSrc": "7665:58:6",
																"nodeType": "YulFunctionCall",
																"src": "7665:58:6"
															},
															"nativeSrc": "7665:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "7665:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7744:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7744:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7752:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7752:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7740:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7740:3:6"
																		},
																		"nativeSrc": "7740:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7740:15:6"
																	},
																	{
																		"hexValue": "20746f203230206d696c6c696f6e",
																		"kind": "string",
																		"nativeSrc": "7757:16:6",
																		"nodeType": "YulLiteral",
																		"src": "7757:16:6",
																		"type": "",
																		"value": " to 20 million"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7733:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7733:6:6"
																},
																"nativeSrc": "7733:41:6",
																"nodeType": "YulFunctionCall",
																"src": "7733:41:6"
															},
															"nativeSrc": "7733:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "7733:41:6"
														}
													]
												},
												"name": "store_literal_in_memory_94b9a4ade9c8956771010031ab3026fb79e05a728412f62dfe1b190b3f2a81b2",
												"nativeSrc": "7548:233:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7646:6:6",
														"nodeType": "YulTypedName",
														"src": "7646:6:6",
														"type": ""
													}
												],
												"src": "7548:233:6"
											},
											{
												"body": {
													"nativeSrc": "7933:220:6",
													"nodeType": "YulBlock",
													"src": "7933:220:6",
													"statements": [
														{
															"nativeSrc": "7943:74:6",
															"nodeType": "YulAssignment",
															"src": "7943:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8009:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8009:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8014:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8014:2:6",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7950:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "7950:58:6"
																},
																"nativeSrc": "7950:67:6",
																"nodeType": "YulFunctionCall",
																"src": "7950:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7943:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7943:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8115:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8115:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_94b9a4ade9c8956771010031ab3026fb79e05a728412f62dfe1b190b3f2a81b2",
																	"nativeSrc": "8026:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "8026:88:6"
																},
																"nativeSrc": "8026:93:6",
																"nodeType": "YulFunctionCall",
																"src": "8026:93:6"
															},
															"nativeSrc": "8026:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "8026:93:6"
														},
														{
															"nativeSrc": "8128:19:6",
															"nodeType": "YulAssignment",
															"src": "8128:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8139:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8139:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8144:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8144:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8135:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8135:3:6"
																},
																"nativeSrc": "8135:12:6",
																"nodeType": "YulFunctionCall",
																"src": "8135:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8128:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8128:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_94b9a4ade9c8956771010031ab3026fb79e05a728412f62dfe1b190b3f2a81b2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7787:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7921:3:6",
														"nodeType": "YulTypedName",
														"src": "7921:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7929:3:6",
														"nodeType": "YulTypedName",
														"src": "7929:3:6",
														"type": ""
													}
												],
												"src": "7787:366:6"
											},
											{
												"body": {
													"nativeSrc": "8330:248:6",
													"nodeType": "YulBlock",
													"src": "8330:248:6",
													"statements": [
														{
															"nativeSrc": "8340:26:6",
															"nodeType": "YulAssignment",
															"src": "8340:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8352:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8352:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8363:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8363:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8348:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8348:3:6"
																},
																"nativeSrc": "8348:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8348:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8340:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8340:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8387:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8387:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8398:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8398:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8383:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8383:3:6"
																		},
																		"nativeSrc": "8383:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8383:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8406:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8406:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8412:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8412:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8402:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8402:3:6"
																		},
																		"nativeSrc": "8402:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8402:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8376:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8376:6:6"
																},
																"nativeSrc": "8376:47:6",
																"nodeType": "YulFunctionCall",
																"src": "8376:47:6"
															},
															"nativeSrc": "8376:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "8376:47:6"
														},
														{
															"nativeSrc": "8432:139:6",
															"nodeType": "YulAssignment",
															"src": "8432:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8566:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8566:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_94b9a4ade9c8956771010031ab3026fb79e05a728412f62dfe1b190b3f2a81b2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8440:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "8440:124:6"
																},
																"nativeSrc": "8440:131:6",
																"nodeType": "YulFunctionCall",
																"src": "8440:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8432:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8432:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_94b9a4ade9c8956771010031ab3026fb79e05a728412f62dfe1b190b3f2a81b2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8159:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8310:9:6",
														"nodeType": "YulTypedName",
														"src": "8310:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8325:4:6",
														"nodeType": "YulTypedName",
														"src": "8325:4:6",
														"type": ""
													}
												],
												"src": "8159:419:6"
											},
											{
												"body": {
													"nativeSrc": "8649:53:6",
													"nodeType": "YulBlock",
													"src": "8649:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8666:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8666:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8689:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8689:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8671:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "8671:17:6"
																		},
																		"nativeSrc": "8671:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8671:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8659:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8659:6:6"
																},
																"nativeSrc": "8659:37:6",
																"nodeType": "YulFunctionCall",
																"src": "8659:37:6"
															},
															"nativeSrc": "8659:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "8659:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8584:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8637:5:6",
														"nodeType": "YulTypedName",
														"src": "8637:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8644:3:6",
														"nodeType": "YulTypedName",
														"src": "8644:3:6",
														"type": ""
													}
												],
												"src": "8584:118:6"
											},
											{
												"body": {
													"nativeSrc": "8806:124:6",
													"nodeType": "YulBlock",
													"src": "8806:124:6",
													"statements": [
														{
															"nativeSrc": "8816:26:6",
															"nodeType": "YulAssignment",
															"src": "8816:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8828:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8828:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8839:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8839:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8824:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8824:3:6"
																},
																"nativeSrc": "8824:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8824:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8816:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8816:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8896:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8896:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8909:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8909:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8920:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8920:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8905:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8905:3:6"
																		},
																		"nativeSrc": "8905:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8905:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8852:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "8852:43:6"
																},
																"nativeSrc": "8852:71:6",
																"nodeType": "YulFunctionCall",
																"src": "8852:71:6"
															},
															"nativeSrc": "8852:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "8852:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8708:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8778:9:6",
														"nodeType": "YulTypedName",
														"src": "8778:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8790:6:6",
														"nodeType": "YulTypedName",
														"src": "8790:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8801:4:6",
														"nodeType": "YulTypedName",
														"src": "8801:4:6",
														"type": ""
													}
												],
												"src": "8708:222:6"
											},
											{
												"body": {
													"nativeSrc": "8964:152:6",
													"nodeType": "YulBlock",
													"src": "8964:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8981:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8981:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8984:77:6",
																		"nodeType": "YulLiteral",
																		"src": "8984:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8974:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8974:6:6"
																},
																"nativeSrc": "8974:88:6",
																"nodeType": "YulFunctionCall",
																"src": "8974:88:6"
															},
															"nativeSrc": "8974:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "8974:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9078:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9078:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9081:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9081:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9071:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9071:6:6"
																},
																"nativeSrc": "9071:15:6",
																"nodeType": "YulFunctionCall",
																"src": "9071:15:6"
															},
															"nativeSrc": "9071:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "9071:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9102:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9102:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9105:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9105:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9095:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9095:6:6"
																},
																"nativeSrc": "9095:15:6",
																"nodeType": "YulFunctionCall",
																"src": "9095:15:6"
															},
															"nativeSrc": "9095:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "9095:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8936:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "8936:180:6"
											},
											{
												"body": {
													"nativeSrc": "9166:147:6",
													"nodeType": "YulBlock",
													"src": "9166:147:6",
													"statements": [
														{
															"nativeSrc": "9176:25:6",
															"nodeType": "YulAssignment",
															"src": "9176:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9199:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9199:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9181:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9181:17:6"
																},
																"nativeSrc": "9181:20:6",
																"nodeType": "YulFunctionCall",
																"src": "9181:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9176:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "9176:1:6"
																}
															]
														},
														{
															"nativeSrc": "9210:25:6",
															"nodeType": "YulAssignment",
															"src": "9210:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9233:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9233:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9215:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9215:17:6"
																},
																"nativeSrc": "9215:20:6",
																"nodeType": "YulFunctionCall",
																"src": "9215:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9210:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "9210:1:6"
																}
															]
														},
														{
															"nativeSrc": "9244:16:6",
															"nodeType": "YulAssignment",
															"src": "9244:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9255:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9255:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9258:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9258:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9251:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9251:3:6"
																},
																"nativeSrc": "9251:9:6",
																"nodeType": "YulFunctionCall",
																"src": "9251:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9244:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9244:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9284:22:6",
																"nodeType": "YulBlock",
																"src": "9284:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9286:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "9286:16:6"
																			},
																			"nativeSrc": "9286:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9286:18:6"
																		},
																		"nativeSrc": "9286:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9286:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9276:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9276:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9279:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9279:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9273:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "9273:2:6"
																},
																"nativeSrc": "9273:10:6",
																"nodeType": "YulFunctionCall",
																"src": "9273:10:6"
															},
															"nativeSrc": "9270:36:6",
															"nodeType": "YulIf",
															"src": "9270:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9122:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9153:1:6",
														"nodeType": "YulTypedName",
														"src": "9153:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9156:1:6",
														"nodeType": "YulTypedName",
														"src": "9156:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9162:3:6",
														"nodeType": "YulTypedName",
														"src": "9162:3:6",
														"type": ""
													}
												],
												"src": "9122:191:6"
											},
											{
												"body": {
													"nativeSrc": "9384:53:6",
													"nodeType": "YulBlock",
													"src": "9384:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9401:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9401:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9424:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "9424:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9406:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "9406:17:6"
																		},
																		"nativeSrc": "9406:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9406:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9394:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9394:6:6"
																},
																"nativeSrc": "9394:37:6",
																"nodeType": "YulFunctionCall",
																"src": "9394:37:6"
															},
															"nativeSrc": "9394:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "9394:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9319:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9372:5:6",
														"nodeType": "YulTypedName",
														"src": "9372:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9379:3:6",
														"nodeType": "YulTypedName",
														"src": "9379:3:6",
														"type": ""
													}
												],
												"src": "9319:118:6"
											},
											{
												"body": {
													"nativeSrc": "9597:288:6",
													"nodeType": "YulBlock",
													"src": "9597:288:6",
													"statements": [
														{
															"nativeSrc": "9607:26:6",
															"nodeType": "YulAssignment",
															"src": "9607:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9619:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9619:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9630:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9630:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9615:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9615:3:6"
																},
																"nativeSrc": "9615:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9615:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9607:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9607:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9687:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9687:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9700:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9700:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9711:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9711:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9696:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9696:3:6"
																		},
																		"nativeSrc": "9696:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9696:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9643:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9643:43:6"
																},
																"nativeSrc": "9643:71:6",
																"nodeType": "YulFunctionCall",
																"src": "9643:71:6"
															},
															"nativeSrc": "9643:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "9643:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9768:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9768:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9781:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9781:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9792:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9792:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9777:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9777:3:6"
																		},
																		"nativeSrc": "9777:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9777:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9724:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9724:43:6"
																},
																"nativeSrc": "9724:72:6",
																"nodeType": "YulFunctionCall",
																"src": "9724:72:6"
															},
															"nativeSrc": "9724:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "9724:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9850:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9850:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9863:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9863:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9874:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9874:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9859:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9859:3:6"
																		},
																		"nativeSrc": "9859:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9806:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "9806:43:6"
																},
																"nativeSrc": "9806:72:6",
																"nodeType": "YulFunctionCall",
																"src": "9806:72:6"
															},
															"nativeSrc": "9806:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "9806:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9443:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9553:9:6",
														"nodeType": "YulTypedName",
														"src": "9553:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9565:6:6",
														"nodeType": "YulTypedName",
														"src": "9565:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9573:6:6",
														"nodeType": "YulTypedName",
														"src": "9573:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9581:6:6",
														"nodeType": "YulTypedName",
														"src": "9581:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9592:4:6",
														"nodeType": "YulTypedName",
														"src": "9592:4:6",
														"type": ""
													}
												],
												"src": "9443:442:6"
											},
											{
												"body": {
													"nativeSrc": "9989:124:6",
													"nodeType": "YulBlock",
													"src": "9989:124:6",
													"statements": [
														{
															"nativeSrc": "9999:26:6",
															"nodeType": "YulAssignment",
															"src": "9999:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10011:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10011:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10022:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10022:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10007:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10007:3:6"
																},
																"nativeSrc": "10007:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10007:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9999:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9999:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10079:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10079:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10092:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10092:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10103:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10103:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10088:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10088:3:6"
																		},
																		"nativeSrc": "10088:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10088:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10035:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10035:43:6"
																},
																"nativeSrc": "10035:71:6",
																"nodeType": "YulFunctionCall",
																"src": "10035:71:6"
															},
															"nativeSrc": "10035:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "10035:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "9891:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9961:9:6",
														"nodeType": "YulTypedName",
														"src": "9961:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9973:6:6",
														"nodeType": "YulTypedName",
														"src": "9973:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9984:4:6",
														"nodeType": "YulTypedName",
														"src": "9984:4:6",
														"type": ""
													}
												],
												"src": "9891:222:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_94b9a4ade9c8956771010031ab3026fb79e05a728412f62dfe1b190b3f2a81b2(memPtr) {\n\n        mstore(add(memPtr, 0), \"MyGov token supply must be equal\")\n\n        mstore(add(memPtr, 32), \" to 20 million\")\n\n    }\n\n    function abi_encode_t_stringliteral_94b9a4ade9c8956771010031ab3026fb79e05a728412f62dfe1b190b3f2a81b2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_94b9a4ade9c8956771010031ab3026fb79e05a728412f62dfe1b190b3f2a81b2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_94b9a4ade9c8956771010031ab3026fb79e05a728412f62dfe1b190b3f2a81b2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_94b9a4ade9c8956771010031ab3026fb79e05a728412f62dfe1b190b3f2a81b2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x204B CODESIZE SUB DUP1 PUSH3 0x204B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x511 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D79476F76000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D47000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xB3 SWAP2 SWAP1 PUSH3 0x7C5 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xC5 SWAP2 SWAP1 PUSH3 0x7C5 JUMP JUMPDEST POP POP POP PUSH4 0x1312D00 DUP4 EQ PUSH3 0x111 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x108 SWAP1 PUSH3 0x92D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x143 ADDRESS DUP5 PUSH3 0x18C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0xA47 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1FF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1F6 SWAP2 SWAP1 PUSH3 0x95E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x212 PUSH0 DUP4 DUP4 PUSH3 0x216 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x26A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x25D SWAP2 SWAP1 PUSH3 0x9A6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x33B JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x2F6 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2ED SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x9F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x384 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x3CE JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x42D SWAP2 SWAP1 PUSH3 0xA2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x452 DUP2 PUSH3 0x43E JUMP JUMPDEST DUP2 EQ PUSH3 0x45D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x470 DUP2 PUSH3 0x447 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x4A1 DUP3 PUSH3 0x476 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4B3 DUP2 PUSH3 0x495 JUMP JUMPDEST DUP2 EQ PUSH3 0x4BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x4D1 DUP2 PUSH3 0x4A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4ED DUP2 PUSH3 0x4D7 JUMP JUMPDEST DUP2 EQ PUSH3 0x4F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x50B DUP2 PUSH3 0x4E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x52B JUMPI PUSH3 0x52A PUSH3 0x43A JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x53A DUP7 DUP3 DUP8 ADD PUSH3 0x460 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x54D DUP7 DUP3 DUP8 ADD PUSH3 0x4C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x560 DUP7 DUP3 DUP8 ADD PUSH3 0x4FB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x5E6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x5FC JUMPI PUSH3 0x5FB PUSH3 0x5A1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x660 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x623 JUMP JUMPDEST PUSH3 0x66C DUP7 DUP4 PUSH3 0x623 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x6AD PUSH3 0x6A7 PUSH3 0x6A1 DUP5 PUSH3 0x43E JUMP JUMPDEST PUSH3 0x684 JUMP JUMPDEST PUSH3 0x43E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x6C8 DUP4 PUSH3 0x68D JUMP JUMPDEST PUSH3 0x6E0 PUSH3 0x6D7 DUP3 PUSH3 0x6B4 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x62F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x6F6 PUSH3 0x6E8 JUMP JUMPDEST PUSH3 0x703 DUP2 DUP5 DUP5 PUSH3 0x6BD JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x72A JUMPI PUSH3 0x71E PUSH0 DUP3 PUSH3 0x6EC JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x709 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x779 JUMPI PUSH3 0x743 DUP2 PUSH3 0x602 JUMP JUMPDEST PUSH3 0x74E DUP5 PUSH3 0x614 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x75E JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x776 PUSH3 0x76D DUP6 PUSH3 0x614 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x708 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x79B PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x77E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x7B5 DUP4 DUP4 PUSH3 0x78A JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x7D0 DUP3 PUSH3 0x56A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x7EC JUMPI PUSH3 0x7EB PUSH3 0x574 JUMP JUMPDEST JUMPDEST PUSH3 0x7F8 DUP3 SLOAD PUSH3 0x5CE JUMP JUMPDEST PUSH3 0x805 DUP3 DUP3 DUP6 PUSH3 0x72E JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x83B JUMPI PUSH0 DUP5 ISZERO PUSH3 0x826 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x832 DUP6 DUP3 PUSH3 0x7A8 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x8A1 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x84B DUP7 PUSH3 0x602 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x874 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x84D JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x894 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x890 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x78A JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D79476F7620746F6B656E20737570706C79206D75737420626520657175616C PUSH0 DUP3 ADD MSTORE PUSH32 0x20746F203230206D696C6C696F6E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x915 PUSH1 0x2E DUP4 PUSH3 0x8A9 JUMP JUMPDEST SWAP2 POP PUSH3 0x922 DUP3 PUSH3 0x8B9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x946 DUP2 PUSH3 0x907 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x958 DUP2 PUSH3 0x495 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x973 PUSH0 DUP4 ADD DUP5 PUSH3 0x94D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH3 0x9B2 DUP3 PUSH3 0x43E JUMP JUMPDEST SWAP2 POP PUSH3 0x9BF DUP4 PUSH3 0x43E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0x9DA JUMPI PUSH3 0x9D9 PUSH3 0x979 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x9EB DUP2 PUSH3 0x43E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xA06 PUSH0 DUP4 ADD DUP7 PUSH3 0x94D JUMP JUMPDEST PUSH3 0xA15 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0x9E0 JUMP JUMPDEST PUSH3 0xA24 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0x9E0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xA41 PUSH0 DUP4 ADD DUP5 PUSH3 0x9E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15F6 DUP1 PUSH3 0xA55 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xD915902E GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xD915902E EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xDE5F72FD EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xE6664928 EQ PUSH2 0x32A JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0xB3AFCEE4 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xC7F48DF7 EQ PUSH2 0x2A4 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x34DCB04E EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x39C94D2D EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F6 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x334 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0xF31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0xFE2 JUMP JUMPDEST PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x107B JUMP JUMPDEST PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH2 0x425 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x115A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0x44A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x119E JUMP JUMPDEST PUSH2 0x458 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH2 0x49D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0xF31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0xFE2 JUMP JUMPDEST PUSH2 0x52D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x119E JUMP JUMPDEST PUSH2 0x54F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x119E JUMP JUMPDEST PUSH2 0x562 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0x603 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x11C9 JUMP JUMPDEST PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x328 PUSH2 0x725 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x332 PUSH2 0x8CD JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x343 SWAP1 PUSH2 0x1234 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x36F SWAP1 PUSH2 0x1234 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3BA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x391 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3BA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x39D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3CE PUSH2 0x924 JUMP JUMPDEST SWAP1 POP PUSH2 0x3DB DUP2 DUP6 DUP6 PUSH2 0x92B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3F9 PUSH2 0x924 JUMP JUMPDEST SWAP1 POP PUSH2 0x406 DUP6 DUP3 DUP6 PUSH2 0x93D JUMP JUMPDEST PUSH2 0x411 DUP6 DUP6 DUP6 PUSH2 0x9CF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x454 ADDRESS DUP3 PUSH2 0x52D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4AC SWAP1 PUSH2 0x1234 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4D8 SWAP1 PUSH2 0x1234 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x523 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4FA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x523 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x506 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x537 PUSH2 0x924 JUMP JUMPDEST SWAP1 POP PUSH2 0x544 DUP2 DUP6 DUP6 PUSH2 0x9CF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x55A DUP4 PUSH2 0x458 JUMP JUMPDEST GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5D8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5FC SWAP2 SWAP1 PUSH2 0x12A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65F SWAP3 SWAP2 SWAP1 PUSH2 0x12CB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x67B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x69F SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x72F ADDRESS PUSH2 0x458 JUMP JUMPDEST GT PUSH2 0x76F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x766 SWAP1 PUSH2 0x1391 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F0 SWAP1 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0xA PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x835 SWAP3 SWAP2 SWAP1 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x851 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x875 SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x91B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x912 SWAP1 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x938 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xABF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x948 DUP5 DUP5 PUSH2 0x6A3 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x9C9 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x9BA JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x152B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9C8 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xABF JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA3F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA36 SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAAF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA6 SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xABA DUP4 DUP4 DUP4 PUSH2 0xC8E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB2F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB26 SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB9F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB96 SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xC88 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xC7F SWAP2 SWAP1 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCDE JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCD2 SWAP2 SWAP1 PUSH2 0x158D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xDAC JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xD67 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x152B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDF3 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE3D JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xE9A SWAP2 SWAP1 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEDE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEC3 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF03 DUP3 PUSH2 0xEA7 JUMP JUMPDEST PUSH2 0xF0D DUP2 DUP6 PUSH2 0xEB1 JUMP JUMPDEST SWAP4 POP PUSH2 0xF1D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEC1 JUMP JUMPDEST PUSH2 0xF26 DUP2 PUSH2 0xEE9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF49 DUP2 DUP5 PUSH2 0xEF9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF7E DUP3 PUSH2 0xF55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF8E DUP2 PUSH2 0xF74 JUMP JUMPDEST DUP2 EQ PUSH2 0xF98 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFA9 DUP2 PUSH2 0xF85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC1 DUP2 PUSH2 0xFAF JUMP JUMPDEST DUP2 EQ PUSH2 0xFCB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFDC DUP2 PUSH2 0xFB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFF8 JUMPI PUSH2 0xFF7 PUSH2 0xF51 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1005 DUP6 DUP3 DUP7 ADD PUSH2 0xF9B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1016 DUP6 DUP3 DUP7 ADD PUSH2 0xFCE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1034 DUP2 PUSH2 0x1020 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x104D PUSH0 DUP4 ADD DUP5 PUSH2 0x102B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x105C DUP2 PUSH2 0xFAF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1075 PUSH0 DUP4 ADD DUP5 PUSH2 0x1053 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1092 JUMPI PUSH2 0x1091 PUSH2 0xF51 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x109F DUP7 DUP3 DUP8 ADD PUSH2 0xF9B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x10B0 DUP7 DUP3 DUP8 ADD PUSH2 0xF9B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x10C1 DUP7 DUP3 DUP8 ADD PUSH2 0xFCE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10E0 DUP2 PUSH2 0x10CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10F9 PUSH0 DUP4 ADD DUP5 PUSH2 0x10D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1122 PUSH2 0x111D PUSH2 0x1118 DUP5 PUSH2 0xF55 JUMP JUMPDEST PUSH2 0x10FF JUMP JUMPDEST PUSH2 0xF55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1133 DUP3 PUSH2 0x1108 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1144 DUP3 PUSH2 0x1129 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1154 DUP2 PUSH2 0x113A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x116D PUSH0 DUP4 ADD DUP5 PUSH2 0x114B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1188 JUMPI PUSH2 0x1187 PUSH2 0xF51 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1195 DUP5 DUP3 DUP6 ADD PUSH2 0xFCE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11B3 JUMPI PUSH2 0x11B2 PUSH2 0xF51 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11C0 DUP5 DUP3 DUP6 ADD PUSH2 0xF9B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11DF JUMPI PUSH2 0x11DE PUSH2 0xF51 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11EC DUP6 DUP3 DUP7 ADD PUSH2 0xF9B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11FD DUP6 DUP3 DUP7 ADD PUSH2 0xF9B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x124B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x125E JUMPI PUSH2 0x125D PUSH2 0x1207 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x126D DUP2 PUSH2 0xF74 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1286 PUSH0 DUP4 ADD DUP5 PUSH2 0x1264 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x129A DUP2 PUSH2 0xFB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12B5 JUMPI PUSH2 0x12B4 PUSH2 0xF51 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12C2 DUP5 DUP3 DUP6 ADD PUSH2 0x128C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x12DE PUSH0 DUP4 ADD DUP6 PUSH2 0x1264 JUMP JUMPDEST PUSH2 0x12EB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1053 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x12FB DUP2 PUSH2 0x1020 JUMP JUMPDEST DUP2 EQ PUSH2 0x1305 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1316 DUP2 PUSH2 0x12F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1331 JUMPI PUSH2 0x1330 PUSH2 0xF51 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x133E DUP5 DUP3 DUP6 ADD PUSH2 0x1308 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E73206C656674206F6E20636F6E7472616374000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x137B PUSH1 0x1A DUP4 PUSH2 0xEB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1386 DUP3 PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13A8 DUP2 PUSH2 0x136F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7520616C726561647920726563656976656420746F6B656E2066726F6D20 PUSH0 DUP3 ADD MSTORE PUSH32 0x636F6E7472616374000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1409 PUSH1 0x28 DUP4 PUSH2 0xEB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1414 DUP3 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1436 DUP2 PUSH2 0x13FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1460 PUSH2 0x145B PUSH2 0x1456 DUP5 PUSH2 0x143D JUMP JUMPDEST PUSH2 0x10FF JUMP JUMPDEST PUSH2 0xFAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1470 DUP2 PUSH2 0x1446 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1489 PUSH0 DUP4 ADD DUP6 PUSH2 0x1264 JUMP JUMPDEST PUSH2 0x1496 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1467 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x46756E6374696F6E2063616E206F6E6C792062652063616C6C656420696E2074 PUSH0 DUP3 ADD MSTORE PUSH32 0x657374206D6F6465000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14F7 PUSH1 0x28 DUP4 PUSH2 0xEB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1502 DUP3 PUSH2 0x149D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1524 DUP2 PUSH2 0x14EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x153E PUSH0 DUP4 ADD DUP7 PUSH2 0x1264 JUMP JUMPDEST PUSH2 0x154B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1053 JUMP JUMPDEST PUSH2 0x1558 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1053 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1597 DUP3 PUSH2 0xFAF JUMP JUMPDEST SWAP2 POP PUSH2 0x15A2 DUP4 PUSH2 0xFAF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x15BA JUMPI PUSH2 0x15B9 PUSH2 0x1560 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xA1B7C8E5EA8864F12351C36E7B45 LOG1 PUSH32 0x37B17F16865EAED0DD21EC1961520C64736F6C63430008160033000000000000 ",
							"sourceMap": "115:1451:5:-:0;;;274:350;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1896:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;393:8:5::1;378:11;:23;370:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;477:11;462:12;:26;;;;510:4;498:9;;:16;;;;;;;;;;;;;;;;;;524:33;538:4;545:11;524:5;;;:33;;:::i;:::-;596:20;567;;:50;;;;;;;;;;;;;;;;;;274:350:::0;;;115:1451;;7721:208:1;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;88:117:6:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:126::-;731:7;771:42;764:5;760:54;749:65;;694:126;;;:::o;826:96::-;863:7;892:24;910:5;892:24;:::i;:::-;881:35;;826:96;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:90::-;1239:7;1282:5;1275:13;1268:21;1257:32;;1205:90;;;:::o;1301:116::-;1371:21;1386:5;1371:21;:::i;:::-;1364:5;1361:32;1351:60;;1407:1;1404;1397:12;1351:60;1301:116;:::o;1423:137::-;1477:5;1508:6;1502:13;1493:22;;1524:30;1548:5;1524:30;:::i;:::-;1423:137;;;;:::o;1566:657::-;1651:6;1659;1667;1716:2;1704:9;1695:7;1691:23;1687:32;1684:119;;;1722:79;;:::i;:::-;1684:119;1842:1;1867:64;1923:7;1914:6;1903:9;1899:22;1867:64;:::i;:::-;1857:74;;1813:128;1980:2;2006:64;2062:7;2053:6;2042:9;2038:22;2006:64;:::i;:::-;1996:74;;1951:129;2119:2;2145:61;2198:7;2189:6;2178:9;2174:22;2145:61;:::i;:::-;2135:71;;2090:126;1566:657;;;;;:::o;2229:99::-;2281:6;2315:5;2309:12;2299:22;;2229:99;;;:::o;2334:180::-;2382:77;2379:1;2372:88;2479:4;2476:1;2469:15;2503:4;2500:1;2493:15;2520:180;2568:77;2565:1;2558:88;2665:4;2662:1;2655:15;2689:4;2686:1;2679:15;2706:320;2750:6;2787:1;2781:4;2777:12;2767:22;;2834:1;2828:4;2824:12;2855:18;2845:81;;2911:4;2903:6;2899:17;2889:27;;2845:81;2973:2;2965:6;2962:14;2942:18;2939:38;2936:84;;2992:18;;:::i;:::-;2936:84;2757:269;2706:320;;;:::o;3032:141::-;3081:4;3104:3;3096:11;;3127:3;3124:1;3117:14;3161:4;3158:1;3148:18;3140:26;;3032:141;;;:::o;3179:93::-;3216:6;3263:2;3258;3251:5;3247:14;3243:23;3233:33;;3179:93;;;:::o;3278:107::-;3322:8;3372:5;3366:4;3362:16;3341:37;;3278:107;;;;:::o;3391:393::-;3460:6;3510:1;3498:10;3494:18;3533:97;3563:66;3552:9;3533:97;:::i;:::-;3651:39;3681:8;3670:9;3651:39;:::i;:::-;3639:51;;3723:4;3719:9;3712:5;3708:21;3699:30;;3772:4;3762:8;3758:19;3751:5;3748:30;3738:40;;3467:317;;3391:393;;;;;:::o;3790:60::-;3818:3;3839:5;3832:12;;3790:60;;;:::o;3856:142::-;3906:9;3939:53;3957:34;3966:24;3984:5;3966:24;:::i;:::-;3957:34;:::i;:::-;3939:53;:::i;:::-;3926:66;;3856:142;;;:::o;4004:75::-;4047:3;4068:5;4061:12;;4004:75;;;:::o;4085:269::-;4195:39;4226:7;4195:39;:::i;:::-;4256:91;4305:41;4329:16;4305:41;:::i;:::-;4297:6;4290:4;4284:11;4256:91;:::i;:::-;4250:4;4243:105;4161:193;4085:269;;;:::o;4360:73::-;4405:3;4360:73;:::o;4439:189::-;4516:32;;:::i;:::-;4557:65;4615:6;4607;4601:4;4557:65;:::i;:::-;4492:136;4439:189;;:::o;4634:186::-;4694:120;4711:3;4704:5;4701:14;4694:120;;;4765:39;4802:1;4795:5;4765:39;:::i;:::-;4738:1;4731:5;4727:13;4718:22;;4694:120;;;4634:186;;:::o;4826:543::-;4927:2;4922:3;4919:11;4916:446;;;4961:38;4993:5;4961:38;:::i;:::-;5045:29;5063:10;5045:29;:::i;:::-;5035:8;5031:44;5228:2;5216:10;5213:18;5210:49;;;5249:8;5234:23;;5210:49;5272:80;5328:22;5346:3;5328:22;:::i;:::-;5318:8;5314:37;5301:11;5272:80;:::i;:::-;4931:431;;4916:446;4826:543;;;:::o;5375:117::-;5429:8;5479:5;5473:4;5469:16;5448:37;;5375:117;;;;:::o;5498:169::-;5542:6;5575:51;5623:1;5619:6;5611:5;5608:1;5604:13;5575:51;:::i;:::-;5571:56;5656:4;5650;5646:15;5636:25;;5549:118;5498:169;;;;:::o;5672:295::-;5748:4;5894:29;5919:3;5913:4;5894:29;:::i;:::-;5886:37;;5956:3;5953:1;5949:11;5943:4;5940:21;5932:29;;5672:295;;;;:::o;5972:1395::-;6089:37;6122:3;6089:37;:::i;:::-;6191:18;6183:6;6180:30;6177:56;;;6213:18;;:::i;:::-;6177:56;6257:38;6289:4;6283:11;6257:38;:::i;:::-;6342:67;6402:6;6394;6388:4;6342:67;:::i;:::-;6436:1;6460:4;6447:17;;6492:2;6484:6;6481:14;6509:1;6504:618;;;;7166:1;7183:6;7180:77;;;7232:9;7227:3;7223:19;7217:26;7208:35;;7180:77;7283:67;7343:6;7336:5;7283:67;:::i;:::-;7277:4;7270:81;7139:222;6474:887;;6504:618;6556:4;6552:9;6544:6;6540:22;6590:37;6622:4;6590:37;:::i;:::-;6649:1;6663:208;6677:7;6674:1;6671:14;6663:208;;;6756:9;6751:3;6747:19;6741:26;6733:6;6726:42;6807:1;6799:6;6795:14;6785:24;;6854:2;6843:9;6839:18;6826:31;;6700:4;6697:1;6693:12;6688:17;;6663:208;;;6899:6;6890:7;6887:19;6884:179;;;6957:9;6952:3;6948:19;6942:26;7000:48;7042:4;7034:6;7030:17;7019:9;7000:48;:::i;:::-;6992:6;6985:64;6907:156;6884:179;7109:1;7105;7097:6;7093:14;7089:22;7083:4;7076:36;6511:611;;;6474:887;;6064:1303;;;5972:1395;;:::o;7373:169::-;7457:11;7491:6;7486:3;7479:19;7531:4;7526:3;7522:14;7507:29;;7373:169;;;;:::o;7548:233::-;7688:34;7684:1;7676:6;7672:14;7665:58;7757:16;7752:2;7744:6;7740:15;7733:41;7548:233;:::o;7787:366::-;7929:3;7950:67;8014:2;8009:3;7950:67;:::i;:::-;7943:74;;8026:93;8115:3;8026:93;:::i;:::-;8144:2;8139:3;8135:12;8128:19;;7787:366;;;:::o;8159:419::-;8325:4;8363:2;8352:9;8348:18;8340:26;;8412:9;8406:4;8402:20;8398:1;8387:9;8383:17;8376:47;8440:131;8566:4;8440:131;:::i;:::-;8432:139;;8159:419;;;:::o;8584:118::-;8671:24;8689:5;8671:24;:::i;:::-;8666:3;8659:37;8584:118;;:::o;8708:222::-;8801:4;8839:2;8828:9;8824:18;8816:26;;8852:71;8920:1;8909:9;8905:17;8896:6;8852:71;:::i;:::-;8708:222;;;;:::o;8936:180::-;8984:77;8981:1;8974:88;9081:4;9078:1;9071:15;9105:4;9102:1;9095:15;9122:191;9162:3;9181:20;9199:1;9181:20;:::i;:::-;9176:25;;9215:20;9233:1;9215:20;:::i;:::-;9210:25;;9258:1;9255;9251:9;9244:16;;9279:3;9276:1;9273:10;9270:36;;;9286:18;;:::i;:::-;9270:36;9122:191;;;;:::o;9319:118::-;9406:24;9424:5;9406:24;:::i;:::-;9401:3;9394:37;9319:118;;:::o;9443:442::-;9592:4;9630:2;9619:9;9615:18;9607:26;;9643:71;9711:1;9700:9;9696:17;9687:6;9643:71;:::i;:::-;9724:72;9792:2;9781:9;9777:18;9768:6;9724:72;:::i;:::-;9806;9874:2;9863:9;9859:18;9850:6;9806:72;:::i;:::-;9443:442;;;;;;:::o;9891:222::-;9984:4;10022:2;10011:9;10007:18;9999:26;;10035:71;10103:1;10092:9;10088:17;10079:6;10035:71;:::i;:::-;9891:222;;;;:::o;115:1451:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@USD_BaseCoinContract_787": {
									"entryPoint": 1061,
									"id": 787,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_542": {
									"entryPoint": 2347,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 2751,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": 2340,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 2365,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 2511,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 3214,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": 1699,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 964,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": 1112,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_215": {
									"entryPoint": 1053,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@donateMyGovToken_879": {
									"entryPoint": 1098,
									"id": 879,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@donateUSD_865": {
									"entryPoint": 1539,
									"id": 865,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@emptyTokenSupply_849": {
									"entryPoint": 2253,
									"id": 849,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@faucet_946": {
									"entryPoint": 1829,
									"id": 946,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getUSDBalanceOfAccount_892": {
									"entryPoint": 1378,
									"id": 892,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isMyGovMember_906": {
									"entryPoint": 1359,
									"id": 906,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_197": {
									"entryPoint": 820,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_206": {
									"entryPoint": 1181,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_224": {
									"entryPoint": 998,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 1007,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 1325,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4066,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4768,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack": {
									"entryPoint": 4427,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_10_by_1_to_t_uint256_fromStack": {
									"entryPoint": 5223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_20cd1c00915cfbebfff7ab649d9df8429f6fbe08a7c9fcea251b3bd3d3aa8ca4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_84e8f47ae30a2e0d8c8b6ae2718af42560d516cd69dbfb10c1fd0e2722075210_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_95268b7f192eb9978c9fad458ac4d471c718e0b38074aeae3e2acdf0ca49f7d1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_10_by_1__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5238,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4811,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5419,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4154,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ERC20_$651__to_t_address__fromStack_reversed": {
									"entryPoint": 4442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3889,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_20cd1c00915cfbebfff7ab649d9df8429f6fbe08a7c9fcea251b3bd3d3aa8ca4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5009,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_84e8f47ae30a2e0d8c8b6ae2718af42560d516cd69dbfb10c1fd0e2722075210__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_95268b7f192eb9978c9fad458ac4d471c718e0b38074aeae3e2acdf0ca49f7d1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3751,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_10_by_1": {
									"entryPoint": 5181,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4015,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_ERC20_$651_to_t_address": {
									"entryPoint": 4410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_10_by_1_to_t_uint256": {
									"entryPoint": 5190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4360,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3777,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 4351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5472,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4615,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3921,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_20cd1c00915cfbebfff7ab649d9df8429f6fbe08a7c9fcea251b3bd3d3aa8ca4": {
									"entryPoint": 4935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_84e8f47ae30a2e0d8c8b6ae2718af42560d516cd69dbfb10c1fd0e2722075210": {
									"entryPoint": 5039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_95268b7f192eb9978c9fad458ac4d471c718e0b38074aeae3e2acdf0ca49f7d1": {
									"entryPoint": 5277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3973,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13871:6",
										"nodeType": "YulBlock",
										"src": "0:13871:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:6",
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nativeSrc": "77:22:6",
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nativeSrc": "87:12:6",
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:6",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:6",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nativeSrc": "208:73:6",
													"nodeType": "YulBlock",
													"src": "208:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:6"
																},
																"nativeSrc": "218:19:6",
																"nodeType": "YulFunctionCall",
																"src": "218:19:6"
															},
															"nativeSrc": "218:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:6"
														},
														{
															"nativeSrc": "246:29:6",
															"nodeType": "YulAssignment",
															"src": "246:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:6",
																		"nodeType": "YulLiteral",
																		"src": "270:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:6"
																},
																"nativeSrc": "261:14:6",
																"nodeType": "YulFunctionCall",
																"src": "261:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:6",
														"nodeType": "YulTypedName",
														"src": "180:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:6",
														"nodeType": "YulTypedName",
														"src": "185:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:6",
														"nodeType": "YulTypedName",
														"src": "196:11:6",
														"type": ""
													}
												],
												"src": "112:169:6"
											},
											{
												"body": {
													"nativeSrc": "349:184:6",
													"nodeType": "YulBlock",
													"src": "349:184:6",
													"statements": [
														{
															"nativeSrc": "359:10:6",
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:6",
															"value": {
																"kind": "number",
																"nativeSrc": "368:1:6",
																"nodeType": "YulLiteral",
																"src": "368:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "363:1:6",
																	"nodeType": "YulTypedName",
																	"src": "363:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "428:63:6",
																"nodeType": "YulBlock",
																"src": "428:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "453:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:6"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "458:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "449:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:6"
																					},
																					"nativeSrc": "449:11:6",
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "472:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:6"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "477:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "468:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:6"
																							},
																							"nativeSrc": "468:11:6",
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "462:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:6"
																					},
																					"nativeSrc": "462:18:6",
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "442:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:6"
																			},
																			"nativeSrc": "442:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:6"
																		},
																		"nativeSrc": "442:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "389:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "392:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "386:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:6"
																},
																"nativeSrc": "386:13:6",
																"nodeType": "YulFunctionCall",
																"src": "386:13:6"
															},
															"nativeSrc": "378:113:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "400:19:6",
																"nodeType": "YulBlock",
																"src": "400:19:6",
																"statements": [
																	{
																		"nativeSrc": "402:15:6",
																		"nodeType": "YulAssignment",
																		"src": "402:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "411:1:6",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "414:2:6",
																					"nodeType": "YulLiteral",
																					"src": "414:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "407:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:6"
																			},
																			"nativeSrc": "407:10:6",
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "402:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "382:3:6",
																"nodeType": "YulBlock",
																"src": "382:3:6",
																"statements": []
															},
															"src": "378:113:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "511:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "516:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "507:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:6"
																		},
																		"nativeSrc": "507:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "525:1:6",
																		"nodeType": "YulLiteral",
																		"src": "525:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "500:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:6"
																},
																"nativeSrc": "500:27:6",
																"nodeType": "YulFunctionCall",
																"src": "500:27:6"
															},
															"nativeSrc": "500:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "500:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:246:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:6",
														"nodeType": "YulTypedName",
														"src": "331:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:6",
														"nodeType": "YulTypedName",
														"src": "336:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:6",
														"nodeType": "YulTypedName",
														"src": "341:6:6",
														"type": ""
													}
												],
												"src": "287:246:6"
											},
											{
												"body": {
													"nativeSrc": "587:54:6",
													"nodeType": "YulBlock",
													"src": "587:54:6",
													"statements": [
														{
															"nativeSrc": "597:38:6",
															"nodeType": "YulAssignment",
															"src": "597:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "615:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "622:2:6",
																				"nodeType": "YulLiteral",
																				"src": "622:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "611:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:6"
																		},
																		"nativeSrc": "611:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "631:2:6",
																				"nodeType": "YulLiteral",
																				"src": "631:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "627:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:6"
																		},
																		"nativeSrc": "627:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "607:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:6"
																},
																"nativeSrc": "607:28:6",
																"nodeType": "YulFunctionCall",
																"src": "607:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "597:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "539:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "570:5:6",
														"nodeType": "YulTypedName",
														"src": "570:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "580:6:6",
														"nodeType": "YulTypedName",
														"src": "580:6:6",
														"type": ""
													}
												],
												"src": "539:102:6"
											},
											{
												"body": {
													"nativeSrc": "739:285:6",
													"nodeType": "YulBlock",
													"src": "739:285:6",
													"statements": [
														{
															"nativeSrc": "749:53:6",
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "796:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "763:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:6"
																},
																"nativeSrc": "763:39:6",
																"nodeType": "YulFunctionCall",
																"src": "763:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "753:6:6",
																	"nodeType": "YulTypedName",
																	"src": "753:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "811:78:6",
															"nodeType": "YulAssignment",
															"src": "811:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "877:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "882:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "818:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:6"
																},
																"nativeSrc": "818:71:6",
																"nodeType": "YulFunctionCall",
																"src": "818:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "811:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "937:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "944:4:6",
																				"nodeType": "YulLiteral",
																				"src": "944:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "933:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:6"
																		},
																		"nativeSrc": "933:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "951:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "956:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "898:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:6"
																},
																"nativeSrc": "898:65:6",
																"nodeType": "YulFunctionCall",
																"src": "898:65:6"
															},
															"nativeSrc": "898:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "898:65:6"
														},
														{
															"nativeSrc": "972:46:6",
															"nodeType": "YulAssignment",
															"src": "972:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "983:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1010:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "988:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:6"
																		},
																		"nativeSrc": "988:29:6",
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "979:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:6"
																},
																"nativeSrc": "979:39:6",
																"nodeType": "YulFunctionCall",
																"src": "979:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "972:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "647:377:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "720:5:6",
														"nodeType": "YulTypedName",
														"src": "720:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "727:3:6",
														"nodeType": "YulTypedName",
														"src": "727:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "735:3:6",
														"nodeType": "YulTypedName",
														"src": "735:3:6",
														"type": ""
													}
												],
												"src": "647:377:6"
											},
											{
												"body": {
													"nativeSrc": "1148:195:6",
													"nodeType": "YulBlock",
													"src": "1148:195:6",
													"statements": [
														{
															"nativeSrc": "1158:26:6",
															"nodeType": "YulAssignment",
															"src": "1158:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1170:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1166:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:6"
																},
																"nativeSrc": "1166:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1166:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1158:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1205:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1216:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1201:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:6"
																		},
																		"nativeSrc": "1201:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1224:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1230:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:6"
																		},
																		"nativeSrc": "1220:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:6"
																},
																"nativeSrc": "1194:47:6",
																"nodeType": "YulFunctionCall",
																"src": "1194:47:6"
															},
															"nativeSrc": "1194:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:6"
														},
														{
															"nativeSrc": "1250:86:6",
															"nodeType": "YulAssignment",
															"src": "1250:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1322:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1331:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1258:63:6",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:6"
																},
																"nativeSrc": "1258:78:6",
																"nodeType": "YulFunctionCall",
																"src": "1258:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1250:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1030:313:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1120:9:6",
														"nodeType": "YulTypedName",
														"src": "1120:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1132:6:6",
														"nodeType": "YulTypedName",
														"src": "1132:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1143:4:6",
														"nodeType": "YulTypedName",
														"src": "1143:4:6",
														"type": ""
													}
												],
												"src": "1030:313:6"
											},
											{
												"body": {
													"nativeSrc": "1389:35:6",
													"nodeType": "YulBlock",
													"src": "1389:35:6",
													"statements": [
														{
															"nativeSrc": "1399:19:6",
															"nodeType": "YulAssignment",
															"src": "1399:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1409:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:6"
																},
																"nativeSrc": "1409:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1409:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1399:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1349:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1382:6:6",
														"nodeType": "YulTypedName",
														"src": "1382:6:6",
														"type": ""
													}
												],
												"src": "1349:75:6"
											},
											{
												"body": {
													"nativeSrc": "1519:28:6",
													"nodeType": "YulBlock",
													"src": "1519:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1536:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1539:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1529:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:6"
																},
																"nativeSrc": "1529:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1529:12:6"
															},
															"nativeSrc": "1529:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1430:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:6"
											},
											{
												"body": {
													"nativeSrc": "1642:28:6",
													"nodeType": "YulBlock",
													"src": "1642:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:6"
																},
																"nativeSrc": "1652:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1652:12:6"
															},
															"nativeSrc": "1652:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1553:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:6"
											},
											{
												"body": {
													"nativeSrc": "1721:81:6",
													"nodeType": "YulBlock",
													"src": "1721:81:6",
													"statements": [
														{
															"nativeSrc": "1731:65:6",
															"nodeType": "YulAssignment",
															"src": "1731:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1746:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:42:6",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1742:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:6"
																},
																"nativeSrc": "1742:54:6",
																"nodeType": "YulFunctionCall",
																"src": "1742:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1731:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1676:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1703:5:6",
														"nodeType": "YulTypedName",
														"src": "1703:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1713:7:6",
														"nodeType": "YulTypedName",
														"src": "1713:7:6",
														"type": ""
													}
												],
												"src": "1676:126:6"
											},
											{
												"body": {
													"nativeSrc": "1853:51:6",
													"nodeType": "YulBlock",
													"src": "1853:51:6",
													"statements": [
														{
															"nativeSrc": "1863:35:6",
															"nodeType": "YulAssignment",
															"src": "1863:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1892:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1874:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:6"
																},
																"nativeSrc": "1874:24:6",
																"nodeType": "YulFunctionCall",
																"src": "1874:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1863:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1808:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1835:5:6",
														"nodeType": "YulTypedName",
														"src": "1835:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1845:7:6",
														"nodeType": "YulTypedName",
														"src": "1845:7:6",
														"type": ""
													}
												],
												"src": "1808:96:6"
											},
											{
												"body": {
													"nativeSrc": "1953:79:6",
													"nodeType": "YulBlock",
													"src": "1953:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2010:16:6",
																"nodeType": "YulBlock",
																"src": "2010:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2019:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2022:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2012:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:6"
																			},
																			"nativeSrc": "2012:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:6"
																		},
																		"nativeSrc": "2012:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1976:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2001:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1983:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:6"
																				},
																				"nativeSrc": "1983:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1973:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:6"
																		},
																		"nativeSrc": "1973:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1966:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:6"
																},
																"nativeSrc": "1966:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1966:43:6"
															},
															"nativeSrc": "1963:63:6",
															"nodeType": "YulIf",
															"src": "1963:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1910:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1946:5:6",
														"nodeType": "YulTypedName",
														"src": "1946:5:6",
														"type": ""
													}
												],
												"src": "1910:122:6"
											},
											{
												"body": {
													"nativeSrc": "2090:87:6",
													"nodeType": "YulBlock",
													"src": "2090:87:6",
													"statements": [
														{
															"nativeSrc": "2100:29:6",
															"nodeType": "YulAssignment",
															"src": "2100:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2122:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2109:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:6"
																},
																"nativeSrc": "2109:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2109:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2100:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2165:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2138:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:6"
																},
																"nativeSrc": "2138:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2138:33:6"
															},
															"nativeSrc": "2138:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2038:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2068:6:6",
														"nodeType": "YulTypedName",
														"src": "2068:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2076:3:6",
														"nodeType": "YulTypedName",
														"src": "2076:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2084:5:6",
														"nodeType": "YulTypedName",
														"src": "2084:5:6",
														"type": ""
													}
												],
												"src": "2038:139:6"
											},
											{
												"body": {
													"nativeSrc": "2228:32:6",
													"nodeType": "YulBlock",
													"src": "2228:32:6",
													"statements": [
														{
															"nativeSrc": "2238:16:6",
															"nodeType": "YulAssignment",
															"src": "2238:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "2249:5:6",
																"nodeType": "YulIdentifier",
																"src": "2249:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2238:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2183:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2210:5:6",
														"nodeType": "YulTypedName",
														"src": "2210:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2220:7:6",
														"nodeType": "YulTypedName",
														"src": "2220:7:6",
														"type": ""
													}
												],
												"src": "2183:77:6"
											},
											{
												"body": {
													"nativeSrc": "2309:79:6",
													"nodeType": "YulBlock",
													"src": "2309:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2366:16:6",
																"nodeType": "YulBlock",
																"src": "2366:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2375:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2378:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2368:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:6"
																			},
																			"nativeSrc": "2368:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:6"
																		},
																		"nativeSrc": "2368:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2332:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2357:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2339:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:6"
																				},
																				"nativeSrc": "2339:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2329:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:6"
																		},
																		"nativeSrc": "2329:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2322:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:6"
																},
																"nativeSrc": "2322:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2322:43:6"
															},
															"nativeSrc": "2319:63:6",
															"nodeType": "YulIf",
															"src": "2319:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2266:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2302:5:6",
														"nodeType": "YulTypedName",
														"src": "2302:5:6",
														"type": ""
													}
												],
												"src": "2266:122:6"
											},
											{
												"body": {
													"nativeSrc": "2446:87:6",
													"nodeType": "YulBlock",
													"src": "2446:87:6",
													"statements": [
														{
															"nativeSrc": "2456:29:6",
															"nodeType": "YulAssignment",
															"src": "2456:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2478:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2465:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:6"
																},
																"nativeSrc": "2465:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2465:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2456:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2521:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2494:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:6"
																},
																"nativeSrc": "2494:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2494:33:6"
															},
															"nativeSrc": "2494:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2394:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2424:6:6",
														"nodeType": "YulTypedName",
														"src": "2424:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2432:3:6",
														"nodeType": "YulTypedName",
														"src": "2432:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2440:5:6",
														"nodeType": "YulTypedName",
														"src": "2440:5:6",
														"type": ""
													}
												],
												"src": "2394:139:6"
											},
											{
												"body": {
													"nativeSrc": "2622:391:6",
													"nodeType": "YulBlock",
													"src": "2622:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2668:83:6",
																"nodeType": "YulBlock",
																"src": "2668:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2670:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:6"
																			},
																			"nativeSrc": "2670:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:6"
																		},
																		"nativeSrc": "2670:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2643:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2652:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2639:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:6"
																		},
																		"nativeSrc": "2639:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2664:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2635:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:6"
																},
																"nativeSrc": "2635:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2635:32:6"
															},
															"nativeSrc": "2632:119:6",
															"nodeType": "YulIf",
															"src": "2632:119:6"
														},
														{
															"nativeSrc": "2761:117:6",
															"nodeType": "YulBlock",
															"src": "2761:117:6",
															"statements": [
																{
																	"nativeSrc": "2776:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2790:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2780:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2805:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2805:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2840:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2851:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2836:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:6"
																				},
																				"nativeSrc": "2836:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2860:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2815:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:6"
																		},
																		"nativeSrc": "2815:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2805:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2888:118:6",
															"nodeType": "YulBlock",
															"src": "2888:118:6",
															"statements": [
																{
																	"nativeSrc": "2903:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2917:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2907:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2933:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2933:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2968:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2979:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2964:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:6"
																				},
																				"nativeSrc": "2964:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2988:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2943:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:6"
																		},
																		"nativeSrc": "2943:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2933:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2539:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2584:9:6",
														"nodeType": "YulTypedName",
														"src": "2584:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2595:7:6",
														"nodeType": "YulTypedName",
														"src": "2595:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2607:6:6",
														"nodeType": "YulTypedName",
														"src": "2607:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2615:6:6",
														"nodeType": "YulTypedName",
														"src": "2615:6:6",
														"type": ""
													}
												],
												"src": "2539:474:6"
											},
											{
												"body": {
													"nativeSrc": "3061:48:6",
													"nodeType": "YulBlock",
													"src": "3061:48:6",
													"statements": [
														{
															"nativeSrc": "3071:32:6",
															"nodeType": "YulAssignment",
															"src": "3071:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3096:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3089:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:6"
																		},
																		"nativeSrc": "3089:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3082:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:6"
																},
																"nativeSrc": "3082:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3082:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3071:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3019:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3043:5:6",
														"nodeType": "YulTypedName",
														"src": "3043:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3053:7:6",
														"nodeType": "YulTypedName",
														"src": "3053:7:6",
														"type": ""
													}
												],
												"src": "3019:90:6"
											},
											{
												"body": {
													"nativeSrc": "3174:50:6",
													"nodeType": "YulBlock",
													"src": "3174:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3191:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3211:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3196:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:6"
																		},
																		"nativeSrc": "3196:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3184:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:6"
																},
																"nativeSrc": "3184:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3184:34:6"
															},
															"nativeSrc": "3184:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3115:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3162:5:6",
														"nodeType": "YulTypedName",
														"src": "3162:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3169:3:6",
														"nodeType": "YulTypedName",
														"src": "3169:3:6",
														"type": ""
													}
												],
												"src": "3115:109:6"
											},
											{
												"body": {
													"nativeSrc": "3322:118:6",
													"nodeType": "YulBlock",
													"src": "3322:118:6",
													"statements": [
														{
															"nativeSrc": "3332:26:6",
															"nodeType": "YulAssignment",
															"src": "3332:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3344:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3340:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:6"
																},
																"nativeSrc": "3340:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3340:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3332:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3406:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3419:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3430:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3415:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:6"
																		},
																		"nativeSrc": "3415:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3368:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:6"
																},
																"nativeSrc": "3368:65:6",
																"nodeType": "YulFunctionCall",
																"src": "3368:65:6"
															},
															"nativeSrc": "3368:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3230:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3294:9:6",
														"nodeType": "YulTypedName",
														"src": "3294:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3306:6:6",
														"nodeType": "YulTypedName",
														"src": "3306:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3317:4:6",
														"nodeType": "YulTypedName",
														"src": "3317:4:6",
														"type": ""
													}
												],
												"src": "3230:210:6"
											},
											{
												"body": {
													"nativeSrc": "3511:53:6",
													"nodeType": "YulBlock",
													"src": "3511:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3528:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3551:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3533:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:6"
																		},
																		"nativeSrc": "3533:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3521:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:6"
																},
																"nativeSrc": "3521:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3521:37:6"
															},
															"nativeSrc": "3521:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3446:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3499:5:6",
														"nodeType": "YulTypedName",
														"src": "3499:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3506:3:6",
														"nodeType": "YulTypedName",
														"src": "3506:3:6",
														"type": ""
													}
												],
												"src": "3446:118:6"
											},
											{
												"body": {
													"nativeSrc": "3668:124:6",
													"nodeType": "YulBlock",
													"src": "3668:124:6",
													"statements": [
														{
															"nativeSrc": "3678:26:6",
															"nodeType": "YulAssignment",
															"src": "3678:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3690:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3701:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3686:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:6"
																},
																"nativeSrc": "3686:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3686:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3678:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3758:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3771:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3782:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3767:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:6"
																		},
																		"nativeSrc": "3767:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3714:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:6"
																},
																"nativeSrc": "3714:71:6",
																"nodeType": "YulFunctionCall",
																"src": "3714:71:6"
															},
															"nativeSrc": "3714:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3570:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3640:9:6",
														"nodeType": "YulTypedName",
														"src": "3640:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3652:6:6",
														"nodeType": "YulTypedName",
														"src": "3652:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3663:4:6",
														"nodeType": "YulTypedName",
														"src": "3663:4:6",
														"type": ""
													}
												],
												"src": "3570:222:6"
											},
											{
												"body": {
													"nativeSrc": "3898:519:6",
													"nodeType": "YulBlock",
													"src": "3898:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3944:83:6",
																"nodeType": "YulBlock",
																"src": "3944:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3946:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:6"
																			},
																			"nativeSrc": "3946:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:6"
																		},
																		"nativeSrc": "3946:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3919:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3928:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3915:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:6"
																		},
																		"nativeSrc": "3915:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3940:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3911:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:6"
																},
																"nativeSrc": "3911:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3911:32:6"
															},
															"nativeSrc": "3908:119:6",
															"nodeType": "YulIf",
															"src": "3908:119:6"
														},
														{
															"nativeSrc": "4037:117:6",
															"nodeType": "YulBlock",
															"src": "4037:117:6",
															"statements": [
																{
																	"nativeSrc": "4052:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4066:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4056:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4081:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4081:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4116:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4127:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4112:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:6"
																				},
																				"nativeSrc": "4112:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4136:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4091:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:6"
																		},
																		"nativeSrc": "4091:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4081:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4164:118:6",
															"nodeType": "YulBlock",
															"src": "4164:118:6",
															"statements": [
																{
																	"nativeSrc": "4179:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4193:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4183:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4209:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4209:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4244:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4255:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4240:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:6"
																				},
																				"nativeSrc": "4240:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4264:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4219:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:6"
																		},
																		"nativeSrc": "4219:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4209:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4292:118:6",
															"nodeType": "YulBlock",
															"src": "4292:118:6",
															"statements": [
																{
																	"nativeSrc": "4307:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4321:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4311:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4337:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4337:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4372:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4383:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4368:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:6"
																				},
																				"nativeSrc": "4368:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4392:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4347:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:6"
																		},
																		"nativeSrc": "4347:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4337:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3798:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3852:9:6",
														"nodeType": "YulTypedName",
														"src": "3852:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3863:7:6",
														"nodeType": "YulTypedName",
														"src": "3863:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3875:6:6",
														"nodeType": "YulTypedName",
														"src": "3875:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3883:6:6",
														"nodeType": "YulTypedName",
														"src": "3883:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3891:6:6",
														"nodeType": "YulTypedName",
														"src": "3891:6:6",
														"type": ""
													}
												],
												"src": "3798:619:6"
											},
											{
												"body": {
													"nativeSrc": "4466:43:6",
													"nodeType": "YulBlock",
													"src": "4466:43:6",
													"statements": [
														{
															"nativeSrc": "4476:27:6",
															"nodeType": "YulAssignment",
															"src": "4476:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4491:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4498:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4487:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:6"
																},
																"nativeSrc": "4487:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4487:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4476:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4423:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4448:5:6",
														"nodeType": "YulTypedName",
														"src": "4448:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4458:7:6",
														"nodeType": "YulTypedName",
														"src": "4458:7:6",
														"type": ""
													}
												],
												"src": "4423:86:6"
											},
											{
												"body": {
													"nativeSrc": "4576:51:6",
													"nodeType": "YulBlock",
													"src": "4576:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4593:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4614:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4598:15:6",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:6"
																		},
																		"nativeSrc": "4598:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4586:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:6"
																},
																"nativeSrc": "4586:35:6",
																"nodeType": "YulFunctionCall",
																"src": "4586:35:6"
															},
															"nativeSrc": "4586:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4515:112:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4564:5:6",
														"nodeType": "YulTypedName",
														"src": "4564:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4571:3:6",
														"nodeType": "YulTypedName",
														"src": "4571:3:6",
														"type": ""
													}
												],
												"src": "4515:112:6"
											},
											{
												"body": {
													"nativeSrc": "4727:120:6",
													"nodeType": "YulBlock",
													"src": "4727:120:6",
													"statements": [
														{
															"nativeSrc": "4737:26:6",
															"nodeType": "YulAssignment",
															"src": "4737:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4749:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4760:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4745:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:6"
																},
																"nativeSrc": "4745:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4745:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4737:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4813:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4826:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4837:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4822:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:6"
																		},
																		"nativeSrc": "4822:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4773:39:6",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:6"
																},
																"nativeSrc": "4773:67:6",
																"nodeType": "YulFunctionCall",
																"src": "4773:67:6"
															},
															"nativeSrc": "4773:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4633:214:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4699:9:6",
														"nodeType": "YulTypedName",
														"src": "4699:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4711:6:6",
														"nodeType": "YulTypedName",
														"src": "4711:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4722:4:6",
														"nodeType": "YulTypedName",
														"src": "4722:4:6",
														"type": ""
													}
												],
												"src": "4633:214:6"
											},
											{
												"body": {
													"nativeSrc": "4885:28:6",
													"nodeType": "YulBlock",
													"src": "4885:28:6",
													"statements": [
														{
															"nativeSrc": "4895:12:6",
															"nodeType": "YulAssignment",
															"src": "4895:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "4902:5:6",
																"nodeType": "YulIdentifier",
																"src": "4902:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4895:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4895:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4853:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4871:5:6",
														"nodeType": "YulTypedName",
														"src": "4871:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4881:3:6",
														"nodeType": "YulTypedName",
														"src": "4881:3:6",
														"type": ""
													}
												],
												"src": "4853:60:6"
											},
											{
												"body": {
													"nativeSrc": "4979:82:6",
													"nodeType": "YulBlock",
													"src": "4979:82:6",
													"statements": [
														{
															"nativeSrc": "4989:66:6",
															"nodeType": "YulAssignment",
															"src": "4989:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5047:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5047:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "5029:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "5029:17:6"
																				},
																				"nativeSrc": "5029:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5029:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5020:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "5020:8:6"
																		},
																		"nativeSrc": "5020:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5020:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5002:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "5002:17:6"
																},
																"nativeSrc": "5002:53:6",
																"nodeType": "YulFunctionCall",
																"src": "5002:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4989:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "4989:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "4919:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4959:5:6",
														"nodeType": "YulTypedName",
														"src": "4959:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4969:9:6",
														"nodeType": "YulTypedName",
														"src": "4969:9:6",
														"type": ""
													}
												],
												"src": "4919:142:6"
											},
											{
												"body": {
													"nativeSrc": "5127:66:6",
													"nodeType": "YulBlock",
													"src": "5127:66:6",
													"statements": [
														{
															"nativeSrc": "5137:50:6",
															"nodeType": "YulAssignment",
															"src": "5137:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5181:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5181:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "5150:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "5150:30:6"
																},
																"nativeSrc": "5150:37:6",
																"nodeType": "YulFunctionCall",
																"src": "5150:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5137:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "5137:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "5067:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5107:5:6",
														"nodeType": "YulTypedName",
														"src": "5107:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5117:9:6",
														"nodeType": "YulTypedName",
														"src": "5117:9:6",
														"type": ""
													}
												],
												"src": "5067:126:6"
											},
											{
												"body": {
													"nativeSrc": "5272:66:6",
													"nodeType": "YulBlock",
													"src": "5272:66:6",
													"statements": [
														{
															"nativeSrc": "5282:50:6",
															"nodeType": "YulAssignment",
															"src": "5282:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5326:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5326:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5295:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "5295:30:6"
																},
																"nativeSrc": "5295:37:6",
																"nodeType": "YulFunctionCall",
																"src": "5295:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5282:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "5282:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_ERC20_$651_to_t_address",
												"nativeSrc": "5199:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5252:5:6",
														"nodeType": "YulTypedName",
														"src": "5252:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5262:9:6",
														"nodeType": "YulTypedName",
														"src": "5262:9:6",
														"type": ""
													}
												],
												"src": "5199:139:6"
											},
											{
												"body": {
													"nativeSrc": "5422:79:6",
													"nodeType": "YulBlock",
													"src": "5422:79:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5439:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5439:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5488:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5488:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_ERC20_$651_to_t_address",
																			"nativeSrc": "5444:43:6",
																			"nodeType": "YulIdentifier",
																			"src": "5444:43:6"
																		},
																		"nativeSrc": "5444:50:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5444:50:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5432:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5432:6:6"
																},
																"nativeSrc": "5432:63:6",
																"nodeType": "YulFunctionCall",
																"src": "5432:63:6"
															},
															"nativeSrc": "5432:63:6",
															"nodeType": "YulExpressionStatement",
															"src": "5432:63:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack",
												"nativeSrc": "5344:157:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5410:5:6",
														"nodeType": "YulTypedName",
														"src": "5410:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5417:3:6",
														"nodeType": "YulTypedName",
														"src": "5417:3:6",
														"type": ""
													}
												],
												"src": "5344:157:6"
											},
											{
												"body": {
													"nativeSrc": "5618:137:6",
													"nodeType": "YulBlock",
													"src": "5618:137:6",
													"statements": [
														{
															"nativeSrc": "5628:26:6",
															"nodeType": "YulAssignment",
															"src": "5628:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5640:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5640:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5651:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5651:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5636:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5636:3:6"
																},
																"nativeSrc": "5636:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5636:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5628:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5628:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5721:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5721:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5734:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5734:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5745:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5745:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5730:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5730:3:6"
																		},
																		"nativeSrc": "5730:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5730:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack",
																	"nativeSrc": "5664:56:6",
																	"nodeType": "YulIdentifier",
																	"src": "5664:56:6"
																},
																"nativeSrc": "5664:84:6",
																"nodeType": "YulFunctionCall",
																"src": "5664:84:6"
															},
															"nativeSrc": "5664:84:6",
															"nodeType": "YulExpressionStatement",
															"src": "5664:84:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ERC20_$651__to_t_address__fromStack_reversed",
												"nativeSrc": "5507:248:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5590:9:6",
														"nodeType": "YulTypedName",
														"src": "5590:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5602:6:6",
														"nodeType": "YulTypedName",
														"src": "5602:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5613:4:6",
														"nodeType": "YulTypedName",
														"src": "5613:4:6",
														"type": ""
													}
												],
												"src": "5507:248:6"
											},
											{
												"body": {
													"nativeSrc": "5827:263:6",
													"nodeType": "YulBlock",
													"src": "5827:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5873:83:6",
																"nodeType": "YulBlock",
																"src": "5873:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5875:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5875:77:6"
																			},
																			"nativeSrc": "5875:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5875:79:6"
																		},
																		"nativeSrc": "5875:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5875:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5848:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5848:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5857:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5857:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5844:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5844:3:6"
																		},
																		"nativeSrc": "5844:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5844:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5869:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5869:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5840:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5840:3:6"
																},
																"nativeSrc": "5840:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5840:32:6"
															},
															"nativeSrc": "5837:119:6",
															"nodeType": "YulIf",
															"src": "5837:119:6"
														},
														{
															"nativeSrc": "5966:117:6",
															"nodeType": "YulBlock",
															"src": "5966:117:6",
															"statements": [
																{
																	"nativeSrc": "5981:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5981:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5995:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5995:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5985:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5985:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6010:63:6",
																	"nodeType": "YulAssignment",
																	"src": "6010:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6045:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6045:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6056:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6056:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6041:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6041:3:6"
																				},
																				"nativeSrc": "6041:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6041:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6065:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6065:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6020:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "6020:20:6"
																		},
																		"nativeSrc": "6020:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6020:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6010:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6010:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5761:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5797:9:6",
														"nodeType": "YulTypedName",
														"src": "5797:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5808:7:6",
														"nodeType": "YulTypedName",
														"src": "5808:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5820:6:6",
														"nodeType": "YulTypedName",
														"src": "5820:6:6",
														"type": ""
													}
												],
												"src": "5761:329:6"
											},
											{
												"body": {
													"nativeSrc": "6162:263:6",
													"nodeType": "YulBlock",
													"src": "6162:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6208:83:6",
																"nodeType": "YulBlock",
																"src": "6208:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6210:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "6210:77:6"
																			},
																			"nativeSrc": "6210:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6210:79:6"
																		},
																		"nativeSrc": "6210:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6210:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6183:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6183:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6192:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6192:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6179:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6179:3:6"
																		},
																		"nativeSrc": "6179:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6179:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6204:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6204:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6175:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6175:3:6"
																},
																"nativeSrc": "6175:32:6",
																"nodeType": "YulFunctionCall",
																"src": "6175:32:6"
															},
															"nativeSrc": "6172:119:6",
															"nodeType": "YulIf",
															"src": "6172:119:6"
														},
														{
															"nativeSrc": "6301:117:6",
															"nodeType": "YulBlock",
															"src": "6301:117:6",
															"statements": [
																{
																	"nativeSrc": "6316:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6316:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6330:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6330:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6320:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6320:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6345:63:6",
																	"nodeType": "YulAssignment",
																	"src": "6345:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6380:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6380:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6391:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6391:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6376:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6376:3:6"
																				},
																				"nativeSrc": "6376:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6376:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6400:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6400:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6355:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "6355:20:6"
																		},
																		"nativeSrc": "6355:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6355:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6345:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6345:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6096:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6132:9:6",
														"nodeType": "YulTypedName",
														"src": "6132:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6143:7:6",
														"nodeType": "YulTypedName",
														"src": "6143:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6155:6:6",
														"nodeType": "YulTypedName",
														"src": "6155:6:6",
														"type": ""
													}
												],
												"src": "6096:329:6"
											},
											{
												"body": {
													"nativeSrc": "6514:391:6",
													"nodeType": "YulBlock",
													"src": "6514:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6560:83:6",
																"nodeType": "YulBlock",
																"src": "6560:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6562:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "6562:77:6"
																			},
																			"nativeSrc": "6562:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6562:79:6"
																		},
																		"nativeSrc": "6562:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6562:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6535:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6535:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6544:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6544:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6531:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6531:3:6"
																		},
																		"nativeSrc": "6531:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6531:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6556:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6556:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6527:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6527:3:6"
																},
																"nativeSrc": "6527:32:6",
																"nodeType": "YulFunctionCall",
																"src": "6527:32:6"
															},
															"nativeSrc": "6524:119:6",
															"nodeType": "YulIf",
															"src": "6524:119:6"
														},
														{
															"nativeSrc": "6653:117:6",
															"nodeType": "YulBlock",
															"src": "6653:117:6",
															"statements": [
																{
																	"nativeSrc": "6668:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6668:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6682:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6682:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6672:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6672:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6697:63:6",
																	"nodeType": "YulAssignment",
																	"src": "6697:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6732:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6732:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6743:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6743:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6728:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6728:3:6"
																				},
																				"nativeSrc": "6728:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6728:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6752:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6752:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6707:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "6707:20:6"
																		},
																		"nativeSrc": "6707:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6707:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6697:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6697:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6780:118:6",
															"nodeType": "YulBlock",
															"src": "6780:118:6",
															"statements": [
																{
																	"nativeSrc": "6795:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6795:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6809:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6809:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6799:6:6",
																			"nodeType": "YulTypedName",
																			"src": "6799:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6825:63:6",
																	"nodeType": "YulAssignment",
																	"src": "6825:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6860:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "6860:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6871:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6871:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6856:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6856:3:6"
																				},
																				"nativeSrc": "6856:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6856:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6880:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6880:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6835:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "6835:20:6"
																		},
																		"nativeSrc": "6835:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6835:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6825:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "6825:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6431:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6476:9:6",
														"nodeType": "YulTypedName",
														"src": "6476:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6487:7:6",
														"nodeType": "YulTypedName",
														"src": "6487:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6499:6:6",
														"nodeType": "YulTypedName",
														"src": "6499:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6507:6:6",
														"nodeType": "YulTypedName",
														"src": "6507:6:6",
														"type": ""
													}
												],
												"src": "6431:474:6"
											},
											{
												"body": {
													"nativeSrc": "6939:152:6",
													"nodeType": "YulBlock",
													"src": "6939:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6956:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6956:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6959:77:6",
																		"nodeType": "YulLiteral",
																		"src": "6959:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6949:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6949:6:6"
																},
																"nativeSrc": "6949:88:6",
																"nodeType": "YulFunctionCall",
																"src": "6949:88:6"
															},
															"nativeSrc": "6949:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "6949:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7053:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7053:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7056:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7056:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7046:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7046:6:6"
																},
																"nativeSrc": "7046:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7046:15:6"
															},
															"nativeSrc": "7046:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "7046:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7077:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7077:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7080:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7080:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7070:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7070:6:6"
																},
																"nativeSrc": "7070:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7070:15:6"
															},
															"nativeSrc": "7070:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "7070:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6911:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "6911:180:6"
											},
											{
												"body": {
													"nativeSrc": "7148:269:6",
													"nodeType": "YulBlock",
													"src": "7148:269:6",
													"statements": [
														{
															"nativeSrc": "7158:22:6",
															"nodeType": "YulAssignment",
															"src": "7158:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7172:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7172:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7178:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7178:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7168:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7168:3:6"
																},
																"nativeSrc": "7168:12:6",
																"nodeType": "YulFunctionCall",
																"src": "7168:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7158:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7158:6:6"
																}
															]
														},
														{
															"nativeSrc": "7189:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7189:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7219:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7219:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7225:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7225:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7215:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7215:3:6"
																},
																"nativeSrc": "7215:12:6",
																"nodeType": "YulFunctionCall",
																"src": "7215:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7193:18:6",
																	"nodeType": "YulTypedName",
																	"src": "7193:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7266:51:6",
																"nodeType": "YulBlock",
																"src": "7266:51:6",
																"statements": [
																	{
																		"nativeSrc": "7280:27:6",
																		"nodeType": "YulAssignment",
																		"src": "7280:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7294:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "7294:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7302:4:6",
																					"nodeType": "YulLiteral",
																					"src": "7302:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7290:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "7290:3:6"
																			},
																			"nativeSrc": "7290:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7290:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7280:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7280:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7246:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "7246:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7239:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7239:6:6"
																},
																"nativeSrc": "7239:26:6",
																"nodeType": "YulFunctionCall",
																"src": "7239:26:6"
															},
															"nativeSrc": "7236:81:6",
															"nodeType": "YulIf",
															"src": "7236:81:6"
														},
														{
															"body": {
																"nativeSrc": "7369:42:6",
																"nodeType": "YulBlock",
																"src": "7369:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "7383:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "7383:16:6"
																			},
																			"nativeSrc": "7383:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7383:18:6"
																		},
																		"nativeSrc": "7383:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7383:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7333:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "7333:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7356:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7356:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7364:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7364:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7353:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "7353:2:6"
																		},
																		"nativeSrc": "7353:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7353:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7330:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7330:2:6"
																},
																"nativeSrc": "7330:38:6",
																"nodeType": "YulFunctionCall",
																"src": "7330:38:6"
															},
															"nativeSrc": "7327:84:6",
															"nodeType": "YulIf",
															"src": "7327:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "7097:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7132:4:6",
														"nodeType": "YulTypedName",
														"src": "7132:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7141:6:6",
														"nodeType": "YulTypedName",
														"src": "7141:6:6",
														"type": ""
													}
												],
												"src": "7097:320:6"
											},
											{
												"body": {
													"nativeSrc": "7488:53:6",
													"nodeType": "YulBlock",
													"src": "7488:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7505:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7505:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7528:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "7528:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7510:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "7510:17:6"
																		},
																		"nativeSrc": "7510:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7510:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7498:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7498:6:6"
																},
																"nativeSrc": "7498:37:6",
																"nodeType": "YulFunctionCall",
																"src": "7498:37:6"
															},
															"nativeSrc": "7498:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "7498:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7423:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7476:5:6",
														"nodeType": "YulTypedName",
														"src": "7476:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7483:3:6",
														"nodeType": "YulTypedName",
														"src": "7483:3:6",
														"type": ""
													}
												],
												"src": "7423:118:6"
											},
											{
												"body": {
													"nativeSrc": "7645:124:6",
													"nodeType": "YulBlock",
													"src": "7645:124:6",
													"statements": [
														{
															"nativeSrc": "7655:26:6",
															"nodeType": "YulAssignment",
															"src": "7655:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7667:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7667:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7678:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7678:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7663:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7663:3:6"
																},
																"nativeSrc": "7663:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7663:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7655:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7655:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7735:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7735:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7748:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7748:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7759:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7759:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7744:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7744:3:6"
																		},
																		"nativeSrc": "7744:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7744:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7691:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7691:43:6"
																},
																"nativeSrc": "7691:71:6",
																"nodeType": "YulFunctionCall",
																"src": "7691:71:6"
															},
															"nativeSrc": "7691:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "7691:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7547:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7617:9:6",
														"nodeType": "YulTypedName",
														"src": "7617:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7629:6:6",
														"nodeType": "YulTypedName",
														"src": "7629:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7640:4:6",
														"nodeType": "YulTypedName",
														"src": "7640:4:6",
														"type": ""
													}
												],
												"src": "7547:222:6"
											},
											{
												"body": {
													"nativeSrc": "7838:80:6",
													"nodeType": "YulBlock",
													"src": "7838:80:6",
													"statements": [
														{
															"nativeSrc": "7848:22:6",
															"nodeType": "YulAssignment",
															"src": "7848:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7863:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7863:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7857:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "7857:5:6"
																},
																"nativeSrc": "7857:13:6",
																"nodeType": "YulFunctionCall",
																"src": "7857:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7848:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "7848:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7906:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7906:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "7879:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "7879:26:6"
																},
																"nativeSrc": "7879:33:6",
																"nodeType": "YulFunctionCall",
																"src": "7879:33:6"
															},
															"nativeSrc": "7879:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "7879:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "7775:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7816:6:6",
														"nodeType": "YulTypedName",
														"src": "7816:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7824:3:6",
														"nodeType": "YulTypedName",
														"src": "7824:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7832:5:6",
														"nodeType": "YulTypedName",
														"src": "7832:5:6",
														"type": ""
													}
												],
												"src": "7775:143:6"
											},
											{
												"body": {
													"nativeSrc": "8001:274:6",
													"nodeType": "YulBlock",
													"src": "8001:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "8047:83:6",
																"nodeType": "YulBlock",
																"src": "8047:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8049:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "8049:77:6"
																			},
																			"nativeSrc": "8049:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8049:79:6"
																		},
																		"nativeSrc": "8049:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8049:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8022:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8022:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8031:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8031:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8018:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8018:3:6"
																		},
																		"nativeSrc": "8018:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8018:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8043:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8043:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8014:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8014:3:6"
																},
																"nativeSrc": "8014:32:6",
																"nodeType": "YulFunctionCall",
																"src": "8014:32:6"
															},
															"nativeSrc": "8011:119:6",
															"nodeType": "YulIf",
															"src": "8011:119:6"
														},
														{
															"nativeSrc": "8140:128:6",
															"nodeType": "YulBlock",
															"src": "8140:128:6",
															"statements": [
																{
																	"nativeSrc": "8155:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8155:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8169:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8169:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8159:6:6",
																			"nodeType": "YulTypedName",
																			"src": "8159:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8184:74:6",
																	"nodeType": "YulAssignment",
																	"src": "8184:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8230:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "8230:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8241:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8241:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8226:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8226:3:6"
																				},
																				"nativeSrc": "8226:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8226:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8250:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8250:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "8194:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "8194:31:6"
																		},
																		"nativeSrc": "8194:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8194:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8184:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "8184:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "7924:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7971:9:6",
														"nodeType": "YulTypedName",
														"src": "7971:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7982:7:6",
														"nodeType": "YulTypedName",
														"src": "7982:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7994:6:6",
														"nodeType": "YulTypedName",
														"src": "7994:6:6",
														"type": ""
													}
												],
												"src": "7924:351:6"
											},
											{
												"body": {
													"nativeSrc": "8407:206:6",
													"nodeType": "YulBlock",
													"src": "8407:206:6",
													"statements": [
														{
															"nativeSrc": "8417:26:6",
															"nodeType": "YulAssignment",
															"src": "8417:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8429:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8429:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8440:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8440:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8425:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8425:3:6"
																},
																"nativeSrc": "8425:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8425:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8417:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8417:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8497:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8497:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8510:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8510:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8521:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8521:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8506:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8506:3:6"
																		},
																		"nativeSrc": "8506:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8506:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8453:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "8453:43:6"
																},
																"nativeSrc": "8453:71:6",
																"nodeType": "YulFunctionCall",
																"src": "8453:71:6"
															},
															"nativeSrc": "8453:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "8453:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8578:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8578:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8591:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8591:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8602:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8602:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8587:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8587:3:6"
																		},
																		"nativeSrc": "8587:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8587:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8534:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "8534:43:6"
																},
																"nativeSrc": "8534:72:6",
																"nodeType": "YulFunctionCall",
																"src": "8534:72:6"
															},
															"nativeSrc": "8534:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "8534:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8281:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8371:9:6",
														"nodeType": "YulTypedName",
														"src": "8371:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8383:6:6",
														"nodeType": "YulTypedName",
														"src": "8383:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8391:6:6",
														"nodeType": "YulTypedName",
														"src": "8391:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8402:4:6",
														"nodeType": "YulTypedName",
														"src": "8402:4:6",
														"type": ""
													}
												],
												"src": "8281:332:6"
											},
											{
												"body": {
													"nativeSrc": "8659:76:6",
													"nodeType": "YulBlock",
													"src": "8659:76:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "8713:16:6",
																"nodeType": "YulBlock",
																"src": "8713:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8722:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8722:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8725:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8725:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8715:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8715:6:6"
																			},
																			"nativeSrc": "8715:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8715:12:6"
																		},
																		"nativeSrc": "8715:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8715:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8682:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8682:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8704:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "8704:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "8689:14:6",
																					"nodeType": "YulIdentifier",
																					"src": "8689:14:6"
																				},
																				"nativeSrc": "8689:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8689:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8679:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "8679:2:6"
																		},
																		"nativeSrc": "8679:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8679:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8672:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8672:6:6"
																},
																"nativeSrc": "8672:40:6",
																"nodeType": "YulFunctionCall",
																"src": "8672:40:6"
															},
															"nativeSrc": "8669:60:6",
															"nodeType": "YulIf",
															"src": "8669:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "8619:116:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8652:5:6",
														"nodeType": "YulTypedName",
														"src": "8652:5:6",
														"type": ""
													}
												],
												"src": "8619:116:6"
											},
											{
												"body": {
													"nativeSrc": "8801:77:6",
													"nodeType": "YulBlock",
													"src": "8801:77:6",
													"statements": [
														{
															"nativeSrc": "8811:22:6",
															"nodeType": "YulAssignment",
															"src": "8811:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8826:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8826:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8820:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8820:5:6"
																},
																"nativeSrc": "8820:13:6",
																"nodeType": "YulFunctionCall",
																"src": "8820:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8811:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8811:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8866:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8866:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "8842:23:6",
																	"nodeType": "YulIdentifier",
																	"src": "8842:23:6"
																},
																"nativeSrc": "8842:30:6",
																"nodeType": "YulFunctionCall",
																"src": "8842:30:6"
															},
															"nativeSrc": "8842:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "8842:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "8741:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8779:6:6",
														"nodeType": "YulTypedName",
														"src": "8779:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8787:3:6",
														"nodeType": "YulTypedName",
														"src": "8787:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8795:5:6",
														"nodeType": "YulTypedName",
														"src": "8795:5:6",
														"type": ""
													}
												],
												"src": "8741:137:6"
											},
											{
												"body": {
													"nativeSrc": "8958:271:6",
													"nodeType": "YulBlock",
													"src": "8958:271:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "9004:83:6",
																"nodeType": "YulBlock",
																"src": "9004:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9006:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "9006:77:6"
																			},
																			"nativeSrc": "9006:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9006:79:6"
																		},
																		"nativeSrc": "9006:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9006:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8979:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8979:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8988:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8988:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8975:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8975:3:6"
																		},
																		"nativeSrc": "8975:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8975:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9000:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9000:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8971:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8971:3:6"
																},
																"nativeSrc": "8971:32:6",
																"nodeType": "YulFunctionCall",
																"src": "8971:32:6"
															},
															"nativeSrc": "8968:119:6",
															"nodeType": "YulIf",
															"src": "8968:119:6"
														},
														{
															"nativeSrc": "9097:125:6",
															"nodeType": "YulBlock",
															"src": "9097:125:6",
															"statements": [
																{
																	"nativeSrc": "9112:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9112:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9126:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9126:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9116:6:6",
																			"nodeType": "YulTypedName",
																			"src": "9116:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9141:71:6",
																	"nodeType": "YulAssignment",
																	"src": "9141:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9184:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "9184:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9195:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "9195:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9180:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "9180:3:6"
																				},
																				"nativeSrc": "9180:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9180:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9204:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "9204:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "9151:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "9151:28:6"
																		},
																		"nativeSrc": "9151:61:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9151:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9141:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "9141:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "8884:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8928:9:6",
														"nodeType": "YulTypedName",
														"src": "8928:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8939:7:6",
														"nodeType": "YulTypedName",
														"src": "8939:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8951:6:6",
														"nodeType": "YulTypedName",
														"src": "8951:6:6",
														"type": ""
													}
												],
												"src": "8884:345:6"
											},
											{
												"body": {
													"nativeSrc": "9341:70:6",
													"nodeType": "YulBlock",
													"src": "9341:70:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9363:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9363:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9371:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9371:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9359:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9359:3:6"
																		},
																		"nativeSrc": "9359:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9359:14:6"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e73206c656674206f6e20636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "9375:28:6",
																		"nodeType": "YulLiteral",
																		"src": "9375:28:6",
																		"type": "",
																		"value": "No tokens left on contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9352:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9352:6:6"
																},
																"nativeSrc": "9352:52:6",
																"nodeType": "YulFunctionCall",
																"src": "9352:52:6"
															},
															"nativeSrc": "9352:52:6",
															"nodeType": "YulExpressionStatement",
															"src": "9352:52:6"
														}
													]
												},
												"name": "store_literal_in_memory_20cd1c00915cfbebfff7ab649d9df8429f6fbe08a7c9fcea251b3bd3d3aa8ca4",
												"nativeSrc": "9235:176:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9333:6:6",
														"nodeType": "YulTypedName",
														"src": "9333:6:6",
														"type": ""
													}
												],
												"src": "9235:176:6"
											},
											{
												"body": {
													"nativeSrc": "9563:220:6",
													"nodeType": "YulBlock",
													"src": "9563:220:6",
													"statements": [
														{
															"nativeSrc": "9573:74:6",
															"nodeType": "YulAssignment",
															"src": "9573:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9639:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9639:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9644:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9644:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9580:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "9580:58:6"
																},
																"nativeSrc": "9580:67:6",
																"nodeType": "YulFunctionCall",
																"src": "9580:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9573:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9573:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9745:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9745:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_20cd1c00915cfbebfff7ab649d9df8429f6fbe08a7c9fcea251b3bd3d3aa8ca4",
																	"nativeSrc": "9656:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "9656:88:6"
																},
																"nativeSrc": "9656:93:6",
																"nodeType": "YulFunctionCall",
																"src": "9656:93:6"
															},
															"nativeSrc": "9656:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "9656:93:6"
														},
														{
															"nativeSrc": "9758:19:6",
															"nodeType": "YulAssignment",
															"src": "9758:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9769:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9769:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9774:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9774:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9765:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9765:3:6"
																},
																"nativeSrc": "9765:12:6",
																"nodeType": "YulFunctionCall",
																"src": "9765:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9758:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9758:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_20cd1c00915cfbebfff7ab649d9df8429f6fbe08a7c9fcea251b3bd3d3aa8ca4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9417:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9551:3:6",
														"nodeType": "YulTypedName",
														"src": "9551:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9559:3:6",
														"nodeType": "YulTypedName",
														"src": "9559:3:6",
														"type": ""
													}
												],
												"src": "9417:366:6"
											},
											{
												"body": {
													"nativeSrc": "9960:248:6",
													"nodeType": "YulBlock",
													"src": "9960:248:6",
													"statements": [
														{
															"nativeSrc": "9970:26:6",
															"nodeType": "YulAssignment",
															"src": "9970:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9982:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9982:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9993:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9993:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9978:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9978:3:6"
																},
																"nativeSrc": "9978:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9978:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9970:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9970:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10017:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10017:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10028:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10028:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10013:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10013:3:6"
																		},
																		"nativeSrc": "10013:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10013:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10036:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "10036:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10042:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10042:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10032:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10032:3:6"
																		},
																		"nativeSrc": "10032:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10032:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10006:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10006:6:6"
																},
																"nativeSrc": "10006:47:6",
																"nodeType": "YulFunctionCall",
																"src": "10006:47:6"
															},
															"nativeSrc": "10006:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "10006:47:6"
														},
														{
															"nativeSrc": "10062:139:6",
															"nodeType": "YulAssignment",
															"src": "10062:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10196:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10196:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_20cd1c00915cfbebfff7ab649d9df8429f6fbe08a7c9fcea251b3bd3d3aa8ca4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10070:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "10070:124:6"
																},
																"nativeSrc": "10070:131:6",
																"nodeType": "YulFunctionCall",
																"src": "10070:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10062:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10062:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_20cd1c00915cfbebfff7ab649d9df8429f6fbe08a7c9fcea251b3bd3d3aa8ca4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9789:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9940:9:6",
														"nodeType": "YulTypedName",
														"src": "9940:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9955:4:6",
														"nodeType": "YulTypedName",
														"src": "9955:4:6",
														"type": ""
													}
												],
												"src": "9789:419:6"
											},
											{
												"body": {
													"nativeSrc": "10320:121:6",
													"nodeType": "YulBlock",
													"src": "10320:121:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10342:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10342:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10350:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10350:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10338:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10338:3:6"
																		},
																		"nativeSrc": "10338:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10338:14:6"
																	},
																	{
																		"hexValue": "596f7520616c726561647920726563656976656420746f6b656e2066726f6d20",
																		"kind": "string",
																		"nativeSrc": "10354:34:6",
																		"nodeType": "YulLiteral",
																		"src": "10354:34:6",
																		"type": "",
																		"value": "You already received token from "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10331:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10331:6:6"
																},
																"nativeSrc": "10331:58:6",
																"nodeType": "YulFunctionCall",
																"src": "10331:58:6"
															},
															"nativeSrc": "10331:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "10331:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10410:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10410:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10418:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10418:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10406:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10406:3:6"
																		},
																		"nativeSrc": "10406:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10406:15:6"
																	},
																	{
																		"hexValue": "636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "10423:10:6",
																		"nodeType": "YulLiteral",
																		"src": "10423:10:6",
																		"type": "",
																		"value": "contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10399:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10399:6:6"
																},
																"nativeSrc": "10399:35:6",
																"nodeType": "YulFunctionCall",
																"src": "10399:35:6"
															},
															"nativeSrc": "10399:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "10399:35:6"
														}
													]
												},
												"name": "store_literal_in_memory_84e8f47ae30a2e0d8c8b6ae2718af42560d516cd69dbfb10c1fd0e2722075210",
												"nativeSrc": "10214:227:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10312:6:6",
														"nodeType": "YulTypedName",
														"src": "10312:6:6",
														"type": ""
													}
												],
												"src": "10214:227:6"
											},
											{
												"body": {
													"nativeSrc": "10593:220:6",
													"nodeType": "YulBlock",
													"src": "10593:220:6",
													"statements": [
														{
															"nativeSrc": "10603:74:6",
															"nodeType": "YulAssignment",
															"src": "10603:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10669:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10669:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10674:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10674:2:6",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10610:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "10610:58:6"
																},
																"nativeSrc": "10610:67:6",
																"nodeType": "YulFunctionCall",
																"src": "10610:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10603:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10603:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10775:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10775:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_84e8f47ae30a2e0d8c8b6ae2718af42560d516cd69dbfb10c1fd0e2722075210",
																	"nativeSrc": "10686:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "10686:88:6"
																},
																"nativeSrc": "10686:93:6",
																"nodeType": "YulFunctionCall",
																"src": "10686:93:6"
															},
															"nativeSrc": "10686:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "10686:93:6"
														},
														{
															"nativeSrc": "10788:19:6",
															"nodeType": "YulAssignment",
															"src": "10788:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10799:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10799:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10804:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10804:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10795:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10795:3:6"
																},
																"nativeSrc": "10795:12:6",
																"nodeType": "YulFunctionCall",
																"src": "10795:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10788:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10788:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_84e8f47ae30a2e0d8c8b6ae2718af42560d516cd69dbfb10c1fd0e2722075210_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10447:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10581:3:6",
														"nodeType": "YulTypedName",
														"src": "10581:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10589:3:6",
														"nodeType": "YulTypedName",
														"src": "10589:3:6",
														"type": ""
													}
												],
												"src": "10447:366:6"
											},
											{
												"body": {
													"nativeSrc": "10990:248:6",
													"nodeType": "YulBlock",
													"src": "10990:248:6",
													"statements": [
														{
															"nativeSrc": "11000:26:6",
															"nodeType": "YulAssignment",
															"src": "11000:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11012:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11012:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11023:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11023:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11008:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11008:3:6"
																},
																"nativeSrc": "11008:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11008:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11000:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11000:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11047:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11047:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11058:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11058:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11043:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11043:3:6"
																		},
																		"nativeSrc": "11043:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11043:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11066:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "11066:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11072:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11072:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11062:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11062:3:6"
																		},
																		"nativeSrc": "11062:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11062:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11036:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11036:6:6"
																},
																"nativeSrc": "11036:47:6",
																"nodeType": "YulFunctionCall",
																"src": "11036:47:6"
															},
															"nativeSrc": "11036:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "11036:47:6"
														},
														{
															"nativeSrc": "11092:139:6",
															"nodeType": "YulAssignment",
															"src": "11092:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11226:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11226:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_84e8f47ae30a2e0d8c8b6ae2718af42560d516cd69dbfb10c1fd0e2722075210_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11100:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "11100:124:6"
																},
																"nativeSrc": "11100:131:6",
																"nodeType": "YulFunctionCall",
																"src": "11100:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11092:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11092:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_84e8f47ae30a2e0d8c8b6ae2718af42560d516cd69dbfb10c1fd0e2722075210__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10819:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10970:9:6",
														"nodeType": "YulTypedName",
														"src": "10970:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10985:4:6",
														"nodeType": "YulTypedName",
														"src": "10985:4:6",
														"type": ""
													}
												],
												"src": "10819:419:6"
											},
											{
												"body": {
													"nativeSrc": "11298:32:6",
													"nodeType": "YulBlock",
													"src": "11298:32:6",
													"statements": [
														{
															"nativeSrc": "11308:16:6",
															"nodeType": "YulAssignment",
															"src": "11308:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "11319:5:6",
																"nodeType": "YulIdentifier",
																"src": "11319:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "11308:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "11308:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_10_by_1",
												"nativeSrc": "11244:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11280:5:6",
														"nodeType": "YulTypedName",
														"src": "11280:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "11290:7:6",
														"nodeType": "YulTypedName",
														"src": "11290:7:6",
														"type": ""
													}
												],
												"src": "11244:86:6"
											},
											{
												"body": {
													"nativeSrc": "11405:91:6",
													"nodeType": "YulBlock",
													"src": "11405:91:6",
													"statements": [
														{
															"nativeSrc": "11415:75:6",
															"nodeType": "YulAssignment",
															"src": "11415:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11482:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "11482:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_10_by_1",
																					"nativeSrc": "11455:26:6",
																					"nodeType": "YulIdentifier",
																					"src": "11455:26:6"
																				},
																				"nativeSrc": "11455:33:6",
																				"nodeType": "YulFunctionCall",
																				"src": "11455:33:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "11446:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "11446:8:6"
																		},
																		"nativeSrc": "11446:43:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11446:43:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11428:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "11428:17:6"
																},
																"nativeSrc": "11428:62:6",
																"nodeType": "YulFunctionCall",
																"src": "11428:62:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "11415:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "11415:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_10_by_1_to_t_uint256",
												"nativeSrc": "11336:160:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11385:5:6",
														"nodeType": "YulTypedName",
														"src": "11385:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "11395:9:6",
														"nodeType": "YulTypedName",
														"src": "11395:9:6",
														"type": ""
													}
												],
												"src": "11336:160:6"
											},
											{
												"body": {
													"nativeSrc": "11576:75:6",
													"nodeType": "YulBlock",
													"src": "11576:75:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11593:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11593:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11638:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "11638:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_10_by_1_to_t_uint256",
																			"nativeSrc": "11598:39:6",
																			"nodeType": "YulIdentifier",
																			"src": "11598:39:6"
																		},
																		"nativeSrc": "11598:46:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11598:46:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11586:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11586:6:6"
																},
																"nativeSrc": "11586:59:6",
																"nodeType": "YulFunctionCall",
																"src": "11586:59:6"
															},
															"nativeSrc": "11586:59:6",
															"nodeType": "YulExpressionStatement",
															"src": "11586:59:6"
														}
													]
												},
												"name": "abi_encode_t_rational_10_by_1_to_t_uint256_fromStack",
												"nativeSrc": "11502:149:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11564:5:6",
														"nodeType": "YulTypedName",
														"src": "11564:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11571:3:6",
														"nodeType": "YulTypedName",
														"src": "11571:3:6",
														"type": ""
													}
												],
												"src": "11502:149:6"
											},
											{
												"body": {
													"nativeSrc": "11792:215:6",
													"nodeType": "YulBlock",
													"src": "11792:215:6",
													"statements": [
														{
															"nativeSrc": "11802:26:6",
															"nodeType": "YulAssignment",
															"src": "11802:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11814:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11814:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11825:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11825:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11810:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11810:3:6"
																},
																"nativeSrc": "11810:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11810:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11802:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11802:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11882:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11882:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11895:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11895:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11906:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11906:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11891:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11891:3:6"
																		},
																		"nativeSrc": "11891:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11891:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11838:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "11838:43:6"
																},
																"nativeSrc": "11838:71:6",
																"nodeType": "YulFunctionCall",
																"src": "11838:71:6"
															},
															"nativeSrc": "11838:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "11838:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11972:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11972:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11985:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11985:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11996:2:6",
																				"nodeType": "YulLiteral",
																				"src": "11996:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11981:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11981:3:6"
																		},
																		"nativeSrc": "11981:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11981:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_10_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "11919:52:6",
																	"nodeType": "YulIdentifier",
																	"src": "11919:52:6"
																},
																"nativeSrc": "11919:81:6",
																"nodeType": "YulFunctionCall",
																"src": "11919:81:6"
															},
															"nativeSrc": "11919:81:6",
															"nodeType": "YulExpressionStatement",
															"src": "11919:81:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_10_by_1__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11657:350:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11756:9:6",
														"nodeType": "YulTypedName",
														"src": "11756:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11768:6:6",
														"nodeType": "YulTypedName",
														"src": "11768:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11776:6:6",
														"nodeType": "YulTypedName",
														"src": "11776:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11787:4:6",
														"nodeType": "YulTypedName",
														"src": "11787:4:6",
														"type": ""
													}
												],
												"src": "11657:350:6"
											},
											{
												"body": {
													"nativeSrc": "12119:121:6",
													"nodeType": "YulBlock",
													"src": "12119:121:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12141:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "12141:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12149:1:6",
																				"nodeType": "YulLiteral",
																				"src": "12149:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12137:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12137:3:6"
																		},
																		"nativeSrc": "12137:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12137:14:6"
																	},
																	{
																		"hexValue": "46756e6374696f6e2063616e206f6e6c792062652063616c6c656420696e2074",
																		"kind": "string",
																		"nativeSrc": "12153:34:6",
																		"nodeType": "YulLiteral",
																		"src": "12153:34:6",
																		"type": "",
																		"value": "Function can only be called in t"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12130:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12130:6:6"
																},
																"nativeSrc": "12130:58:6",
																"nodeType": "YulFunctionCall",
																"src": "12130:58:6"
															},
															"nativeSrc": "12130:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "12130:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12209:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "12209:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12217:2:6",
																				"nodeType": "YulLiteral",
																				"src": "12217:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12205:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12205:3:6"
																		},
																		"nativeSrc": "12205:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12205:15:6"
																	},
																	{
																		"hexValue": "657374206d6f6465",
																		"kind": "string",
																		"nativeSrc": "12222:10:6",
																		"nodeType": "YulLiteral",
																		"src": "12222:10:6",
																		"type": "",
																		"value": "est mode"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12198:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12198:6:6"
																},
																"nativeSrc": "12198:35:6",
																"nodeType": "YulFunctionCall",
																"src": "12198:35:6"
															},
															"nativeSrc": "12198:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "12198:35:6"
														}
													]
												},
												"name": "store_literal_in_memory_95268b7f192eb9978c9fad458ac4d471c718e0b38074aeae3e2acdf0ca49f7d1",
												"nativeSrc": "12013:227:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12111:6:6",
														"nodeType": "YulTypedName",
														"src": "12111:6:6",
														"type": ""
													}
												],
												"src": "12013:227:6"
											},
											{
												"body": {
													"nativeSrc": "12392:220:6",
													"nodeType": "YulBlock",
													"src": "12392:220:6",
													"statements": [
														{
															"nativeSrc": "12402:74:6",
															"nodeType": "YulAssignment",
															"src": "12402:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12468:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12468:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12473:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12473:2:6",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12409:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "12409:58:6"
																},
																"nativeSrc": "12409:67:6",
																"nodeType": "YulFunctionCall",
																"src": "12409:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12402:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12402:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12574:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12574:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_95268b7f192eb9978c9fad458ac4d471c718e0b38074aeae3e2acdf0ca49f7d1",
																	"nativeSrc": "12485:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "12485:88:6"
																},
																"nativeSrc": "12485:93:6",
																"nodeType": "YulFunctionCall",
																"src": "12485:93:6"
															},
															"nativeSrc": "12485:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "12485:93:6"
														},
														{
															"nativeSrc": "12587:19:6",
															"nodeType": "YulAssignment",
															"src": "12587:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12598:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12598:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12603:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12603:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12594:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12594:3:6"
																},
																"nativeSrc": "12594:12:6",
																"nodeType": "YulFunctionCall",
																"src": "12594:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12587:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12587:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_95268b7f192eb9978c9fad458ac4d471c718e0b38074aeae3e2acdf0ca49f7d1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12246:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12380:3:6",
														"nodeType": "YulTypedName",
														"src": "12380:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12388:3:6",
														"nodeType": "YulTypedName",
														"src": "12388:3:6",
														"type": ""
													}
												],
												"src": "12246:366:6"
											},
											{
												"body": {
													"nativeSrc": "12789:248:6",
													"nodeType": "YulBlock",
													"src": "12789:248:6",
													"statements": [
														{
															"nativeSrc": "12799:26:6",
															"nodeType": "YulAssignment",
															"src": "12799:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12811:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "12811:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12822:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12822:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12807:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12807:3:6"
																},
																"nativeSrc": "12807:18:6",
																"nodeType": "YulFunctionCall",
																"src": "12807:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12799:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12799:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12846:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12846:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12857:1:6",
																				"nodeType": "YulLiteral",
																				"src": "12857:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12842:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12842:3:6"
																		},
																		"nativeSrc": "12842:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12842:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12865:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "12865:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12871:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12871:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12861:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12861:3:6"
																		},
																		"nativeSrc": "12861:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12861:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12835:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12835:6:6"
																},
																"nativeSrc": "12835:47:6",
																"nodeType": "YulFunctionCall",
																"src": "12835:47:6"
															},
															"nativeSrc": "12835:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "12835:47:6"
														},
														{
															"nativeSrc": "12891:139:6",
															"nodeType": "YulAssignment",
															"src": "12891:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13025:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "13025:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_95268b7f192eb9978c9fad458ac4d471c718e0b38074aeae3e2acdf0ca49f7d1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12899:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "12899:124:6"
																},
																"nativeSrc": "12899:131:6",
																"nodeType": "YulFunctionCall",
																"src": "12899:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12891:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12891:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_95268b7f192eb9978c9fad458ac4d471c718e0b38074aeae3e2acdf0ca49f7d1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12618:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12769:9:6",
														"nodeType": "YulTypedName",
														"src": "12769:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12784:4:6",
														"nodeType": "YulTypedName",
														"src": "12784:4:6",
														"type": ""
													}
												],
												"src": "12618:419:6"
											},
											{
												"body": {
													"nativeSrc": "13197:288:6",
													"nodeType": "YulBlock",
													"src": "13197:288:6",
													"statements": [
														{
															"nativeSrc": "13207:26:6",
															"nodeType": "YulAssignment",
															"src": "13207:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13219:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13219:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13230:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13230:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13215:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13215:3:6"
																},
																"nativeSrc": "13215:18:6",
																"nodeType": "YulFunctionCall",
																"src": "13215:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13207:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13207:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13287:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13287:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13300:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13300:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13311:1:6",
																				"nodeType": "YulLiteral",
																				"src": "13311:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13296:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13296:3:6"
																		},
																		"nativeSrc": "13296:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13296:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13243:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13243:43:6"
																},
																"nativeSrc": "13243:71:6",
																"nodeType": "YulFunctionCall",
																"src": "13243:71:6"
															},
															"nativeSrc": "13243:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "13243:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13368:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13368:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13381:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13381:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13392:2:6",
																				"nodeType": "YulLiteral",
																				"src": "13392:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13377:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13377:3:6"
																		},
																		"nativeSrc": "13377:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13377:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13324:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13324:43:6"
																},
																"nativeSrc": "13324:72:6",
																"nodeType": "YulFunctionCall",
																"src": "13324:72:6"
															},
															"nativeSrc": "13324:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "13324:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13450:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13450:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13463:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13463:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13474:2:6",
																				"nodeType": "YulLiteral",
																				"src": "13474:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13459:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13459:3:6"
																		},
																		"nativeSrc": "13459:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13459:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13406:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13406:43:6"
																},
																"nativeSrc": "13406:72:6",
																"nodeType": "YulFunctionCall",
																"src": "13406:72:6"
															},
															"nativeSrc": "13406:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "13406:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13043:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13153:9:6",
														"nodeType": "YulTypedName",
														"src": "13153:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13165:6:6",
														"nodeType": "YulTypedName",
														"src": "13165:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13173:6:6",
														"nodeType": "YulTypedName",
														"src": "13173:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13181:6:6",
														"nodeType": "YulTypedName",
														"src": "13181:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13192:4:6",
														"nodeType": "YulTypedName",
														"src": "13192:4:6",
														"type": ""
													}
												],
												"src": "13043:442:6"
											},
											{
												"body": {
													"nativeSrc": "13519:152:6",
													"nodeType": "YulBlock",
													"src": "13519:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13536:1:6",
																		"nodeType": "YulLiteral",
																		"src": "13536:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13539:77:6",
																		"nodeType": "YulLiteral",
																		"src": "13539:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13529:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13529:6:6"
																},
																"nativeSrc": "13529:88:6",
																"nodeType": "YulFunctionCall",
																"src": "13529:88:6"
															},
															"nativeSrc": "13529:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "13529:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13633:1:6",
																		"nodeType": "YulLiteral",
																		"src": "13633:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13636:4:6",
																		"nodeType": "YulLiteral",
																		"src": "13636:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13626:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13626:6:6"
																},
																"nativeSrc": "13626:15:6",
																"nodeType": "YulFunctionCall",
																"src": "13626:15:6"
															},
															"nativeSrc": "13626:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "13626:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13657:1:6",
																		"nodeType": "YulLiteral",
																		"src": "13657:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13660:4:6",
																		"nodeType": "YulLiteral",
																		"src": "13660:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13650:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13650:6:6"
																},
																"nativeSrc": "13650:15:6",
																"nodeType": "YulFunctionCall",
																"src": "13650:15:6"
															},
															"nativeSrc": "13650:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "13650:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13491:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "13491:180:6"
											},
											{
												"body": {
													"nativeSrc": "13721:147:6",
													"nodeType": "YulBlock",
													"src": "13721:147:6",
													"statements": [
														{
															"nativeSrc": "13731:25:6",
															"nodeType": "YulAssignment",
															"src": "13731:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13754:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13754:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13736:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "13736:17:6"
																},
																"nativeSrc": "13736:20:6",
																"nodeType": "YulFunctionCall",
																"src": "13736:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13731:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "13731:1:6"
																}
															]
														},
														{
															"nativeSrc": "13765:25:6",
															"nodeType": "YulAssignment",
															"src": "13765:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13788:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13788:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13770:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "13770:17:6"
																},
																"nativeSrc": "13770:20:6",
																"nodeType": "YulFunctionCall",
																"src": "13770:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13765:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "13765:1:6"
																}
															]
														},
														{
															"nativeSrc": "13799:16:6",
															"nodeType": "YulAssignment",
															"src": "13799:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13810:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13810:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13813:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13813:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13806:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13806:3:6"
																},
																"nativeSrc": "13806:9:6",
																"nodeType": "YulFunctionCall",
																"src": "13806:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13799:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13799:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13839:22:6",
																"nodeType": "YulBlock",
																"src": "13839:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13841:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "13841:16:6"
																			},
																			"nativeSrc": "13841:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "13841:18:6"
																		},
																		"nativeSrc": "13841:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "13841:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13831:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "13831:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13834:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "13834:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13828:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "13828:2:6"
																},
																"nativeSrc": "13828:10:6",
																"nodeType": "YulFunctionCall",
																"src": "13828:10:6"
															},
															"nativeSrc": "13825:36:6",
															"nodeType": "YulIf",
															"src": "13825:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13677:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13708:1:6",
														"nodeType": "YulTypedName",
														"src": "13708:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13711:1:6",
														"nodeType": "YulTypedName",
														"src": "13711:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13717:3:6",
														"nodeType": "YulTypedName",
														"src": "13717:3:6",
														"type": ""
													}
												],
												"src": "13677:191:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC20_$651_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$651_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$651__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$651_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_20cd1c00915cfbebfff7ab649d9df8429f6fbe08a7c9fcea251b3bd3d3aa8ca4(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tokens left on contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_20cd1c00915cfbebfff7ab649d9df8429f6fbe08a7c9fcea251b3bd3d3aa8ca4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_20cd1c00915cfbebfff7ab649d9df8429f6fbe08a7c9fcea251b3bd3d3aa8ca4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_20cd1c00915cfbebfff7ab649d9df8429f6fbe08a7c9fcea251b3bd3d3aa8ca4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_20cd1c00915cfbebfff7ab649d9df8429f6fbe08a7c9fcea251b3bd3d3aa8ca4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_84e8f47ae30a2e0d8c8b6ae2718af42560d516cd69dbfb10c1fd0e2722075210(memPtr) {\n\n        mstore(add(memPtr, 0), \"You already received token from \")\n\n        mstore(add(memPtr, 32), \"contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_84e8f47ae30a2e0d8c8b6ae2718af42560d516cd69dbfb10c1fd0e2722075210_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_84e8f47ae30a2e0d8c8b6ae2718af42560d516cd69dbfb10c1fd0e2722075210(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_84e8f47ae30a2e0d8c8b6ae2718af42560d516cd69dbfb10c1fd0e2722075210__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_84e8f47ae30a2e0d8c8b6ae2718af42560d516cd69dbfb10c1fd0e2722075210_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_10_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_10_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_10_by_1(value)))\n    }\n\n    function abi_encode_t_rational_10_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_10_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_rational_10_by_1__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_10_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_95268b7f192eb9978c9fad458ac4d471c718e0b38074aeae3e2acdf0ca49f7d1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Function can only be called in t\")\n\n        mstore(add(memPtr, 32), \"est mode\")\n\n    }\n\n    function abi_encode_t_stringliteral_95268b7f192eb9978c9fad458ac4d471c718e0b38074aeae3e2acdf0ca49f7d1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_95268b7f192eb9978c9fad458ac4d471c718e0b38074aeae3e2acdf0ca49f7d1(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_95268b7f192eb9978c9fad458ac4d471c718e0b38074aeae3e2acdf0ca49f7d1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_95268b7f192eb9978c9fad458ac4d471c718e0b38074aeae3e2acdf0ca49f7d1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100fe575f3560e01c806395d89b4111610095578063d915902e11610064578063d915902e146102d4578063dd62ed3e146102f0578063de5f72fd14610320578063e66649281461032a576100fe565b806395d89b4114610226578063a9059cbb14610244578063b3afcee414610274578063c7f48df7146102a4576100fe565b8063313ce567116100d1578063313ce5671461019e57806334dcb04e146101bc57806339c94d2d146101da57806370a08231146101f6576100fe565b806306fdde0314610102578063095ea7b31461012057806318160ddd1461015057806323b872dd1461016e575b5f80fd5b61010a610334565b6040516101179190610f31565b60405180910390f35b61013a60048036038101906101359190610fe2565b6103c4565b604051610147919061103a565b60405180910390f35b6101586103e6565b6040516101659190611062565b60405180910390f35b6101886004803603810190610183919061107b565b6103ef565b604051610195919061103a565b60405180910390f35b6101a661041d565b6040516101b391906110e6565b60405180910390f35b6101c4610425565b6040516101d1919061115a565b60405180910390f35b6101f460048036038101906101ef9190611173565b61044a565b005b610210600480360381019061020b919061119e565b610458565b60405161021d9190611062565b60405180910390f35b61022e61049d565b60405161023b9190610f31565b60405180910390f35b61025e60048036038101906102599190610fe2565b61052d565b60405161026b919061103a565b60405180910390f35b61028e6004803603810190610289919061119e565b61054f565b60405161029b919061103a565b60405180910390f35b6102be60048036038101906102b9919061119e565b610562565b6040516102cb9190611062565b60405180910390f35b6102ee60048036038101906102e99190611173565b610603565b005b61030a600480360381019061030591906111c9565b6106a3565b6040516103179190611062565b60405180910390f35b610328610725565b005b6103326108cd565b005b60606003805461034390611234565b80601f016020809104026020016040519081016040528092919081815260200182805461036f90611234565b80156103ba5780601f10610391576101008083540402835291602001916103ba565b820191905f5260205f20905b81548152906001019060200180831161039d57829003601f168201915b5050505050905090565b5f806103ce610924565b90506103db81858561092b565b600191505092915050565b5f600254905090565b5f806103f9610924565b905061040685828561093d565b6104118585856109cf565b60019150509392505050565b5f6012905090565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610454308261052d565b5050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6060600480546104ac90611234565b80601f01602080910402602001604051908101604052809291908181526020018280546104d890611234565b80156105235780601f106104fa57610100808354040283529160200191610523565b820191905f5260205f20905b81548152906001019060200180831161050657829003601f168201915b5050505050905090565b5f80610537610924565b90506105448185856109cf565b600191505092915050565b5f8061055a83610458565b119050919050565b5f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b81526004016105bd9190611273565b602060405180830381865afa1580156105d8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105fc91906112a0565b9050919050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb30836040518363ffffffff1660e01b815260040161065f9291906112cb565b6020604051808303815f875af115801561067b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061069f919061131c565b5050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f61072f30610458565b1161076f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076690611391565b60405180910390fd5b60075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16156107f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f09061141f565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600a6040518363ffffffff1660e01b8152600401610835929190611476565b6020604051808303815f875af1158015610851573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610875919061131c565b50600160075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550565b60085f9054906101000a900460ff1661091b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109129061150d565b60405180910390fd5b5f600581905550565b5f33905090565b6109388383836001610abf565b505050565b5f61094884846106a3565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109c957818110156109ba578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016109b19392919061152b565b60405180910390fd5b6109c884848484035f610abf565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a3f575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a369190611273565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610aaf575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610aa69190611273565b60405180910390fd5b610aba838383610c8e565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b2f575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610b269190611273565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b9f575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610b969190611273565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610c88578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610c7f9190611062565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610cde578060025f828254610cd2919061158d565b92505081905550610dac565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610d67578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610d5e9392919061152b565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610df3578060025f8282540392505081905550610e3d565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e9a9190611062565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610ede578082015181840152602081019050610ec3565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610f0382610ea7565b610f0d8185610eb1565b9350610f1d818560208601610ec1565b610f2681610ee9565b840191505092915050565b5f6020820190508181035f830152610f498184610ef9565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610f7e82610f55565b9050919050565b610f8e81610f74565b8114610f98575f80fd5b50565b5f81359050610fa981610f85565b92915050565b5f819050919050565b610fc181610faf565b8114610fcb575f80fd5b50565b5f81359050610fdc81610fb8565b92915050565b5f8060408385031215610ff857610ff7610f51565b5b5f61100585828601610f9b565b925050602061101685828601610fce565b9150509250929050565b5f8115159050919050565b61103481611020565b82525050565b5f60208201905061104d5f83018461102b565b92915050565b61105c81610faf565b82525050565b5f6020820190506110755f830184611053565b92915050565b5f805f6060848603121561109257611091610f51565b5b5f61109f86828701610f9b565b93505060206110b086828701610f9b565b92505060406110c186828701610fce565b9150509250925092565b5f60ff82169050919050565b6110e0816110cb565b82525050565b5f6020820190506110f95f8301846110d7565b92915050565b5f819050919050565b5f61112261111d61111884610f55565b6110ff565b610f55565b9050919050565b5f61113382611108565b9050919050565b5f61114482611129565b9050919050565b6111548161113a565b82525050565b5f60208201905061116d5f83018461114b565b92915050565b5f6020828403121561118857611187610f51565b5b5f61119584828501610fce565b91505092915050565b5f602082840312156111b3576111b2610f51565b5b5f6111c084828501610f9b565b91505092915050565b5f80604083850312156111df576111de610f51565b5b5f6111ec85828601610f9b565b92505060206111fd85828601610f9b565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061124b57607f821691505b60208210810361125e5761125d611207565b5b50919050565b61126d81610f74565b82525050565b5f6020820190506112865f830184611264565b92915050565b5f8151905061129a81610fb8565b92915050565b5f602082840312156112b5576112b4610f51565b5b5f6112c28482850161128c565b91505092915050565b5f6040820190506112de5f830185611264565b6112eb6020830184611053565b9392505050565b6112fb81611020565b8114611305575f80fd5b50565b5f81519050611316816112f2565b92915050565b5f6020828403121561133157611330610f51565b5b5f61133e84828501611308565b91505092915050565b7f4e6f20746f6b656e73206c656674206f6e20636f6e74726163740000000000005f82015250565b5f61137b601a83610eb1565b915061138682611347565b602082019050919050565b5f6020820190508181035f8301526113a88161136f565b9050919050565b7f596f7520616c726561647920726563656976656420746f6b656e2066726f6d205f8201527f636f6e7472616374000000000000000000000000000000000000000000000000602082015250565b5f611409602883610eb1565b9150611414826113af565b604082019050919050565b5f6020820190508181035f830152611436816113fd565b9050919050565b5f819050919050565b5f61146061145b6114568461143d565b6110ff565b610faf565b9050919050565b61147081611446565b82525050565b5f6040820190506114895f830185611264565b6114966020830184611467565b9392505050565b7f46756e6374696f6e2063616e206f6e6c792062652063616c6c656420696e20745f8201527f657374206d6f6465000000000000000000000000000000000000000000000000602082015250565b5f6114f7602883610eb1565b91506115028261149d565b604082019050919050565b5f6020820190508181035f830152611524816114eb565b9050919050565b5f60608201905061153e5f830186611264565b61154b6020830185611053565b6115586040830184611053565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61159782610faf565b91506115a283610faf565b92508282019050808211156115ba576115b9611560565b5b9291505056fea26469706673582212206da1b7c8e5ea8864f12351c36e7b45a17f37b17f16865eaed0dd21ec1961520c64736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xD915902E GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xD915902E EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0xDE5F72FD EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0xE6664928 EQ PUSH2 0x32A JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0xB3AFCEE4 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xC7F48DF7 EQ PUSH2 0x2A4 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x34DCB04E EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x39C94D2D EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F6 JUMPI PUSH2 0xFE JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10A PUSH2 0x334 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0xF31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x135 SWAP2 SWAP1 PUSH2 0xFE2 JUMP JUMPDEST PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x158 PUSH2 0x3E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x107B JUMP JUMPDEST PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A6 PUSH2 0x41D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH2 0x425 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0x115A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0x44A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x119E JUMP JUMPDEST PUSH2 0x458 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH2 0x49D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0xF31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0xFE2 JUMP JUMPDEST PUSH2 0x52D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x289 SWAP2 SWAP1 PUSH2 0x119E JUMP JUMPDEST PUSH2 0x54F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x119E JUMP JUMPDEST PUSH2 0x562 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0x603 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x11C9 JUMP JUMPDEST PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x328 PUSH2 0x725 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x332 PUSH2 0x8CD JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x343 SWAP1 PUSH2 0x1234 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x36F SWAP1 PUSH2 0x1234 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3BA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x391 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3BA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x39D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3CE PUSH2 0x924 JUMP JUMPDEST SWAP1 POP PUSH2 0x3DB DUP2 DUP6 DUP6 PUSH2 0x92B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3F9 PUSH2 0x924 JUMP JUMPDEST SWAP1 POP PUSH2 0x406 DUP6 DUP3 DUP6 PUSH2 0x93D JUMP JUMPDEST PUSH2 0x411 DUP6 DUP6 DUP6 PUSH2 0x9CF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x454 ADDRESS DUP3 PUSH2 0x52D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4AC SWAP1 PUSH2 0x1234 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4D8 SWAP1 PUSH2 0x1234 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x523 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4FA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x523 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x506 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x537 PUSH2 0x924 JUMP JUMPDEST SWAP1 POP PUSH2 0x544 DUP2 DUP6 DUP6 PUSH2 0x9CF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x55A DUP4 PUSH2 0x458 JUMP JUMPDEST GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BD SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5D8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5FC SWAP2 SWAP1 PUSH2 0x12A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB ADDRESS DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65F SWAP3 SWAP2 SWAP1 PUSH2 0x12CB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x67B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x69F SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x72F ADDRESS PUSH2 0x458 JUMP JUMPDEST GT PUSH2 0x76F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x766 SWAP1 PUSH2 0x1391 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F0 SWAP1 PUSH2 0x141F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER PUSH1 0xA PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x835 SWAP3 SWAP2 SWAP1 PUSH2 0x1476 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x851 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x875 SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x91B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x912 SWAP1 PUSH2 0x150D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x938 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xABF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x948 DUP5 DUP5 PUSH2 0x6A3 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x9C9 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x9BA JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x152B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9C8 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xABF JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA3F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA36 SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAAF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA6 SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xABA DUP4 DUP4 DUP4 PUSH2 0xC8E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB2F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB26 SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB9F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB96 SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xC88 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xC7F SWAP2 SWAP1 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCDE JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCD2 SWAP2 SWAP1 PUSH2 0x158D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xDAC JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xD67 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x152B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDF3 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE3D JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xE9A SWAP2 SWAP1 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xEDE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEC3 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF03 DUP3 PUSH2 0xEA7 JUMP JUMPDEST PUSH2 0xF0D DUP2 DUP6 PUSH2 0xEB1 JUMP JUMPDEST SWAP4 POP PUSH2 0xF1D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEC1 JUMP JUMPDEST PUSH2 0xF26 DUP2 PUSH2 0xEE9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF49 DUP2 DUP5 PUSH2 0xEF9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF7E DUP3 PUSH2 0xF55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF8E DUP2 PUSH2 0xF74 JUMP JUMPDEST DUP2 EQ PUSH2 0xF98 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFA9 DUP2 PUSH2 0xF85 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC1 DUP2 PUSH2 0xFAF JUMP JUMPDEST DUP2 EQ PUSH2 0xFCB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFDC DUP2 PUSH2 0xFB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFF8 JUMPI PUSH2 0xFF7 PUSH2 0xF51 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1005 DUP6 DUP3 DUP7 ADD PUSH2 0xF9B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1016 DUP6 DUP3 DUP7 ADD PUSH2 0xFCE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1034 DUP2 PUSH2 0x1020 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x104D PUSH0 DUP4 ADD DUP5 PUSH2 0x102B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x105C DUP2 PUSH2 0xFAF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1075 PUSH0 DUP4 ADD DUP5 PUSH2 0x1053 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1092 JUMPI PUSH2 0x1091 PUSH2 0xF51 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x109F DUP7 DUP3 DUP8 ADD PUSH2 0xF9B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x10B0 DUP7 DUP3 DUP8 ADD PUSH2 0xF9B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x10C1 DUP7 DUP3 DUP8 ADD PUSH2 0xFCE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10E0 DUP2 PUSH2 0x10CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10F9 PUSH0 DUP4 ADD DUP5 PUSH2 0x10D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1122 PUSH2 0x111D PUSH2 0x1118 DUP5 PUSH2 0xF55 JUMP JUMPDEST PUSH2 0x10FF JUMP JUMPDEST PUSH2 0xF55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1133 DUP3 PUSH2 0x1108 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1144 DUP3 PUSH2 0x1129 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1154 DUP2 PUSH2 0x113A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x116D PUSH0 DUP4 ADD DUP5 PUSH2 0x114B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1188 JUMPI PUSH2 0x1187 PUSH2 0xF51 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1195 DUP5 DUP3 DUP6 ADD PUSH2 0xFCE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11B3 JUMPI PUSH2 0x11B2 PUSH2 0xF51 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11C0 DUP5 DUP3 DUP6 ADD PUSH2 0xF9B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11DF JUMPI PUSH2 0x11DE PUSH2 0xF51 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11EC DUP6 DUP3 DUP7 ADD PUSH2 0xF9B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11FD DUP6 DUP3 DUP7 ADD PUSH2 0xF9B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x124B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x125E JUMPI PUSH2 0x125D PUSH2 0x1207 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x126D DUP2 PUSH2 0xF74 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1286 PUSH0 DUP4 ADD DUP5 PUSH2 0x1264 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x129A DUP2 PUSH2 0xFB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12B5 JUMPI PUSH2 0x12B4 PUSH2 0xF51 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12C2 DUP5 DUP3 DUP6 ADD PUSH2 0x128C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x12DE PUSH0 DUP4 ADD DUP6 PUSH2 0x1264 JUMP JUMPDEST PUSH2 0x12EB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1053 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x12FB DUP2 PUSH2 0x1020 JUMP JUMPDEST DUP2 EQ PUSH2 0x1305 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1316 DUP2 PUSH2 0x12F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1331 JUMPI PUSH2 0x1330 PUSH2 0xF51 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x133E DUP5 DUP3 DUP6 ADD PUSH2 0x1308 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E73206C656674206F6E20636F6E7472616374000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x137B PUSH1 0x1A DUP4 PUSH2 0xEB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1386 DUP3 PUSH2 0x1347 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13A8 DUP2 PUSH2 0x136F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F7520616C726561647920726563656976656420746F6B656E2066726F6D20 PUSH0 DUP3 ADD MSTORE PUSH32 0x636F6E7472616374000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1409 PUSH1 0x28 DUP4 PUSH2 0xEB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1414 DUP3 PUSH2 0x13AF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1436 DUP2 PUSH2 0x13FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1460 PUSH2 0x145B PUSH2 0x1456 DUP5 PUSH2 0x143D JUMP JUMPDEST PUSH2 0x10FF JUMP JUMPDEST PUSH2 0xFAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1470 DUP2 PUSH2 0x1446 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1489 PUSH0 DUP4 ADD DUP6 PUSH2 0x1264 JUMP JUMPDEST PUSH2 0x1496 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1467 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x46756E6374696F6E2063616E206F6E6C792062652063616C6C656420696E2074 PUSH0 DUP3 ADD MSTORE PUSH32 0x657374206D6F6465000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14F7 PUSH1 0x28 DUP4 PUSH2 0xEB1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1502 DUP3 PUSH2 0x149D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1524 DUP2 PUSH2 0x14EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x153E PUSH0 DUP4 ADD DUP7 PUSH2 0x1264 JUMP JUMPDEST PUSH2 0x154B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1053 JUMP JUMPDEST PUSH2 0x1558 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1053 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1597 DUP3 PUSH2 0xFAF JUMP JUMPDEST SWAP2 POP PUSH2 0x15A2 DUP4 PUSH2 0xFAF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x15BA JUMPI PUSH2 0x15B9 PUSH2 0x1560 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xA1B7C8E5EA8864F12351C36E7B45 LOG1 PUSH32 0x37B17F16865EAED0DD21EC1961520C64736F6C63430008160033000000000000 ",
							"sourceMap": "115:1451:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;171:33:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;890:94;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3299:116:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1140:113:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;990:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;776:108;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3846:140:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1256:307:5;;;:::i;:::-;;630:140;;;:::i;:::-;;2074:89:1;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;171:33:5:-;;;;;;;;;;;;;:::o;890:94::-;946:31;963:4;970:6;946:8;:31::i;:::-;;890:94;:::o;3299:116:1:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2276:93::-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;3610:178::-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;1140:113:5:-;1201:4;1245:1;1223:19;1233:8;1223:9;:19::i;:::-;:23;1216:30;;1140:113;;;:::o;990:144::-;1061:7;1087:20;;;;;;;;;;;:30;;;1118:8;1087:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1080:47;;990:144;;;:::o;776:108::-;825:20;;;;;;;;;;;:29;;;863:4;870:6;825:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;776:108;:::o;3846:140:1:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;1256:307:5:-;1321:1;1294:24;1312:4;1294:9;:24::i;:::-;:28;1286:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1366:10;:22;1377:10;1366:22;;;;;;;;;;;;;;;;;;;;;;;;;1365:23;1357:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;1448:4;:13;;;1462:10;1474:2;1448:29;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1545:4;1520:10;:22;1531:10;1520:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;1256:307::o;630:140::-;683:9;;;;;;;;;;;675:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;762:1;747:12;:16;;;;630:140::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;8989:128:1:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;9949:432::-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:6:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:60::-;4881:3;4902:5;4895:12;;4853:60;;;:::o;4919:142::-;4969:9;5002:53;5020:34;5029:24;5047:5;5029:24;:::i;:::-;5020:34;:::i;:::-;5002:53;:::i;:::-;4989:66;;4919:142;;;:::o;5067:126::-;5117:9;5150:37;5181:5;5150:37;:::i;:::-;5137:50;;5067:126;;;:::o;5199:139::-;5262:9;5295:37;5326:5;5295:37;:::i;:::-;5282:50;;5199:139;;;:::o;5344:157::-;5444:50;5488:5;5444:50;:::i;:::-;5439:3;5432:63;5344:157;;:::o;5507:248::-;5613:4;5651:2;5640:9;5636:18;5628:26;;5664:84;5745:1;5734:9;5730:17;5721:6;5664:84;:::i;:::-;5507:248;;;;:::o;5761:329::-;5820:6;5869:2;5857:9;5848:7;5844:23;5840:32;5837:119;;;5875:79;;:::i;:::-;5837:119;5995:1;6020:53;6065:7;6056:6;6045:9;6041:22;6020:53;:::i;:::-;6010:63;;5966:117;5761:329;;;;:::o;6096:::-;6155:6;6204:2;6192:9;6183:7;6179:23;6175:32;6172:119;;;6210:79;;:::i;:::-;6172:119;6330:1;6355:53;6400:7;6391:6;6380:9;6376:22;6355:53;:::i;:::-;6345:63;;6301:117;6096:329;;;;:::o;6431:474::-;6499:6;6507;6556:2;6544:9;6535:7;6531:23;6527:32;6524:119;;;6562:79;;:::i;:::-;6524:119;6682:1;6707:53;6752:7;6743:6;6732:9;6728:22;6707:53;:::i;:::-;6697:63;;6653:117;6809:2;6835:53;6880:7;6871:6;6860:9;6856:22;6835:53;:::i;:::-;6825:63;;6780:118;6431:474;;;;;:::o;6911:180::-;6959:77;6956:1;6949:88;7056:4;7053:1;7046:15;7080:4;7077:1;7070:15;7097:320;7141:6;7178:1;7172:4;7168:12;7158:22;;7225:1;7219:4;7215:12;7246:18;7236:81;;7302:4;7294:6;7290:17;7280:27;;7236:81;7364:2;7356:6;7353:14;7333:18;7330:38;7327:84;;7383:18;;:::i;:::-;7327:84;7148:269;7097:320;;;:::o;7423:118::-;7510:24;7528:5;7510:24;:::i;:::-;7505:3;7498:37;7423:118;;:::o;7547:222::-;7640:4;7678:2;7667:9;7663:18;7655:26;;7691:71;7759:1;7748:9;7744:17;7735:6;7691:71;:::i;:::-;7547:222;;;;:::o;7775:143::-;7832:5;7863:6;7857:13;7848:22;;7879:33;7906:5;7879:33;:::i;:::-;7775:143;;;;:::o;7924:351::-;7994:6;8043:2;8031:9;8022:7;8018:23;8014:32;8011:119;;;8049:79;;:::i;:::-;8011:119;8169:1;8194:64;8250:7;8241:6;8230:9;8226:22;8194:64;:::i;:::-;8184:74;;8140:128;7924:351;;;;:::o;8281:332::-;8402:4;8440:2;8429:9;8425:18;8417:26;;8453:71;8521:1;8510:9;8506:17;8497:6;8453:71;:::i;:::-;8534:72;8602:2;8591:9;8587:18;8578:6;8534:72;:::i;:::-;8281:332;;;;;:::o;8619:116::-;8689:21;8704:5;8689:21;:::i;:::-;8682:5;8679:32;8669:60;;8725:1;8722;8715:12;8669:60;8619:116;:::o;8741:137::-;8795:5;8826:6;8820:13;8811:22;;8842:30;8866:5;8842:30;:::i;:::-;8741:137;;;;:::o;8884:345::-;8951:6;9000:2;8988:9;8979:7;8975:23;8971:32;8968:119;;;9006:79;;:::i;:::-;8968:119;9126:1;9151:61;9204:7;9195:6;9184:9;9180:22;9151:61;:::i;:::-;9141:71;;9097:125;8884:345;;;;:::o;9235:176::-;9375:28;9371:1;9363:6;9359:14;9352:52;9235:176;:::o;9417:366::-;9559:3;9580:67;9644:2;9639:3;9580:67;:::i;:::-;9573:74;;9656:93;9745:3;9656:93;:::i;:::-;9774:2;9769:3;9765:12;9758:19;;9417:366;;;:::o;9789:419::-;9955:4;9993:2;9982:9;9978:18;9970:26;;10042:9;10036:4;10032:20;10028:1;10017:9;10013:17;10006:47;10070:131;10196:4;10070:131;:::i;:::-;10062:139;;9789:419;;;:::o;10214:227::-;10354:34;10350:1;10342:6;10338:14;10331:58;10423:10;10418:2;10410:6;10406:15;10399:35;10214:227;:::o;10447:366::-;10589:3;10610:67;10674:2;10669:3;10610:67;:::i;:::-;10603:74;;10686:93;10775:3;10686:93;:::i;:::-;10804:2;10799:3;10795:12;10788:19;;10447:366;;;:::o;10819:419::-;10985:4;11023:2;11012:9;11008:18;11000:26;;11072:9;11066:4;11062:20;11058:1;11047:9;11043:17;11036:47;11100:131;11226:4;11100:131;:::i;:::-;11092:139;;10819:419;;;:::o;11244:86::-;11290:7;11319:5;11308:16;;11244:86;;;:::o;11336:160::-;11395:9;11428:62;11446:43;11455:33;11482:5;11455:33;:::i;:::-;11446:43;:::i;:::-;11428:62;:::i;:::-;11415:75;;11336:160;;;:::o;11502:149::-;11598:46;11638:5;11598:46;:::i;:::-;11593:3;11586:59;11502:149;;:::o;11657:350::-;11787:4;11825:2;11814:9;11810:18;11802:26;;11838:71;11906:1;11895:9;11891:17;11882:6;11838:71;:::i;:::-;11919:81;11996:2;11985:9;11981:18;11972:6;11919:81;:::i;:::-;11657:350;;;;;:::o;12013:227::-;12153:34;12149:1;12141:6;12137:14;12130:58;12222:10;12217:2;12209:6;12205:15;12198:35;12013:227;:::o;12246:366::-;12388:3;12409:67;12473:2;12468:3;12409:67;:::i;:::-;12402:74;;12485:93;12574:3;12485:93;:::i;:::-;12603:2;12598:3;12594:12;12587:19;;12246:366;;;:::o;12618:419::-;12784:4;12822:2;12811:9;12807:18;12799:26;;12871:9;12865:4;12861:20;12857:1;12846:9;12842:17;12835:47;12899:131;13025:4;12899:131;:::i;:::-;12891:139;;12618:419;;;:::o;13043:442::-;13192:4;13230:2;13219:9;13215:18;13207:26;;13243:71;13311:1;13300:9;13296:17;13287:6;13243:71;:::i;:::-;13324:72;13392:2;13381:9;13377:18;13368:6;13324:72;:::i;:::-;13406;13474:2;13463:9;13459:18;13450:6;13406:72;:::i;:::-;13043:442;;;;;;:::o;13491:180::-;13539:77;13536:1;13529:88;13636:4;13633:1;13626:15;13660:4;13657:1;13650:15;13677:191;13717:3;13736:20;13754:1;13736:20;:::i;:::-;13731:25;;13770:20;13788:1;13770:20;:::i;:::-;13765:25;;13813:1;13810;13806:9;13799:16;;13834:3;13831:1;13828:10;13825:36;;;13841:18;;:::i;:::-;13825:36;13677:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1124400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"USD_BaseCoinContract()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2918",
								"decimals()": "361",
								"donateMyGovToken(uint256)": "infinite",
								"donateUSD(uint256)": "infinite",
								"emptyTokenSupply()": "7396",
								"faucet()": "infinite",
								"getUSDBalanceOfAccount(address)": "infinite",
								"isMyGovMember(address)": "2950",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 115,
									"end": 1566,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 115,
									"end": 1566,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 115,
									"end": 1566,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 274,
									"end": 624,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 274,
									"end": 624,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 274,
									"end": 624,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 274,
									"end": 624,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 274,
									"end": 624,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 274,
									"end": 624,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 274,
									"end": 624,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 274,
									"end": 624,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 274,
									"end": 624,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 274,
									"end": 624,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 274,
									"end": 624,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 274,
									"end": 624,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 274,
									"end": 624,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 274,
									"end": 624,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 274,
									"end": 624,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 274,
									"end": 624,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 274,
									"end": 624,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 274,
									"end": 624,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 274,
									"end": 624,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 274,
									"end": 624,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 274,
									"end": 624,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 274,
									"end": 624,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 274,
									"end": 624,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 274,
									"end": 624,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 274,
									"end": 624,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 274,
									"end": 624,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 274,
									"end": 624,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 274,
									"end": 624,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 274,
									"end": 624,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 274,
									"end": 624,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 274,
									"end": 624,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 274,
									"end": 624,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 274,
									"end": 624,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 274,
									"end": 624,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 274,
									"end": 624,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "4D79476F76000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 1,
									"value": "4D47000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 393,
									"end": 401,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "1312D00"
								},
								{
									"begin": 378,
									"end": 389,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 378,
									"end": 401,
									"modifierDepth": 1,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 370,
									"end": 452,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 370,
									"end": 452,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 370,
									"end": 452,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 370,
									"end": 452,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 370,
									"end": 452,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 370,
									"end": 452,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 370,
									"end": 452,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 370,
									"end": 452,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 370,
									"end": 452,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 370,
									"end": 452,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 370,
									"end": 452,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 370,
									"end": 452,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 370,
									"end": 452,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 370,
									"end": 452,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 370,
									"end": 452,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 370,
									"end": 452,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 370,
									"end": 452,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 370,
									"end": 452,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 370,
									"end": 452,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 370,
									"end": 452,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 370,
									"end": 452,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 370,
									"end": 452,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 370,
									"end": 452,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 370,
									"end": 452,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 477,
									"end": 488,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 462,
									"end": 474,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 462,
									"end": 488,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 462,
									"end": 488,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 462,
									"end": 488,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 462,
									"end": 488,
									"modifierDepth": 1,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 510,
									"end": 514,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 498,
									"end": 507,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 498,
									"end": 507,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 498,
									"end": 514,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 498,
									"end": 514,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 498,
									"end": 514,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 498,
									"end": 514,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 498,
									"end": 514,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 498,
									"end": 514,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 498,
									"end": 514,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 498,
									"end": 514,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 498,
									"end": 514,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 498,
									"end": 514,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 498,
									"end": 514,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 498,
									"end": 514,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 498,
									"end": 514,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 498,
									"end": 514,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 498,
									"end": 514,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 498,
									"end": 514,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 498,
									"end": 514,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 498,
									"end": 514,
									"modifierDepth": 1,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 524,
									"end": 557,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 538,
									"end": 542,
									"modifierDepth": 1,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 545,
									"end": 556,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 524,
									"end": 529,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 524,
									"end": 529,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 524,
									"end": 529,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 524,
									"end": 557,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 524,
									"end": 557,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 524,
									"end": 557,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 524,
									"end": 557,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 524,
									"end": 557,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 596,
									"end": 616,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 567,
									"end": 587,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 567,
									"end": 587,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 567,
									"end": 617,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 567,
									"end": 617,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 567,
									"end": 617,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 567,
									"end": 617,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 567,
									"end": 617,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 567,
									"end": 617,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 567,
									"end": 617,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 567,
									"end": 617,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 567,
									"end": 617,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 567,
									"end": 617,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 567,
									"end": 617,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 567,
									"end": 617,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 567,
									"end": 617,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 567,
									"end": 617,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 567,
									"end": 617,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 567,
									"end": 617,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 567,
									"end": 617,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 567,
									"end": 617,
									"modifierDepth": 1,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 274,
									"end": 624,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 274,
									"end": 624,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 274,
									"end": 624,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 115,
									"end": 1566,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 115,
									"end": 1566,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 1,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 6,
									"value": "79"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 694,
									"end": 820,
									"name": "tag",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 694,
									"end": 820,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 731,
									"end": 738,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 813,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 760,
									"end": 814,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 749,
									"end": 814,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 749,
									"end": 814,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 694,
									"end": 820,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 694,
									"end": 820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 826,
									"end": 922,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 826,
									"end": 922,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 863,
									"end": 870,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 910,
									"end": 915,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 892,
									"end": 916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 892,
									"end": 916,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 881,
									"end": 916,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 881,
									"end": 916,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 826,
									"end": 922,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 826,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 1295,
									"name": "tag",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1205,
									"end": 1295,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1239,
									"end": 1246,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1282,
									"end": 1287,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1275,
									"end": 1288,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1268,
									"end": 1289,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1289,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1257,
									"end": 1289,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 1295,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 1295,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 1295,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1205,
									"end": 1295,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1301,
									"end": 1417,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 1301,
									"end": 1417,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1392,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 1386,
									"end": 1391,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1392,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "45"
								},
								{
									"begin": 1371,
									"end": 1392,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1392,
									"name": "tag",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 1371,
									"end": 1392,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1364,
									"end": 1369,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1361,
									"end": 1393,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1351,
									"end": 1411,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 1351,
									"end": 1411,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1407,
									"end": 1408,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1404,
									"end": 1405,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1397,
									"end": 1409,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1351,
									"end": 1411,
									"name": "tag",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 1351,
									"end": 1411,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1301,
									"end": 1417,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1301,
									"end": 1417,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1423,
									"end": 1560,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1423,
									"end": 1560,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1477,
									"end": 1482,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1508,
									"end": 1514,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1502,
									"end": 1515,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1493,
									"end": 1515,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1493,
									"end": 1515,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1524,
									"end": 1554,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 1548,
									"end": 1553,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1524,
									"end": 1554,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 1524,
									"end": 1554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1524,
									"end": 1554,
									"name": "tag",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 1524,
									"end": 1554,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1423,
									"end": 1560,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1423,
									"end": 1560,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1423,
									"end": 1560,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1423,
									"end": 1560,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1423,
									"end": 1560,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1566,
									"end": 2223,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1566,
									"end": 2223,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1651,
									"end": 1657,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1659,
									"end": 1665,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1667,
									"end": 1673,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1716,
									"end": 1718,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 1704,
									"end": 1713,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1695,
									"end": 1702,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1691,
									"end": 1714,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1687,
									"end": 1719,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1684,
									"end": 1803,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1684,
									"end": 1803,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 1684,
									"end": 1803,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1722,
									"end": 1801,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 1722,
									"end": 1801,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 1722,
									"end": 1801,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1722,
									"end": 1801,
									"name": "tag",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 1722,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1684,
									"end": 1803,
									"name": "tag",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 1684,
									"end": 1803,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1867,
									"end": 1931,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1923,
									"end": 1930,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1914,
									"end": 1920,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1903,
									"end": 1912,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1899,
									"end": 1921,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1867,
									"end": 1931,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1867,
									"end": 1931,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1867,
									"end": 1931,
									"name": "tag",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1867,
									"end": 1931,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1857,
									"end": 1931,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1857,
									"end": 1931,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1813,
									"end": 1941,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1980,
									"end": 1982,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2006,
									"end": 2070,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 2062,
									"end": 2069,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2053,
									"end": 2059,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2042,
									"end": 2051,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 2038,
									"end": 2060,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2006,
									"end": 2070,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 2006,
									"end": 2070,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2006,
									"end": 2070,
									"name": "tag",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 2006,
									"end": 2070,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1996,
									"end": 2070,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1996,
									"end": 2070,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1951,
									"end": 2080,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2119,
									"end": 2121,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2145,
									"end": 2206,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 2198,
									"end": 2205,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2178,
									"end": 2187,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 2174,
									"end": 2196,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2145,
									"end": 2206,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 2145,
									"end": 2206,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2145,
									"end": 2206,
									"name": "tag",
									"source": 6,
									"value": "102"
								},
								{
									"begin": 2145,
									"end": 2206,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2135,
									"end": 2206,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2135,
									"end": 2206,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2090,
									"end": 2216,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1566,
									"end": 2223,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1566,
									"end": 2223,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1566,
									"end": 2223,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1566,
									"end": 2223,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1566,
									"end": 2223,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1566,
									"end": 2223,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2229,
									"end": 2328,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 2229,
									"end": 2328,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2281,
									"end": 2287,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2315,
									"end": 2320,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2309,
									"end": 2321,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2299,
									"end": 2321,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2299,
									"end": 2321,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2229,
									"end": 2328,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2229,
									"end": 2328,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2229,
									"end": 2328,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2229,
									"end": 2328,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2334,
									"end": 2514,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 2334,
									"end": 2514,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2382,
									"end": 2459,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2379,
									"end": 2380,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2372,
									"end": 2460,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2479,
									"end": 2483,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 2476,
									"end": 2477,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2469,
									"end": 2484,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2503,
									"end": 2507,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2500,
									"end": 2501,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2493,
									"end": 2508,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2520,
									"end": 2700,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 2520,
									"end": 2700,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2568,
									"end": 2645,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2565,
									"end": 2566,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2558,
									"end": 2646,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2665,
									"end": 2669,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2662,
									"end": 2663,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2655,
									"end": 2670,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2689,
									"end": 2693,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2686,
									"end": 2687,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2679,
									"end": 2694,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2706,
									"end": 3026,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 2706,
									"end": 3026,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2750,
									"end": 2756,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2787,
									"end": 2788,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2781,
									"end": 2785,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2777,
									"end": 2789,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 2767,
									"end": 2789,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2767,
									"end": 2789,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2834,
									"end": 2835,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2828,
									"end": 2832,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2824,
									"end": 2836,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2855,
									"end": 2873,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2845,
									"end": 2926,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 2845,
									"end": 2926,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2911,
									"end": 2915,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 2903,
									"end": 2909,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2899,
									"end": 2916,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2889,
									"end": 2916,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2889,
									"end": 2916,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2845,
									"end": 2926,
									"name": "tag",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 2845,
									"end": 2926,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2973,
									"end": 2975,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2965,
									"end": 2971,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2962,
									"end": 2976,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2942,
									"end": 2960,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2939,
									"end": 2977,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2936,
									"end": 3020,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 2936,
									"end": 3020,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2992,
									"end": 3010,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 2992,
									"end": 3010,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 2992,
									"end": 3010,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2992,
									"end": 3010,
									"name": "tag",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 2992,
									"end": 3010,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2936,
									"end": 3020,
									"name": "tag",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 2936,
									"end": 3020,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2757,
									"end": 3026,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2706,
									"end": 3026,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2706,
									"end": 3026,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2706,
									"end": 3026,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2706,
									"end": 3026,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3032,
									"end": 3173,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 3032,
									"end": 3173,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3081,
									"end": 3085,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3104,
									"end": 3107,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3096,
									"end": 3107,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3096,
									"end": 3107,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3127,
									"end": 3130,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3124,
									"end": 3125,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3117,
									"end": 3131,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3161,
									"end": 3165,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3158,
									"end": 3159,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3148,
									"end": 3166,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 3140,
									"end": 3166,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3140,
									"end": 3166,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3032,
									"end": 3173,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3032,
									"end": 3173,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3032,
									"end": 3173,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3032,
									"end": 3173,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3179,
									"end": 3272,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 3179,
									"end": 3272,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3216,
									"end": 3222,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3263,
									"end": 3265,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3258,
									"end": 3260,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 3251,
									"end": 3256,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3247,
									"end": 3261,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3243,
									"end": 3266,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 3233,
									"end": 3266,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3233,
									"end": 3266,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3179,
									"end": 3272,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3179,
									"end": 3272,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3179,
									"end": 3272,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3179,
									"end": 3272,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3278,
									"end": 3385,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 3278,
									"end": 3385,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3322,
									"end": 3330,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3372,
									"end": 3377,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3366,
									"end": 3370,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3362,
									"end": 3378,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3341,
									"end": 3378,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3341,
									"end": 3378,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3278,
									"end": 3385,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3278,
									"end": 3385,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3278,
									"end": 3385,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3278,
									"end": 3385,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3278,
									"end": 3385,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3391,
									"end": 3784,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 3391,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3460,
									"end": 3466,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3510,
									"end": 3511,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 3498,
									"end": 3508,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3494,
									"end": 3512,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3630,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 3563,
									"end": 3629,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3552,
									"end": 3561,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3630,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 3533,
									"end": 3630,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3630,
									"name": "tag",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 3533,
									"end": 3630,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3651,
									"end": 3690,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 3681,
									"end": 3689,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3670,
									"end": 3679,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3651,
									"end": 3690,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 3651,
									"end": 3690,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3651,
									"end": 3690,
									"name": "tag",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 3651,
									"end": 3690,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3639,
									"end": 3690,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 3639,
									"end": 3690,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3723,
									"end": 3727,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3719,
									"end": 3728,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3712,
									"end": 3717,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3708,
									"end": 3729,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3699,
									"end": 3729,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 3699,
									"end": 3729,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3772,
									"end": 3776,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3762,
									"end": 3770,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3758,
									"end": 3777,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3751,
									"end": 3756,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3748,
									"end": 3778,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 3738,
									"end": 3778,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3738,
									"end": 3778,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3467,
									"end": 3784,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3467,
									"end": 3784,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3391,
									"end": 3784,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 3391,
									"end": 3784,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3391,
									"end": 3784,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3391,
									"end": 3784,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3391,
									"end": 3784,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3391,
									"end": 3784,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3790,
									"end": 3850,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 3790,
									"end": 3850,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3818,
									"end": 3821,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3839,
									"end": 3844,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3832,
									"end": 3844,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3832,
									"end": 3844,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3790,
									"end": 3850,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3790,
									"end": 3850,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3790,
									"end": 3850,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3790,
									"end": 3850,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3856,
									"end": 3998,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 3856,
									"end": 3998,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3906,
									"end": 3915,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3939,
									"end": 3992,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 3957,
									"end": 3991,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 3966,
									"end": 3990,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 3984,
									"end": 3989,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3966,
									"end": 3990,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 3966,
									"end": 3990,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3966,
									"end": 3990,
									"name": "tag",
									"source": 6,
									"value": "120"
								},
								{
									"begin": 3966,
									"end": 3990,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3957,
									"end": 3991,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 3957,
									"end": 3991,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3957,
									"end": 3991,
									"name": "tag",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 3957,
									"end": 3991,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3939,
									"end": 3992,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 3939,
									"end": 3992,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3939,
									"end": 3992,
									"name": "tag",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 3939,
									"end": 3992,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3926,
									"end": 3992,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3926,
									"end": 3992,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3856,
									"end": 3998,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3856,
									"end": 3998,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3856,
									"end": 3998,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3856,
									"end": 3998,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4004,
									"end": 4079,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 4004,
									"end": 4079,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4047,
									"end": 4050,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4068,
									"end": 4073,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4061,
									"end": 4073,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4061,
									"end": 4073,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4004,
									"end": 4079,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4004,
									"end": 4079,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4004,
									"end": 4079,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4004,
									"end": 4079,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4085,
									"end": 4354,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 4085,
									"end": 4354,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4195,
									"end": 4234,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "123"
								},
								{
									"begin": 4226,
									"end": 4233,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4195,
									"end": 4234,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 4195,
									"end": 4234,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4195,
									"end": 4234,
									"name": "tag",
									"source": 6,
									"value": "123"
								},
								{
									"begin": 4195,
									"end": 4234,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4256,
									"end": 4347,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "124"
								},
								{
									"begin": 4305,
									"end": 4346,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 4329,
									"end": 4345,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4305,
									"end": 4346,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 4305,
									"end": 4346,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4305,
									"end": 4346,
									"name": "tag",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 4305,
									"end": 4346,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4297,
									"end": 4303,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4290,
									"end": 4294,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4284,
									"end": 4295,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 4256,
									"end": 4347,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 4256,
									"end": 4347,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4256,
									"end": 4347,
									"name": "tag",
									"source": 6,
									"value": "124"
								},
								{
									"begin": 4256,
									"end": 4347,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4250,
									"end": 4254,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4243,
									"end": 4348,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 4161,
									"end": 4354,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4085,
									"end": 4354,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4085,
									"end": 4354,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4085,
									"end": 4354,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4085,
									"end": 4354,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4360,
									"end": 4433,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 4360,
									"end": 4433,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4405,
									"end": 4408,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4360,
									"end": 4433,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4360,
									"end": 4433,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4439,
									"end": 4628,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 4439,
									"end": 4628,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4516,
									"end": 4548,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "128"
								},
								{
									"begin": 4516,
									"end": 4548,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 4516,
									"end": 4548,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4516,
									"end": 4548,
									"name": "tag",
									"source": 6,
									"value": "128"
								},
								{
									"begin": 4516,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4557,
									"end": 4622,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "129"
								},
								{
									"begin": 4615,
									"end": 4621,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4607,
									"end": 4613,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4601,
									"end": 4605,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4557,
									"end": 4622,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 4557,
									"end": 4622,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4557,
									"end": 4622,
									"name": "tag",
									"source": 6,
									"value": "129"
								},
								{
									"begin": 4557,
									"end": 4622,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4492,
									"end": 4628,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4439,
									"end": 4628,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4439,
									"end": 4628,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4439,
									"end": 4628,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4634,
									"end": 4820,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 4634,
									"end": 4820,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4694,
									"end": 4814,
									"name": "tag",
									"source": 6,
									"value": "131"
								},
								{
									"begin": 4694,
									"end": 4814,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4711,
									"end": 4714,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4704,
									"end": 4709,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4701,
									"end": 4715,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4694,
									"end": 4814,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4694,
									"end": 4814,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 4694,
									"end": 4814,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4765,
									"end": 4804,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "134"
								},
								{
									"begin": 4802,
									"end": 4803,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4795,
									"end": 4800,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4765,
									"end": 4804,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 4765,
									"end": 4804,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4765,
									"end": 4804,
									"name": "tag",
									"source": 6,
									"value": "134"
								},
								{
									"begin": 4765,
									"end": 4804,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4738,
									"end": 4739,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4731,
									"end": 4736,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4727,
									"end": 4740,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4718,
									"end": 4740,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4718,
									"end": 4740,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4694,
									"end": 4814,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "131"
								},
								{
									"begin": 4694,
									"end": 4814,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4694,
									"end": 4814,
									"name": "tag",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 4694,
									"end": 4814,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4634,
									"end": 4820,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4634,
									"end": 4820,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4634,
									"end": 4820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4826,
									"end": 5369,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 4826,
									"end": 5369,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4927,
									"end": 4929,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4922,
									"end": 4925,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4919,
									"end": 4930,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4916,
									"end": 5362,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4916,
									"end": 5362,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "136"
								},
								{
									"begin": 4916,
									"end": 5362,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4961,
									"end": 4999,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "137"
								},
								{
									"begin": 4993,
									"end": 4998,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4961,
									"end": 4999,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 4961,
									"end": 4999,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4961,
									"end": 4999,
									"name": "tag",
									"source": 6,
									"value": "137"
								},
								{
									"begin": 4961,
									"end": 4999,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5045,
									"end": 5074,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 5063,
									"end": 5073,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5045,
									"end": 5074,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 5045,
									"end": 5074,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5045,
									"end": 5074,
									"name": "tag",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 5045,
									"end": 5074,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5035,
									"end": 5043,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5031,
									"end": 5075,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5228,
									"end": 5230,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5216,
									"end": 5226,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5213,
									"end": 5231,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5210,
									"end": 5259,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5210,
									"end": 5259,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "139"
								},
								{
									"begin": 5210,
									"end": 5259,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5249,
									"end": 5257,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5234,
									"end": 5257,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5234,
									"end": 5257,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5210,
									"end": 5259,
									"name": "tag",
									"source": 6,
									"value": "139"
								},
								{
									"begin": 5210,
									"end": 5259,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5272,
									"end": 5352,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 5328,
									"end": 5350,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "141"
								},
								{
									"begin": 5346,
									"end": 5349,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5328,
									"end": 5350,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 5328,
									"end": 5350,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5328,
									"end": 5350,
									"name": "tag",
									"source": 6,
									"value": "141"
								},
								{
									"begin": 5328,
									"end": 5350,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5318,
									"end": 5326,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5314,
									"end": 5351,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5301,
									"end": 5312,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5272,
									"end": 5352,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 5272,
									"end": 5352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5272,
									"end": 5352,
									"name": "tag",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 5272,
									"end": 5352,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4931,
									"end": 5362,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4931,
									"end": 5362,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4916,
									"end": 5362,
									"name": "tag",
									"source": 6,
									"value": "136"
								},
								{
									"begin": 4916,
									"end": 5362,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4826,
									"end": 5369,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4826,
									"end": 5369,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4826,
									"end": 5369,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4826,
									"end": 5369,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5375,
									"end": 5492,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 5375,
									"end": 5492,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5429,
									"end": 5437,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5479,
									"end": 5484,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5473,
									"end": 5477,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5469,
									"end": 5485,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 5448,
									"end": 5485,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5448,
									"end": 5485,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5375,
									"end": 5492,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5375,
									"end": 5492,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5375,
									"end": 5492,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5375,
									"end": 5492,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5375,
									"end": 5492,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5498,
									"end": 5667,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 5498,
									"end": 5667,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5542,
									"end": 5548,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5575,
									"end": 5626,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "144"
								},
								{
									"begin": 5623,
									"end": 5624,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5619,
									"end": 5625,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5611,
									"end": 5616,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5608,
									"end": 5609,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 5604,
									"end": 5617,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 5575,
									"end": 5626,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 5575,
									"end": 5626,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5575,
									"end": 5626,
									"name": "tag",
									"source": 6,
									"value": "144"
								},
								{
									"begin": 5575,
									"end": 5626,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5571,
									"end": 5627,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5656,
									"end": 5660,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5650,
									"end": 5654,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5646,
									"end": 5661,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5636,
									"end": 5661,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5636,
									"end": 5661,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5549,
									"end": 5667,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5498,
									"end": 5667,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5498,
									"end": 5667,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5498,
									"end": 5667,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5498,
									"end": 5667,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5498,
									"end": 5667,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5672,
									"end": 5967,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 5672,
									"end": 5967,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5748,
									"end": 5752,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5894,
									"end": 5923,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "146"
								},
								{
									"begin": 5919,
									"end": 5922,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5913,
									"end": 5917,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5894,
									"end": 5923,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 5894,
									"end": 5923,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5894,
									"end": 5923,
									"name": "tag",
									"source": 6,
									"value": "146"
								},
								{
									"begin": 5894,
									"end": 5923,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5886,
									"end": 5923,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5886,
									"end": 5923,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5956,
									"end": 5959,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5953,
									"end": 5954,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 5949,
									"end": 5960,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 5943,
									"end": 5947,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5940,
									"end": 5961,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 5932,
									"end": 5961,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5932,
									"end": 5961,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5672,
									"end": 5967,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5672,
									"end": 5967,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5672,
									"end": 5967,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5672,
									"end": 5967,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5672,
									"end": 5967,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5972,
									"end": 7367,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 5972,
									"end": 7367,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6089,
									"end": 6126,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "148"
								},
								{
									"begin": 6122,
									"end": 6125,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6089,
									"end": 6126,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 6089,
									"end": 6126,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6089,
									"end": 6126,
									"name": "tag",
									"source": 6,
									"value": "148"
								},
								{
									"begin": 6089,
									"end": 6126,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6191,
									"end": 6209,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6183,
									"end": 6189,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6180,
									"end": 6210,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 6177,
									"end": 6233,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6177,
									"end": 6233,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "149"
								},
								{
									"begin": 6177,
									"end": 6233,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6213,
									"end": 6231,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "150"
								},
								{
									"begin": 6213,
									"end": 6231,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 6213,
									"end": 6231,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6213,
									"end": 6231,
									"name": "tag",
									"source": 6,
									"value": "150"
								},
								{
									"begin": 6213,
									"end": 6231,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6177,
									"end": 6233,
									"name": "tag",
									"source": 6,
									"value": "149"
								},
								{
									"begin": 6177,
									"end": 6233,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6257,
									"end": 6295,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "151"
								},
								{
									"begin": 6289,
									"end": 6293,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6283,
									"end": 6294,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 6257,
									"end": 6295,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 6257,
									"end": 6295,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6257,
									"end": 6295,
									"name": "tag",
									"source": 6,
									"value": "151"
								},
								{
									"begin": 6257,
									"end": 6295,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6342,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "152"
								},
								{
									"begin": 6402,
									"end": 6408,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6394,
									"end": 6400,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6388,
									"end": 6392,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6342,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 6342,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6342,
									"end": 6409,
									"name": "tag",
									"source": 6,
									"value": "152"
								},
								{
									"begin": 6342,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6436,
									"end": 6437,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6460,
									"end": 6464,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6447,
									"end": 6464,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6447,
									"end": 6464,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6492,
									"end": 6494,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 6484,
									"end": 6490,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6481,
									"end": 6495,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 6509,
									"end": 6510,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 6504,
									"end": 7122,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6504,
									"end": 7122,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 6504,
									"end": 7122,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "154"
								},
								{
									"begin": 6504,
									"end": 7122,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7166,
									"end": 7167,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7183,
									"end": 7189,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7180,
									"end": 7257,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7180,
									"end": 7257,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "155"
								},
								{
									"begin": 7180,
									"end": 7257,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7232,
									"end": 7241,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7227,
									"end": 7230,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 7223,
									"end": 7242,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7217,
									"end": 7243,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7208,
									"end": 7243,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7208,
									"end": 7243,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7180,
									"end": 7257,
									"name": "tag",
									"source": 6,
									"value": "155"
								},
								{
									"begin": 7180,
									"end": 7257,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7283,
									"end": 7350,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "156"
								},
								{
									"begin": 7343,
									"end": 7349,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7336,
									"end": 7341,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7283,
									"end": 7350,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 7283,
									"end": 7350,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7283,
									"end": 7350,
									"name": "tag",
									"source": 6,
									"value": "156"
								},
								{
									"begin": 7283,
									"end": 7350,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7277,
									"end": 7281,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 7270,
									"end": 7351,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 7139,
									"end": 7361,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6474,
									"end": 7361,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "153"
								},
								{
									"begin": 6474,
									"end": 7361,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6504,
									"end": 7122,
									"name": "tag",
									"source": 6,
									"value": "154"
								},
								{
									"begin": 6504,
									"end": 7122,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6556,
									"end": 6560,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 6552,
									"end": 6561,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 6544,
									"end": 6550,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6540,
									"end": 6562,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6590,
									"end": 6627,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "157"
								},
								{
									"begin": 6622,
									"end": 6626,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 6590,
									"end": 6627,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 6590,
									"end": 6627,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6590,
									"end": 6627,
									"name": "tag",
									"source": 6,
									"value": "157"
								},
								{
									"begin": 6590,
									"end": 6627,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6649,
									"end": 6650,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6663,
									"end": 6871,
									"name": "tag",
									"source": 6,
									"value": "158"
								},
								{
									"begin": 6663,
									"end": 6871,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6677,
									"end": 6684,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6674,
									"end": 6675,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6671,
									"end": 6685,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 6663,
									"end": 6871,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6663,
									"end": 6871,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "160"
								},
								{
									"begin": 6663,
									"end": 6871,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6756,
									"end": 6765,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6751,
									"end": 6754,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 6747,
									"end": 6766,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6741,
									"end": 6767,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6733,
									"end": 6739,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6726,
									"end": 6768,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6807,
									"end": 6808,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 6799,
									"end": 6805,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6795,
									"end": 6809,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6785,
									"end": 6809,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6785,
									"end": 6809,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6854,
									"end": 6856,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6843,
									"end": 6852,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6839,
									"end": 6857,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6826,
									"end": 6857,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 6826,
									"end": 6857,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6700,
									"end": 6704,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6697,
									"end": 6698,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6693,
									"end": 6705,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6688,
									"end": 6705,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6688,
									"end": 6705,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6663,
									"end": 6871,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "158"
								},
								{
									"begin": 6663,
									"end": 6871,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6663,
									"end": 6871,
									"name": "tag",
									"source": 6,
									"value": "160"
								},
								{
									"begin": 6663,
									"end": 6871,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6899,
									"end": 6905,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 6890,
									"end": 6897,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6887,
									"end": 6906,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 6884,
									"end": 7063,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6884,
									"end": 7063,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "161"
								},
								{
									"begin": 6884,
									"end": 7063,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6957,
									"end": 6966,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6952,
									"end": 6955,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 6948,
									"end": 6967,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6942,
									"end": 6968,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 7000,
									"end": 7048,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "162"
								},
								{
									"begin": 7042,
									"end": 7046,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 7034,
									"end": 7040,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 7030,
									"end": 7047,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 7019,
									"end": 7028,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7000,
									"end": 7048,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 7000,
									"end": 7048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7000,
									"end": 7048,
									"name": "tag",
									"source": 6,
									"value": "162"
								},
								{
									"begin": 7000,
									"end": 7048,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6992,
									"end": 6998,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6985,
									"end": 7049,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6907,
									"end": 7063,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6884,
									"end": 7063,
									"name": "tag",
									"source": 6,
									"value": "161"
								},
								{
									"begin": 6884,
									"end": 7063,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7109,
									"end": 7110,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 7105,
									"end": 7106,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 7097,
									"end": 7103,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 7093,
									"end": 7107,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 7089,
									"end": 7111,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7083,
									"end": 7087,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 7076,
									"end": 7112,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6511,
									"end": 7122,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6511,
									"end": 7122,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6511,
									"end": 7122,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6474,
									"end": 7361,
									"name": "tag",
									"source": 6,
									"value": "153"
								},
								{
									"begin": 6474,
									"end": 7361,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6474,
									"end": 7361,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6064,
									"end": 7367,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6064,
									"end": 7367,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6064,
									"end": 7367,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5972,
									"end": 7367,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5972,
									"end": 7367,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5972,
									"end": 7367,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7373,
									"end": 7542,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 7373,
									"end": 7542,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7457,
									"end": 7468,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7491,
									"end": 7497,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7486,
									"end": 7489,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7479,
									"end": 7498,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 7531,
									"end": 7535,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7526,
									"end": 7529,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7522,
									"end": 7536,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7507,
									"end": 7536,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7507,
									"end": 7536,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7373,
									"end": 7542,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7373,
									"end": 7542,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7373,
									"end": 7542,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7373,
									"end": 7542,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7373,
									"end": 7542,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7548,
									"end": 7781,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 7548,
									"end": 7781,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7688,
									"end": 7722,
									"name": "PUSH",
									"source": 6,
									"value": "4D79476F7620746F6B656E20737570706C79206D75737420626520657175616C"
								},
								{
									"begin": 7684,
									"end": 7685,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7676,
									"end": 7682,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7672,
									"end": 7686,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7665,
									"end": 7723,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 7757,
									"end": 7773,
									"name": "PUSH",
									"source": 6,
									"value": "20746F203230206D696C6C696F6E000000000000000000000000000000000000"
								},
								{
									"begin": 7752,
									"end": 7754,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7744,
									"end": 7750,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7740,
									"end": 7755,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7733,
									"end": 7774,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 7548,
									"end": 7781,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7548,
									"end": 7781,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7787,
									"end": 8153,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 7787,
									"end": 8153,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7929,
									"end": 7932,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7950,
									"end": 8017,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "166"
								},
								{
									"begin": 8014,
									"end": 8016,
									"name": "PUSH",
									"source": 6,
									"value": "2E"
								},
								{
									"begin": 8009,
									"end": 8012,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7950,
									"end": 8017,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 7950,
									"end": 8017,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7950,
									"end": 8017,
									"name": "tag",
									"source": 6,
									"value": "166"
								},
								{
									"begin": 7950,
									"end": 8017,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7943,
									"end": 8017,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7943,
									"end": 8017,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8026,
									"end": 8119,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "167"
								},
								{
									"begin": 8115,
									"end": 8118,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8026,
									"end": 8119,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 8026,
									"end": 8119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8026,
									"end": 8119,
									"name": "tag",
									"source": 6,
									"value": "167"
								},
								{
									"begin": 8026,
									"end": 8119,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8144,
									"end": 8146,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 8139,
									"end": 8142,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8135,
									"end": 8147,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8128,
									"end": 8147,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8128,
									"end": 8147,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7787,
									"end": 8153,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7787,
									"end": 8153,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7787,
									"end": 8153,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7787,
									"end": 8153,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8159,
									"end": 8578,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 8159,
									"end": 8578,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8325,
									"end": 8329,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8363,
									"end": 8365,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8352,
									"end": 8361,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8348,
									"end": 8366,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8340,
									"end": 8366,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8340,
									"end": 8366,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8412,
									"end": 8421,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8406,
									"end": 8410,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8402,
									"end": 8422,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 8398,
									"end": 8399,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8387,
									"end": 8396,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8383,
									"end": 8400,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8376,
									"end": 8423,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 8440,
									"end": 8571,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "169"
								},
								{
									"begin": 8566,
									"end": 8570,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8440,
									"end": 8571,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 8440,
									"end": 8571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8440,
									"end": 8571,
									"name": "tag",
									"source": 6,
									"value": "169"
								},
								{
									"begin": 8440,
									"end": 8571,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8432,
									"end": 8571,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8432,
									"end": 8571,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8159,
									"end": 8578,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8159,
									"end": 8578,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8159,
									"end": 8578,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8159,
									"end": 8578,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8584,
									"end": 8702,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 8584,
									"end": 8702,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8671,
									"end": 8695,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "171"
								},
								{
									"begin": 8689,
									"end": 8694,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 8671,
									"end": 8695,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 8671,
									"end": 8695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8671,
									"end": 8695,
									"name": "tag",
									"source": 6,
									"value": "171"
								},
								{
									"begin": 8671,
									"end": 8695,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8666,
									"end": 8669,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8659,
									"end": 8696,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 8584,
									"end": 8702,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8584,
									"end": 8702,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8584,
									"end": 8702,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8708,
									"end": 8930,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8708,
									"end": 8930,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8801,
									"end": 8805,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8839,
									"end": 8841,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 8828,
									"end": 8837,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 8824,
									"end": 8842,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8816,
									"end": 8842,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 8816,
									"end": 8842,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8852,
									"end": 8923,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "173"
								},
								{
									"begin": 8920,
									"end": 8921,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8909,
									"end": 8918,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 8905,
									"end": 8922,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 8896,
									"end": 8902,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 8852,
									"end": 8923,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 8852,
									"end": 8923,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8852,
									"end": 8923,
									"name": "tag",
									"source": 6,
									"value": "173"
								},
								{
									"begin": 8852,
									"end": 8923,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8708,
									"end": 8930,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 8708,
									"end": 8930,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 8708,
									"end": 8930,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8708,
									"end": 8930,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 8708,
									"end": 8930,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 8936,
									"end": 9116,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 8936,
									"end": 9116,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 8984,
									"end": 9061,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8981,
									"end": 8982,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 8974,
									"end": 9062,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 9081,
									"end": 9085,
									"name": "PUSH",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 9078,
									"end": 9079,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 9071,
									"end": 9086,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 9105,
									"end": 9109,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 9102,
									"end": 9103,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9095,
									"end": 9110,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 9122,
									"end": 9313,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 9122,
									"end": 9313,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9162,
									"end": 9165,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9181,
									"end": 9201,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "176"
								},
								{
									"begin": 9199,
									"end": 9200,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9181,
									"end": 9201,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 9181,
									"end": 9201,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9181,
									"end": 9201,
									"name": "tag",
									"source": 6,
									"value": "176"
								},
								{
									"begin": 9181,
									"end": 9201,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9176,
									"end": 9201,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9176,
									"end": 9201,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9215,
									"end": 9235,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "177"
								},
								{
									"begin": 9233,
									"end": 9234,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9215,
									"end": 9235,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 9215,
									"end": 9235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9215,
									"end": 9235,
									"name": "tag",
									"source": 6,
									"value": "177"
								},
								{
									"begin": 9215,
									"end": 9235,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9210,
									"end": 9235,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 9210,
									"end": 9235,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9258,
									"end": 9259,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9255,
									"end": 9256,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9251,
									"end": 9260,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9244,
									"end": 9260,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9244,
									"end": 9260,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9279,
									"end": 9282,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 9276,
									"end": 9277,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9273,
									"end": 9283,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 9270,
									"end": 9306,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 9270,
									"end": 9306,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "178"
								},
								{
									"begin": 9270,
									"end": 9306,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 9286,
									"end": 9304,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "179"
								},
								{
									"begin": 9286,
									"end": 9304,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 9286,
									"end": 9304,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9286,
									"end": 9304,
									"name": "tag",
									"source": 6,
									"value": "179"
								},
								{
									"begin": 9286,
									"end": 9304,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9270,
									"end": 9306,
									"name": "tag",
									"source": 6,
									"value": "178"
								},
								{
									"begin": 9270,
									"end": 9306,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9122,
									"end": 9313,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 9122,
									"end": 9313,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9122,
									"end": 9313,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9122,
									"end": 9313,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9122,
									"end": 9313,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9319,
									"end": 9437,
									"name": "tag",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 9319,
									"end": 9437,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9406,
									"end": 9430,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "181"
								},
								{
									"begin": 9424,
									"end": 9429,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 9406,
									"end": 9430,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 9406,
									"end": 9430,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9406,
									"end": 9430,
									"name": "tag",
									"source": 6,
									"value": "181"
								},
								{
									"begin": 9406,
									"end": 9430,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9401,
									"end": 9404,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9394,
									"end": 9431,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 9319,
									"end": 9437,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9319,
									"end": 9437,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9319,
									"end": 9437,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9443,
									"end": 9885,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 9443,
									"end": 9885,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9592,
									"end": 9596,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9630,
									"end": 9632,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 9619,
									"end": 9628,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 9615,
									"end": 9633,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9607,
									"end": 9633,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9607,
									"end": 9633,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9643,
									"end": 9714,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "183"
								},
								{
									"begin": 9711,
									"end": 9712,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 9700,
									"end": 9709,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9696,
									"end": 9713,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9687,
									"end": 9693,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 9643,
									"end": 9714,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 9643,
									"end": 9714,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9643,
									"end": 9714,
									"name": "tag",
									"source": 6,
									"value": "183"
								},
								{
									"begin": 9643,
									"end": 9714,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9724,
									"end": 9796,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "184"
								},
								{
									"begin": 9792,
									"end": 9794,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 9781,
									"end": 9790,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9777,
									"end": 9795,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9768,
									"end": 9774,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 9724,
									"end": 9796,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 9724,
									"end": 9796,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9724,
									"end": 9796,
									"name": "tag",
									"source": 6,
									"value": "184"
								},
								{
									"begin": 9724,
									"end": 9796,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9806,
									"end": 9878,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "185"
								},
								{
									"begin": 9874,
									"end": 9876,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 9863,
									"end": 9872,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 9859,
									"end": 9877,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9850,
									"end": 9856,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 9806,
									"end": 9878,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 9806,
									"end": 9878,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9806,
									"end": 9878,
									"name": "tag",
									"source": 6,
									"value": "185"
								},
								{
									"begin": 9806,
									"end": 9878,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9443,
									"end": 9885,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 9443,
									"end": 9885,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 9443,
									"end": 9885,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9443,
									"end": 9885,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9443,
									"end": 9885,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9443,
									"end": 9885,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9443,
									"end": 9885,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 9891,
									"end": 10113,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 9891,
									"end": 10113,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9984,
									"end": 9988,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10022,
									"end": 10024,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 10011,
									"end": 10020,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 10007,
									"end": 10025,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 9999,
									"end": 10025,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 9999,
									"end": 10025,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 10035,
									"end": 10106,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "187"
								},
								{
									"begin": 10103,
									"end": 10104,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 10092,
									"end": 10101,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 10088,
									"end": 10105,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 10079,
									"end": 10085,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 10035,
									"end": 10106,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 10035,
									"end": 10106,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 10035,
									"end": 10106,
									"name": "tag",
									"source": 6,
									"value": "187"
								},
								{
									"begin": 10035,
									"end": 10106,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 9891,
									"end": 10113,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 9891,
									"end": 10113,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 9891,
									"end": 10113,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9891,
									"end": 10113,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 9891,
									"end": 10113,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 115,
									"end": 1566,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 115,
									"end": 1566,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 115,
									"end": 1566,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 1566,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 115,
									"end": 1566,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 115,
									"end": 1566,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 1566,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 115,
									"end": 1566,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 115,
									"end": 1566,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206da1b7c8e5ea8864f12351c36e7b45a17f37b17f16865eaed0dd21ec1961520c64736f6c63430008160033",
									".code": [
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "D915902E"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "D915902E"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "DE5F72FD"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "E6664928"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "B3AFCEE4"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "C7F48DF7"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "34DCB04E"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "39C94D2D"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 115,
											"end": 1566,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 171,
											"end": 204,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 171,
											"end": 204,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 171,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 171,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 171,
											"end": 204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 171,
											"end": 204,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 171,
											"end": 204,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 171,
											"end": 204,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 171,
											"end": 204,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 171,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 171,
											"end": 204,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 171,
											"end": 204,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 171,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 171,
											"end": 204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 171,
											"end": 204,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 171,
											"end": 204,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 171,
											"end": 204,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 171,
											"end": 204,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 171,
											"end": 204,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 171,
											"end": 204,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 171,
											"end": 204,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 171,
											"end": 204,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 171,
											"end": 204,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 890,
											"end": 984,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 890,
											"end": 984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 890,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 890,
											"end": 984,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 890,
											"end": 984,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 890,
											"end": 984,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 890,
											"end": 984,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 890,
											"end": 984,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 890,
											"end": 984,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 890,
											"end": 984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 890,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 890,
											"end": 984,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 890,
											"end": 984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 890,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 890,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 890,
											"end": 984,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 890,
											"end": 984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 890,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 890,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 890,
											"end": 984,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 890,
											"end": 984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 890,
											"end": 984,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1140,
											"end": 1253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1140,
											"end": 1253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1140,
											"end": 1253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 990,
											"end": 1134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 990,
											"end": 1134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 990,
											"end": 1134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 776,
											"end": 884,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 776,
											"end": 884,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 776,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 776,
											"end": 884,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 776,
											"end": 884,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 776,
											"end": 884,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 776,
											"end": 884,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 776,
											"end": 884,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 776,
											"end": 884,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 776,
											"end": 884,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 776,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 776,
											"end": 884,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 776,
											"end": 884,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 776,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 776,
											"end": 884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 776,
											"end": 884,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 776,
											"end": 884,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 776,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 776,
											"end": 884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 776,
											"end": 884,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 776,
											"end": 884,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 776,
											"end": 884,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1563,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 1256,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1256,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1256,
											"end": 1563,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1256,
											"end": 1563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1256,
											"end": 1563,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1256,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1256,
											"end": 1563,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 630,
											"end": 770,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 630,
											"end": 770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 630,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 630,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 630,
											"end": 770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 630,
											"end": 770,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 630,
											"end": 770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 630,
											"end": 770,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 171,
											"end": 204,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 171,
											"end": 204,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 171,
											"end": 204,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 171,
											"end": 204,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 171,
											"end": 204,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 171,
											"end": 204,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 171,
											"end": 204,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 171,
											"end": 204,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 171,
											"end": 204,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 171,
											"end": 204,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 171,
											"end": 204,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 171,
											"end": 204,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 171,
											"end": 204,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 171,
											"end": 204,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 171,
											"end": 204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 890,
											"end": 984,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 890,
											"end": 984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 946,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 963,
											"end": 967,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 970,
											"end": 976,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 946,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 946,
											"end": 977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 946,
											"end": 977,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 946,
											"end": 977,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 946,
											"end": 977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 890,
											"end": 984,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 890,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1201,
											"end": 1205,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1246,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1233,
											"end": 1241,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1223,
											"end": 1242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1242,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1223,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1246,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1216,
											"end": 1246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1216,
											"end": 1246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1253,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1140,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1061,
											"end": 1068,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1117,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1087,
											"end": 1117,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1117,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 1118,
											"end": 1126,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 1087,
											"end": 1127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1087,
											"end": 1127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1087,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1080,
											"end": 1127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1080,
											"end": 1127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 990,
											"end": 1134,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 990,
											"end": 1134,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 776,
											"end": 884,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 776,
											"end": 884,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 825,
											"end": 845,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 825,
											"end": 845,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 825,
											"end": 845,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 825,
											"end": 845,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 825,
											"end": 845,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 825,
											"end": 845,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 825,
											"end": 845,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 825,
											"end": 845,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 825,
											"end": 845,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 825,
											"end": 845,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 825,
											"end": 845,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 825,
											"end": 854,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 825,
											"end": 854,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 825,
											"end": 854,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 863,
											"end": 867,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 870,
											"end": 876,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 877,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 825,
											"end": 877,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 825,
											"end": 877,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 825,
											"end": 877,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 825,
											"end": 877,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 825,
											"end": 877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 825,
											"end": 877,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 825,
											"end": 877,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 877,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 825,
											"end": 877,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 825,
											"end": 877,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 825,
											"end": 877,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 825,
											"end": 877,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 825,
											"end": 877,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 877,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 825,
											"end": 877,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 825,
											"end": 877,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 825,
											"end": 877,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 825,
											"end": 877,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 825,
											"end": 877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 825,
											"end": 877,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 825,
											"end": 877,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 776,
											"end": 884,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 776,
											"end": 884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1563,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1256,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1321,
											"end": 1322,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1294,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1312,
											"end": 1316,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1294,
											"end": 1303,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1294,
											"end": 1318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1294,
											"end": 1318,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1294,
											"end": 1318,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1294,
											"end": 1322,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 1286,
											"end": 1353,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1353,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1353,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1353,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1286,
											"end": 1353,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1353,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1353,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1286,
											"end": 1353,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1286,
											"end": 1353,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1286,
											"end": 1353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1353,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 1286,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1353,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1353,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1353,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1353,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1353,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1353,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1353,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1286,
											"end": 1353,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 1286,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1376,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1366,
											"end": 1388,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1377,
											"end": 1387,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1388,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1366,
											"end": 1388,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1388,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1366,
											"end": 1388,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1388,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1388,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1388,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1366,
											"end": 1388,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1388,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1388,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1388,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1366,
											"end": 1388,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1388,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1366,
											"end": 1388,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1388,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1366,
											"end": 1388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1388,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1388,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1366,
											"end": 1388,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1388,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1388,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1388,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1366,
											"end": 1388,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1365,
											"end": 1388,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 1357,
											"end": 1433,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1433,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1357,
											"end": 1433,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1433,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1357,
											"end": 1433,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1433,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1433,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1357,
											"end": 1433,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1357,
											"end": 1433,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1357,
											"end": 1433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1433,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 1357,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1433,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1357,
											"end": 1433,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1433,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1433,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1433,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1433,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1433,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1433,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 1357,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1452,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1448,
											"end": 1461,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1462,
											"end": 1472,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1474,
											"end": 1476,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 1448,
											"end": 1477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 1448,
											"end": 1477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1477,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1545,
											"end": 1549,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1520,
											"end": 1530,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1520,
											"end": 1542,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1541,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1542,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1542,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1542,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1520,
											"end": 1542,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1542,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1542,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1542,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1520,
											"end": 1542,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1542,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1542,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1542,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1542,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1520,
											"end": 1542,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1542,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1520,
											"end": 1542,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1542,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1520,
											"end": 1549,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1520,
											"end": 1549,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1549,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1549,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1549,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1549,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1520,
											"end": 1549,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1549,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1549,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1549,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1549,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1549,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1549,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1549,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1549,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1549,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1549,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1520,
											"end": 1549,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1256,
											"end": 1563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 630,
											"end": 770,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 630,
											"end": 770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 683,
											"end": 692,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 683,
											"end": 692,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 683,
											"end": 692,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 683,
											"end": 692,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 683,
											"end": 692,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 683,
											"end": 692,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 683,
											"end": 692,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 683,
											"end": 692,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 683,
											"end": 692,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 683,
											"end": 692,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 683,
											"end": 692,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 675,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 675,
											"end": 737,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 675,
											"end": 737,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 675,
											"end": 737,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 675,
											"end": 737,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 675,
											"end": 737,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 675,
											"end": 737,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 675,
											"end": 737,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 675,
											"end": 737,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 675,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 675,
											"end": 737,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 675,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 675,
											"end": 737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 675,
											"end": 737,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 675,
											"end": 737,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 675,
											"end": 737,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 675,
											"end": 737,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 675,
											"end": 737,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 675,
											"end": 737,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 675,
											"end": 737,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 675,
											"end": 737,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 675,
											"end": 737,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 675,
											"end": 737,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 675,
											"end": 737,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 762,
											"end": 763,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 747,
											"end": 759,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 747,
											"end": 763,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 747,
											"end": 763,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 747,
											"end": 763,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 747,
											"end": 763,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 630,
											"end": 770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 4913,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 4853,
											"end": 4913,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4881,
											"end": 4884,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4902,
											"end": 4907,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4895,
											"end": 4907,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4895,
											"end": 4907,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 4913,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 4913,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 4913,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4853,
											"end": 4913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4919,
											"end": 5061,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 4919,
											"end": 5061,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4978,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5002,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 5020,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 5029,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 5047,
											"end": 5052,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5029,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 5029,
											"end": 5053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5029,
											"end": 5053,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 5029,
											"end": 5053,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5020,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 5020,
											"end": 5054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5020,
											"end": 5054,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 5020,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5002,
											"end": 5055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 5002,
											"end": 5055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5002,
											"end": 5055,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 5002,
											"end": 5055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4989,
											"end": 5055,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4989,
											"end": 5055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4919,
											"end": 5061,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4919,
											"end": 5061,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4919,
											"end": 5061,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4919,
											"end": 5061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5067,
											"end": 5193,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 5067,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5117,
											"end": 5126,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5150,
											"end": 5187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 5181,
											"end": 5186,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 5150,
											"end": 5187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5187,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 5150,
											"end": 5187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5137,
											"end": 5187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5067,
											"end": 5193,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5067,
											"end": 5193,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5067,
											"end": 5193,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5067,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5199,
											"end": 5338,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 5199,
											"end": 5338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5262,
											"end": 5271,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5295,
											"end": 5332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 5326,
											"end": 5331,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5295,
											"end": 5332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 5295,
											"end": 5332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5295,
											"end": 5332,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 5295,
											"end": 5332,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5282,
											"end": 5332,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5282,
											"end": 5332,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5199,
											"end": 5338,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5199,
											"end": 5338,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5199,
											"end": 5338,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5199,
											"end": 5338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5344,
											"end": 5501,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 5344,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5444,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 5488,
											"end": 5493,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5444,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 5444,
											"end": 5494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5444,
											"end": 5494,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 5444,
											"end": 5494,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5439,
											"end": 5442,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5432,
											"end": 5495,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5344,
											"end": 5501,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5344,
											"end": 5501,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5344,
											"end": 5501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 5755,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 5507,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5613,
											"end": 5617,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5651,
											"end": 5653,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5640,
											"end": 5649,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5636,
											"end": 5654,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 5654,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5628,
											"end": 5654,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5664,
											"end": 5748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 5745,
											"end": 5746,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5734,
											"end": 5743,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5730,
											"end": 5747,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5721,
											"end": 5727,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5664,
											"end": 5748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 5664,
											"end": 5748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5664,
											"end": 5748,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 5664,
											"end": 5748,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 5755,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 5755,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 5755,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 5755,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 5755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5761,
											"end": 6090,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 5761,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5820,
											"end": 5826,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5869,
											"end": 5871,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5857,
											"end": 5866,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5848,
											"end": 5855,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5844,
											"end": 5867,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5840,
											"end": 5872,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5837,
											"end": 5956,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5837,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 5837,
											"end": 5956,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5875,
											"end": 5954,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 5875,
											"end": 5954,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 5875,
											"end": 5954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5875,
											"end": 5954,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 5875,
											"end": 5954,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5837,
											"end": 5956,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 5837,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5995,
											"end": 5996,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6020,
											"end": 6073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 6065,
											"end": 6072,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6056,
											"end": 6062,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6045,
											"end": 6054,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6041,
											"end": 6063,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6020,
											"end": 6073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 6020,
											"end": 6073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6020,
											"end": 6073,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 6020,
											"end": 6073,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6010,
											"end": 6073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6010,
											"end": 6073,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5966,
											"end": 6083,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5761,
											"end": 6090,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5761,
											"end": 6090,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5761,
											"end": 6090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5761,
											"end": 6090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5761,
											"end": 6090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6096,
											"end": 6425,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 6096,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6155,
											"end": 6161,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6204,
											"end": 6206,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6192,
											"end": 6201,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6183,
											"end": 6190,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6179,
											"end": 6202,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6175,
											"end": 6207,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 6172,
											"end": 6291,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6172,
											"end": 6291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 6172,
											"end": 6291,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6210,
											"end": 6289,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 6210,
											"end": 6289,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 6210,
											"end": 6289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6210,
											"end": 6289,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 6210,
											"end": 6289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6172,
											"end": 6291,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 6172,
											"end": 6291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6330,
											"end": 6331,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6355,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 6400,
											"end": 6407,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6391,
											"end": 6397,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6380,
											"end": 6389,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6376,
											"end": 6398,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 6355,
											"end": 6408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6355,
											"end": 6408,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 6355,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6345,
											"end": 6408,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6345,
											"end": 6408,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6301,
											"end": 6418,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6096,
											"end": 6425,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6096,
											"end": 6425,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6096,
											"end": 6425,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6096,
											"end": 6425,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6096,
											"end": 6425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6431,
											"end": 6905,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 6431,
											"end": 6905,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6499,
											"end": 6505,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6507,
											"end": 6513,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6556,
											"end": 6558,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6544,
											"end": 6553,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6535,
											"end": 6542,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6531,
											"end": 6554,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6527,
											"end": 6559,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 6524,
											"end": 6643,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6524,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 6524,
											"end": 6643,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6562,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 6562,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 6562,
											"end": 6641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6562,
											"end": 6641,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 6562,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6524,
											"end": 6643,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 6524,
											"end": 6643,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6682,
											"end": 6683,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6707,
											"end": 6760,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 6752,
											"end": 6759,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6743,
											"end": 6749,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6732,
											"end": 6741,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6728,
											"end": 6750,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6707,
											"end": 6760,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 6707,
											"end": 6760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6707,
											"end": 6760,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 6707,
											"end": 6760,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6697,
											"end": 6760,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6697,
											"end": 6760,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6653,
											"end": 6770,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6809,
											"end": 6811,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6835,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 6880,
											"end": 6887,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6871,
											"end": 6877,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6860,
											"end": 6869,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6856,
											"end": 6878,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6835,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 6835,
											"end": 6888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6835,
											"end": 6888,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 6835,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6825,
											"end": 6888,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6825,
											"end": 6888,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6780,
											"end": 6898,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6431,
											"end": 6905,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6431,
											"end": 6905,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6431,
											"end": 6905,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6431,
											"end": 6905,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6431,
											"end": 6905,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6431,
											"end": 6905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6911,
											"end": 7091,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 6911,
											"end": 7091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6959,
											"end": 7036,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6956,
											"end": 6957,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6949,
											"end": 7037,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7056,
											"end": 7060,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 7053,
											"end": 7054,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7046,
											"end": 7061,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7080,
											"end": 7084,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7077,
											"end": 7078,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7070,
											"end": 7085,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7097,
											"end": 7417,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 7097,
											"end": 7417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7141,
											"end": 7147,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7178,
											"end": 7179,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7172,
											"end": 7176,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7168,
											"end": 7180,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7158,
											"end": 7180,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7158,
											"end": 7180,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7225,
											"end": 7226,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7219,
											"end": 7223,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7227,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7246,
											"end": 7264,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7236,
											"end": 7317,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 7236,
											"end": 7317,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7302,
											"end": 7306,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 7294,
											"end": 7300,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7307,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7280,
											"end": 7307,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7280,
											"end": 7307,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7236,
											"end": 7317,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 7236,
											"end": 7317,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7364,
											"end": 7366,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7356,
											"end": 7362,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7353,
											"end": 7367,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7333,
											"end": 7351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7330,
											"end": 7368,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7327,
											"end": 7411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 7327,
											"end": 7411,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7383,
											"end": 7401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 7383,
											"end": 7401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 7383,
											"end": 7401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7383,
											"end": 7401,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 7383,
											"end": 7401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7327,
											"end": 7411,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 7327,
											"end": 7411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7148,
											"end": 7417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7097,
											"end": 7417,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7097,
											"end": 7417,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7097,
											"end": 7417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7097,
											"end": 7417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7423,
											"end": 7541,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 7423,
											"end": 7541,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7510,
											"end": 7534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 7528,
											"end": 7533,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7510,
											"end": 7534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 7510,
											"end": 7534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7510,
											"end": 7534,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 7510,
											"end": 7534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7505,
											"end": 7508,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7498,
											"end": 7535,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7423,
											"end": 7541,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7423,
											"end": 7541,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7423,
											"end": 7541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7547,
											"end": 7769,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 7547,
											"end": 7769,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7640,
											"end": 7644,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7678,
											"end": 7680,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7667,
											"end": 7676,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7663,
											"end": 7681,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7655,
											"end": 7681,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7655,
											"end": 7681,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7691,
											"end": 7762,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 7759,
											"end": 7760,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7748,
											"end": 7757,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7735,
											"end": 7741,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7691,
											"end": 7762,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 7691,
											"end": 7762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7691,
											"end": 7762,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 7691,
											"end": 7762,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7547,
											"end": 7769,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7547,
											"end": 7769,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7547,
											"end": 7769,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7547,
											"end": 7769,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7547,
											"end": 7769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7775,
											"end": 7918,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 7775,
											"end": 7918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7832,
											"end": 7837,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7863,
											"end": 7869,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7857,
											"end": 7870,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7848,
											"end": 7870,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7848,
											"end": 7870,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7879,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 7906,
											"end": 7911,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7879,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 7879,
											"end": 7912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7879,
											"end": 7912,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 7879,
											"end": 7912,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7775,
											"end": 7918,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7775,
											"end": 7918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7775,
											"end": 7918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7775,
											"end": 7918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7775,
											"end": 7918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7924,
											"end": 8275,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 7924,
											"end": 8275,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7994,
											"end": 8000,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8043,
											"end": 8045,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8031,
											"end": 8040,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8022,
											"end": 8029,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8018,
											"end": 8041,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8014,
											"end": 8046,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 8011,
											"end": 8130,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8011,
											"end": 8130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 8011,
											"end": 8130,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8049,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 8049,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 8049,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8049,
											"end": 8128,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 8049,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8011,
											"end": 8130,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 8011,
											"end": 8130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8169,
											"end": 8170,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8194,
											"end": 8258,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 8250,
											"end": 8257,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8241,
											"end": 8247,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8230,
											"end": 8239,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8226,
											"end": 8248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8194,
											"end": 8258,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 8194,
											"end": 8258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8194,
											"end": 8258,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 8194,
											"end": 8258,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8184,
											"end": 8258,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8184,
											"end": 8258,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8140,
											"end": 8268,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7924,
											"end": 8275,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7924,
											"end": 8275,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7924,
											"end": 8275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7924,
											"end": 8275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7924,
											"end": 8275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8281,
											"end": 8613,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 8281,
											"end": 8613,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8402,
											"end": 8406,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8442,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8429,
											"end": 8438,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8425,
											"end": 8443,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8417,
											"end": 8443,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8417,
											"end": 8443,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8453,
											"end": 8524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 8521,
											"end": 8522,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8510,
											"end": 8519,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8506,
											"end": 8523,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8497,
											"end": 8503,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8453,
											"end": 8524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 8453,
											"end": 8524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8453,
											"end": 8524,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 8453,
											"end": 8524,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8534,
											"end": 8606,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 8602,
											"end": 8604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8591,
											"end": 8600,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8605,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8578,
											"end": 8584,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8534,
											"end": 8606,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 8534,
											"end": 8606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8534,
											"end": 8606,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 8534,
											"end": 8606,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8281,
											"end": 8613,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8281,
											"end": 8613,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8281,
											"end": 8613,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8281,
											"end": 8613,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8281,
											"end": 8613,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8281,
											"end": 8613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8619,
											"end": 8735,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 8619,
											"end": 8735,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8689,
											"end": 8710,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 8704,
											"end": 8709,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8689,
											"end": 8710,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 8689,
											"end": 8710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8689,
											"end": 8710,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 8689,
											"end": 8710,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8682,
											"end": 8687,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8679,
											"end": 8711,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8669,
											"end": 8729,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 8669,
											"end": 8729,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8725,
											"end": 8726,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8722,
											"end": 8723,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8727,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8669,
											"end": 8729,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 8669,
											"end": 8729,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8619,
											"end": 8735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8619,
											"end": 8735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8741,
											"end": 8878,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 8741,
											"end": 8878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8795,
											"end": 8800,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8826,
											"end": 8832,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8820,
											"end": 8833,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8811,
											"end": 8833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8811,
											"end": 8833,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8842,
											"end": 8872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 8866,
											"end": 8871,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8842,
											"end": 8872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 8842,
											"end": 8872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8842,
											"end": 8872,
											"name": "tag",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 8842,
											"end": 8872,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8741,
											"end": 8878,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8741,
											"end": 8878,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8741,
											"end": 8878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8741,
											"end": 8878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8741,
											"end": 8878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8884,
											"end": 9229,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 8884,
											"end": 9229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8951,
											"end": 8957,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9000,
											"end": 9002,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8988,
											"end": 8997,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8979,
											"end": 8986,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8975,
											"end": 8998,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8971,
											"end": 9003,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 8968,
											"end": 9087,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8968,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 8968,
											"end": 9087,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9006,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 9006,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 9006,
											"end": 9085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9006,
											"end": 9085,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 9006,
											"end": 9085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8968,
											"end": 9087,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 8968,
											"end": 9087,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9126,
											"end": 9127,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9151,
											"end": 9212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 9204,
											"end": 9211,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9195,
											"end": 9201,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9184,
											"end": 9193,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9180,
											"end": 9202,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9151,
											"end": 9212,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 9151,
											"end": 9212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9151,
											"end": 9212,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 9151,
											"end": 9212,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9141,
											"end": 9212,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9141,
											"end": 9212,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9097,
											"end": 9222,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8884,
											"end": 9229,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8884,
											"end": 9229,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8884,
											"end": 9229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8884,
											"end": 9229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8884,
											"end": 9229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9235,
											"end": 9411,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 9235,
											"end": 9411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9375,
											"end": 9403,
											"name": "PUSH",
											"source": 6,
											"value": "4E6F20746F6B656E73206C656674206F6E20636F6E7472616374000000000000"
										},
										{
											"begin": 9371,
											"end": 9372,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9363,
											"end": 9369,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9359,
											"end": 9373,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9352,
											"end": 9404,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9235,
											"end": 9411,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9235,
											"end": 9411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9417,
											"end": 9783,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 9417,
											"end": 9783,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9559,
											"end": 9562,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9580,
											"end": 9647,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 9644,
											"end": 9646,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 9639,
											"end": 9642,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9580,
											"end": 9647,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 9580,
											"end": 9647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9580,
											"end": 9647,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 9580,
											"end": 9647,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9573,
											"end": 9647,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9573,
											"end": 9647,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9656,
											"end": 9749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 9745,
											"end": 9748,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9656,
											"end": 9749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 9656,
											"end": 9749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9656,
											"end": 9749,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 9656,
											"end": 9749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9774,
											"end": 9776,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9769,
											"end": 9772,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9765,
											"end": 9777,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9758,
											"end": 9777,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9758,
											"end": 9777,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9417,
											"end": 9783,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9417,
											"end": 9783,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9417,
											"end": 9783,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9417,
											"end": 9783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9789,
											"end": 10208,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 9789,
											"end": 10208,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9955,
											"end": 9959,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9993,
											"end": 9995,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9982,
											"end": 9991,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9978,
											"end": 9996,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9970,
											"end": 9996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9970,
											"end": 9996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10042,
											"end": 10051,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10036,
											"end": 10040,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10032,
											"end": 10052,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10028,
											"end": 10029,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10017,
											"end": 10026,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10013,
											"end": 10030,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10006,
											"end": 10053,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10070,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 10196,
											"end": 10200,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10070,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 10070,
											"end": 10201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10070,
											"end": 10201,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 10070,
											"end": 10201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10062,
											"end": 10201,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10062,
											"end": 10201,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9789,
											"end": 10208,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9789,
											"end": 10208,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9789,
											"end": 10208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9789,
											"end": 10208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10214,
											"end": 10441,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 10214,
											"end": 10441,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10354,
											"end": 10388,
											"name": "PUSH",
											"source": 6,
											"value": "596F7520616C726561647920726563656976656420746F6B656E2066726F6D20"
										},
										{
											"begin": 10350,
											"end": 10351,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10342,
											"end": 10348,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10338,
											"end": 10352,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10331,
											"end": 10389,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10423,
											"end": 10433,
											"name": "PUSH",
											"source": 6,
											"value": "636F6E7472616374000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10418,
											"end": 10420,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10410,
											"end": 10416,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10406,
											"end": 10421,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10399,
											"end": 10434,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10214,
											"end": 10441,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10214,
											"end": 10441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10447,
											"end": 10813,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 10447,
											"end": 10813,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10589,
											"end": 10592,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10610,
											"end": 10677,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 10674,
											"end": 10676,
											"name": "PUSH",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 10669,
											"end": 10672,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10610,
											"end": 10677,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 10610,
											"end": 10677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10610,
											"end": 10677,
											"name": "tag",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 10610,
											"end": 10677,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10603,
											"end": 10677,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10603,
											"end": 10677,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10686,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 10775,
											"end": 10778,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10686,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 10686,
											"end": 10779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10686,
											"end": 10779,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 10686,
											"end": 10779,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10804,
											"end": 10806,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10799,
											"end": 10802,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10795,
											"end": 10807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10788,
											"end": 10807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10788,
											"end": 10807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10447,
											"end": 10813,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10447,
											"end": 10813,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10447,
											"end": 10813,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10447,
											"end": 10813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10819,
											"end": 11238,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 10819,
											"end": 11238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10985,
											"end": 10989,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11023,
											"end": 11025,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11012,
											"end": 11021,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11008,
											"end": 11026,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11000,
											"end": 11026,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11000,
											"end": 11026,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11072,
											"end": 11081,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11066,
											"end": 11070,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11062,
											"end": 11082,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11058,
											"end": 11059,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11047,
											"end": 11056,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11043,
											"end": 11060,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11036,
											"end": 11083,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11100,
											"end": 11231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 11226,
											"end": 11230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11100,
											"end": 11231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 11100,
											"end": 11231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11100,
											"end": 11231,
											"name": "tag",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 11100,
											"end": 11231,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11092,
											"end": 11231,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11092,
											"end": 11231,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10819,
											"end": 11238,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10819,
											"end": 11238,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10819,
											"end": 11238,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10819,
											"end": 11238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11244,
											"end": 11330,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 11244,
											"end": 11330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11290,
											"end": 11297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11319,
											"end": 11324,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11308,
											"end": 11324,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11308,
											"end": 11324,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11244,
											"end": 11330,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11244,
											"end": 11330,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11244,
											"end": 11330,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11244,
											"end": 11330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11336,
											"end": 11496,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 11336,
											"end": 11496,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11395,
											"end": 11404,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11428,
											"end": 11490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 11446,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 11455,
											"end": 11488,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 11482,
											"end": 11487,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11455,
											"end": 11488,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 11455,
											"end": 11488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11455,
											"end": 11488,
											"name": "tag",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 11455,
											"end": 11488,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11446,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 11446,
											"end": 11489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11446,
											"end": 11489,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 11446,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11428,
											"end": 11490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 11428,
											"end": 11490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11428,
											"end": 11490,
											"name": "tag",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 11428,
											"end": 11490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11415,
											"end": 11490,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11415,
											"end": 11490,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11336,
											"end": 11496,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11336,
											"end": 11496,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11336,
											"end": 11496,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11336,
											"end": 11496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11502,
											"end": 11651,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 11502,
											"end": 11651,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11598,
											"end": 11644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 11638,
											"end": 11643,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11598,
											"end": 11644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 11598,
											"end": 11644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11598,
											"end": 11644,
											"name": "tag",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 11598,
											"end": 11644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11593,
											"end": 11596,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11586,
											"end": 11645,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11502,
											"end": 11651,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11502,
											"end": 11651,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11502,
											"end": 11651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11657,
											"end": 12007,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 11657,
											"end": 12007,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11787,
											"end": 11791,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11825,
											"end": 11827,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11814,
											"end": 11823,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11810,
											"end": 11828,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11802,
											"end": 11828,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11802,
											"end": 11828,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11838,
											"end": 11909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 11906,
											"end": 11907,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11895,
											"end": 11904,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11891,
											"end": 11908,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11882,
											"end": 11888,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11838,
											"end": 11909,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 11838,
											"end": 11909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11838,
											"end": 11909,
											"name": "tag",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 11838,
											"end": 11909,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11919,
											"end": 12000,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 11996,
											"end": 11998,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11985,
											"end": 11994,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11981,
											"end": 11999,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11972,
											"end": 11978,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11919,
											"end": 12000,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 11919,
											"end": 12000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11919,
											"end": 12000,
											"name": "tag",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 11919,
											"end": 12000,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11657,
											"end": 12007,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 11657,
											"end": 12007,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11657,
											"end": 12007,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11657,
											"end": 12007,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11657,
											"end": 12007,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11657,
											"end": 12007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12013,
											"end": 12240,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 12013,
											"end": 12240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12153,
											"end": 12187,
											"name": "PUSH",
											"source": 6,
											"value": "46756E6374696F6E2063616E206F6E6C792062652063616C6C656420696E2074"
										},
										{
											"begin": 12149,
											"end": 12150,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12141,
											"end": 12147,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12151,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12130,
											"end": 12188,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12222,
											"end": 12232,
											"name": "PUSH",
											"source": 6,
											"value": "657374206D6F6465000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12217,
											"end": 12219,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12209,
											"end": 12215,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12205,
											"end": 12220,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12198,
											"end": 12233,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12013,
											"end": 12240,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12013,
											"end": 12240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12246,
											"end": 12612,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 12246,
											"end": 12612,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12388,
											"end": 12391,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12409,
											"end": 12476,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 12473,
											"end": 12475,
											"name": "PUSH",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 12468,
											"end": 12471,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12409,
											"end": 12476,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 12409,
											"end": 12476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12409,
											"end": 12476,
											"name": "tag",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 12409,
											"end": 12476,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12402,
											"end": 12476,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12402,
											"end": 12476,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12485,
											"end": 12578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 12574,
											"end": 12577,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12485,
											"end": 12578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 12485,
											"end": 12578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12485,
											"end": 12578,
											"name": "tag",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 12485,
											"end": 12578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12603,
											"end": 12605,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12598,
											"end": 12601,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12594,
											"end": 12606,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12587,
											"end": 12606,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12246,
											"end": 12612,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12246,
											"end": 12612,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12246,
											"end": 12612,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12246,
											"end": 12612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12618,
											"end": 13037,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 12618,
											"end": 13037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12784,
											"end": 12788,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12822,
											"end": 12824,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12811,
											"end": 12820,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12807,
											"end": 12825,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12799,
											"end": 12825,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12799,
											"end": 12825,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12871,
											"end": 12880,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12865,
											"end": 12869,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12861,
											"end": 12881,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12857,
											"end": 12858,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12846,
											"end": 12855,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12842,
											"end": 12859,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12835,
											"end": 12882,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12899,
											"end": 13030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 13025,
											"end": 13029,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12899,
											"end": 13030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 12899,
											"end": 13030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12899,
											"end": 13030,
											"name": "tag",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 12899,
											"end": 13030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12891,
											"end": 13030,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12891,
											"end": 13030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12618,
											"end": 13037,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12618,
											"end": 13037,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12618,
											"end": 13037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12618,
											"end": 13037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13043,
											"end": 13485,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 13043,
											"end": 13485,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13192,
											"end": 13196,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13230,
											"end": 13232,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 13219,
											"end": 13228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13215,
											"end": 13233,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13207,
											"end": 13233,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13207,
											"end": 13233,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13243,
											"end": 13314,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 13311,
											"end": 13312,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13300,
											"end": 13309,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13296,
											"end": 13313,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13287,
											"end": 13293,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 13243,
											"end": 13314,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 13243,
											"end": 13314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13243,
											"end": 13314,
											"name": "tag",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 13243,
											"end": 13314,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13324,
											"end": 13396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 13392,
											"end": 13394,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13381,
											"end": 13390,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13377,
											"end": 13395,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13368,
											"end": 13374,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 13324,
											"end": 13396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 13324,
											"end": 13396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13324,
											"end": 13396,
											"name": "tag",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 13324,
											"end": 13396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13406,
											"end": 13478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 13474,
											"end": 13476,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13463,
											"end": 13472,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13459,
											"end": 13477,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13450,
											"end": 13456,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13406,
											"end": 13478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 13406,
											"end": 13478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13406,
											"end": 13478,
											"name": "tag",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 13406,
											"end": 13478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13043,
											"end": 13485,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 13043,
											"end": 13485,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 13043,
											"end": 13485,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13043,
											"end": 13485,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13043,
											"end": 13485,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13043,
											"end": 13485,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13043,
											"end": 13485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13491,
											"end": 13671,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 13491,
											"end": 13671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13539,
											"end": 13616,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13536,
											"end": 13537,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13529,
											"end": 13617,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13636,
											"end": 13640,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 13633,
											"end": 13634,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 13626,
											"end": 13641,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13660,
											"end": 13664,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 13657,
											"end": 13658,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13650,
											"end": 13665,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 13677,
											"end": 13868,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 13677,
											"end": 13868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13717,
											"end": 13720,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13736,
											"end": 13756,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 13754,
											"end": 13755,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13736,
											"end": 13756,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 13736,
											"end": 13756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13736,
											"end": 13756,
											"name": "tag",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 13736,
											"end": 13756,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13731,
											"end": 13756,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13731,
											"end": 13756,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13770,
											"end": 13790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 13788,
											"end": 13789,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13770,
											"end": 13790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 13770,
											"end": 13790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13770,
											"end": 13790,
											"name": "tag",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 13770,
											"end": 13790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13765,
											"end": 13790,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13765,
											"end": 13790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13813,
											"end": 13814,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13810,
											"end": 13811,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13806,
											"end": 13815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13799,
											"end": 13815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13799,
											"end": 13815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13834,
											"end": 13837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13831,
											"end": 13832,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13828,
											"end": 13838,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 13825,
											"end": 13861,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13825,
											"end": 13861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 13825,
											"end": 13861,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13841,
											"end": 13859,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 13841,
											"end": 13859,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 13841,
											"end": 13859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13841,
											"end": 13859,
											"name": "tag",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 13841,
											"end": 13859,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13825,
											"end": 13861,
											"name": "tag",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 13825,
											"end": 13861,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13677,
											"end": 13868,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13677,
											"end": 13868,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13677,
											"end": 13868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13677,
											"end": 13868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13677,
											"end": 13868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"USD_BaseCoinContract()": "34dcb04e",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"donateMyGovToken(uint256)": "39c94d2d",
							"donateUSD(uint256)": "d915902e",
							"emptyTokenSupply()": "e6664928",
							"faucet()": "de5f72fd",
							"getUSDBalanceOfAccount(address)": "c7f48df7",
							"isMyGovMember(address)": "b3afcee4",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokensupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"usdStableCoinAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"test\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"USD_BaseCoinContract\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"donateMyGovToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"donateUSD\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emptyTokenSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"faucet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getUSDBalanceOfAccount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isMyGovMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":\"MyGov\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol\":{\"keccak256\":\"0x09edac7ba437492ec0f110b876b23439ebb840992e162917e74176fe1156ff7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b86f77584a1c031dfcb995dfe726dc01ad41c6ba989e126977d69b608ede56de\",\"dweb:/ipfs/QmP4fnGYdtzuzzjRGhqXYWph3G7XEMPZ7poWWZfvnJ8mqd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol:MyGov",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol:MyGov",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol:MyGov",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol:MyGov",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol:MyGov",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 784,
								"contract": "Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol:MyGov",
								"label": "token_supply",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 787,
								"contract": "Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol:MyGov",
								"label": "USD_BaseCoinContract",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(ERC20)651"
							},
							{
								"astId": 791,
								"contract": "Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol:MyGov",
								"label": "usedFaucet",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 793,
								"contract": "Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol:MyGov",
								"label": "isTesting",
								"offset": 0,
								"slot": "8",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(ERC20)651": {
								"encoding": "inplace",
								"label": "contract ERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							777
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 778,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 777,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1428:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 777,
										"src": "1428:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1437:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1445:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1461:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								777
							],
							"name": "ERC20",
							"nameLocation": "1419:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1480:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1496:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1540:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1556:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1583:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1630:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1665:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1691:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1952:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1962:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1970:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1985:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1908:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1929:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:1"
									},
									"scope": 651,
									"src": "1896:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2134:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2151:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "2144:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2119:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:1"
									},
									"scope": 651,
									"src": "2074:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2338:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2348:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2323:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:1"
									},
									"scope": 651,
									"src": "2276:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3058:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "3068:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3051:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:1"
									},
									"scope": 651,
									"src": "3002:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3205:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "3222:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "3215:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3196:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:1"
									},
									"scope": 651,
									"src": "3144:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3373:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3390:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3400:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3383:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3318:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3364:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:1"
									},
									"scope": 651,
									"src": "3299:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3685:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3695:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3743:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3750:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3754:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3733:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3770:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3628:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3640:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3679:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:1"
									},
									"scope": 651,
									"src": "3610:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3935:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3952:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3964:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3971:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3945:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3865:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3880:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:1"
									},
									"scope": 651,
									"src": "3846:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4372:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4382:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4398:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4436:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4445:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4420:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4461:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4310:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4327:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4366:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:1"
									},
									"scope": 651,
									"src": "4293:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "5132:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "5142:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "5160:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5198:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5204:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5213:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5182:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5239:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "5245:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5249:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "5229:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5265:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5061:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5075:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5087:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5126:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:1"
									},
									"scope": 651,
									"src": "5039:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5725:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5739:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5735:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5759:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5780:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5773:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5834:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5830:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5852:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5873:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5866:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5933:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5939:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5943:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5925:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5675:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5689:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5701:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:1"
									},
									"scope": 651,
									"src": "5656:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6346:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6360:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6534:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6548:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6570:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6580:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6603:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6617:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6599:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6624:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6674:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6680:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6693:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6649:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6834:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6844:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6852:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6866:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6356:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6380:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6496:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6512:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6910:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "7125:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7284:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7294:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7301:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6906:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6928:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "7073:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7089:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7355:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7361:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7346:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7341:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6288:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6302:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6314:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:1"
									},
									"scope": 651,
									"src": "6271:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7777:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7791:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7787:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7814:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7835:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7828:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7907:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7916:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7887:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7736:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7753:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:1"
									},
									"scope": 651,
									"src": "7721:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8303:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8313:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8340:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8361:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8354:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8419:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8411:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8262:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8279:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:1"
									},
									"scope": 651,
									"src": "8247:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "9063:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9082:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9089:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "9098:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "9073:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9007:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9022:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9039:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:1"
									},
									"scope": 651,
									"src": "8989:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "10047:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "10061:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "10057:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "10082:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10103:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "10096:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "10159:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "10155:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "10182:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "10203:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "10196:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10254:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10266:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10273:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10284:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10303:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10299:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10314:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10342:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10349:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10358:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10333:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10328:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9967:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9999:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10014:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:1"
									},
									"scope": 651,
									"src": "9949:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10752:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10762:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10799:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10806:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10789:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10828:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10824:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10867:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10885:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10904:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10881:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10911:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10963:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10972:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10990:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10936:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "11061:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "11068:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "11077:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "11096:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "11052:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10688:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10703:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10720:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:1"
									},
									"scope": 651,
									"src": "10663:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1401:9741:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:11038:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 729,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 729,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 729,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 729,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 729,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 729,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"305:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "305:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 755,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 755,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 755,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "277:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:558:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							777
						]
					},
					"id": 778,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 777,
							"linearizedBaseContracts": [
								777
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 777,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 777,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 778,
							"src": "624:235:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:4"
				},
				"id": 4
			},
			"Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol": {
				"ast": {
					"absolutePath": "Users/lynn/Documents/Uni/Bogazici/Blockchain/Cmpe483/contracts/MyGov.sol",
					"exportedSymbols": {
						"Context": [
							777
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"MyGov": [
							947
						]
					},
					"id": 948,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 779,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 780,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 948,
							"sourceUnit": 652,
							"src": "58:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 781,
										"name": "ERC20",
										"nameLocations": [
											"133:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "133:5:5"
									},
									"id": 782,
									"nodeType": "InheritanceSpecifier",
									"src": "133:5:5"
								}
							],
							"canonicalName": "MyGov",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 947,
							"linearizedBaseContracts": [
								947,
								651,
								41,
								755,
								729,
								777
							],
							"name": "MyGov",
							"nameLocation": "124:5:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 784,
									"mutability": "mutable",
									"name": "token_supply",
									"nameLocation": "153:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 947,
									"src": "145:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 783,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "145:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "34dcb04e",
									"id": 787,
									"mutability": "mutable",
									"name": "USD_BaseCoinContract",
									"nameLocation": "184:20:5",
									"nodeType": "VariableDeclaration",
									"scope": 947,
									"src": "171:33:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20_$651",
										"typeString": "contract ERC20"
									},
									"typeName": {
										"id": 786,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 785,
											"name": "ERC20",
											"nameLocations": [
												"171:5:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 651,
											"src": "171:5:5"
										},
										"referencedDeclaration": 651,
										"src": "171:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$651",
											"typeString": "contract ERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 791,
									"mutability": "mutable",
									"name": "usedFaucet",
									"nameLocation": "236:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 947,
									"src": "211:35:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 790,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 788,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "219:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "211:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 789,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "230:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 793,
									"mutability": "mutable",
									"name": "isTesting",
									"nameLocation": "258:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 947,
									"src": "253:14:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 792,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "253:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "366:258:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 807,
																"name": "tokensupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "378:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3230303030303030",
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "393:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_20000000_by_1",
																	"typeString": "int_const 20000000"
																},
																"value": "20000000"
															},
															"src": "378:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d79476f7620746f6b656e20737570706c79206d75737420626520657175616c20746f203230206d696c6c696f6e",
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "403:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_94b9a4ade9c8956771010031ab3026fb79e05a728412f62dfe1b190b3f2a81b2",
																"typeString": "literal_string \"MyGov token supply must be equal to 20 million\""
															},
															"value": "MyGov token supply must be equal to 20 million"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_94b9a4ade9c8956771010031ab3026fb79e05a728412f62dfe1b190b3f2a81b2",
																"typeString": "literal_string \"MyGov token supply must be equal to 20 million\""
															}
														],
														"id": 806,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "370:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "370:82:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "370:82:5"
											},
											{
												"expression": {
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 813,
														"name": "token_supply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "462:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 814,
														"name": "tokensupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "477:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "462:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 816,
												"nodeType": "ExpressionStatement",
												"src": "462:26:5"
											},
											{
												"expression": {
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 817,
														"name": "isTesting",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "498:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 818,
														"name": "test",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "510:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "498:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 820,
												"nodeType": "ExpressionStatement",
												"src": "498:16:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 824,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "538:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyGov_$947",
																		"typeString": "contract MyGov"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyGov_$947",
																		"typeString": "contract MyGov"
																	}
																],
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "530:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 822,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "530:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "530:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 826,
															"name": "tokensupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "545:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 821,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "524:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "524:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 828,
												"nodeType": "ExpressionStatement",
												"src": "524:33:5"
											},
											{
												"expression": {
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 829,
														"name": "USD_BaseCoinContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "567:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$651",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 831,
																"name": "usdStableCoinAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 797,
																"src": "596:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 830,
															"name": "ERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "590:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
																"typeString": "type(contract ERC20)"
															}
														},
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "590:27:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$651",
															"typeString": "contract ERC20"
														}
													},
													"src": "567:50:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$651",
														"typeString": "contract ERC20"
													}
												},
												"id": 834,
												"nodeType": "ExpressionStatement",
												"src": "567:50:5"
											}
										]
									},
									"id": 836,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d79476f76",
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "351:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_fd6a55308029136a781f5bb5275ff28dff2a67224cf4466d7c3b23b2fc80fec6",
														"typeString": "literal_string \"MyGov\""
													},
													"value": "MyGov"
												},
												{
													"hexValue": "4d47",
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "360:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_3ec817f963b4248661d2235639d6381fb1a3bdc4c69ab2a9b83b1aab49ad15e1",
														"typeString": "literal_string \"MG\""
													},
													"value": "MG"
												}
											],
											"id": 804,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 801,
												"name": "ERC20",
												"nameLocations": [
													"345:5:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "345:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "345:20:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "tokensupply",
												"nameLocation": "291:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "286:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "286:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "usdStableCoinAddress",
												"nameLocation": "312:20:5",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "304:28:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "304:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "test",
												"nameLocation": "339:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "334:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 798,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "334:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "285:59:5"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "366:0:5"
									},
									"scope": 947,
									"src": "274:350:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 848,
										"nodeType": "Block",
										"src": "665:105:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 840,
															"name": "isTesting",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "683:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46756e6374696f6e2063616e206f6e6c792062652063616c6c656420696e2074657374206d6f6465",
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "694:42:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_95268b7f192eb9978c9fad458ac4d471c718e0b38074aeae3e2acdf0ca49f7d1",
																"typeString": "literal_string \"Function can only be called in test mode\""
															},
															"value": "Function can only be called in test mode"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_95268b7f192eb9978c9fad458ac4d471c718e0b38074aeae3e2acdf0ca49f7d1",
																"typeString": "literal_string \"Function can only be called in test mode\""
															}
														],
														"id": 839,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "675:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "675:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "675:62:5"
											},
											{
												"expression": {
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 844,
														"name": "token_supply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "747:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 845,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "762:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "747:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 847,
												"nodeType": "ExpressionStatement",
												"src": "747:16:5"
											}
										]
									},
									"functionSelector": "e6664928",
									"id": 849,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "emptyTokenSupply",
									"nameLocation": "639:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "655:2:5"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "665:0:5"
									},
									"scope": 947,
									"src": "630:140:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "815:69:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 859,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "863:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyGov_$947",
																		"typeString": "contract MyGov"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyGov_$947",
																		"typeString": "contract MyGov"
																	}
																],
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "855:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 857,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "855:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "855:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 861,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "870:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 854,
															"name": "USD_BaseCoinContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "825:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "846:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 261,
														"src": "825:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "825:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "825:52:5"
											}
										]
									},
									"functionSelector": "d915902e",
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "donateUSD",
									"nameLocation": "785:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "800:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "795:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "795:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "794:13:5"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "815:0:5"
									},
									"scope": 947,
									"src": "776:108:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 878,
										"nodeType": "Block",
										"src": "936:48:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 873,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "963:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_MyGov_$947",
																		"typeString": "contract MyGov"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_MyGov_$947",
																		"typeString": "contract MyGov"
																	}
																],
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "955:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 871,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "955:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 875,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 867,
															"src": "970:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 870,
														"name": "transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "946:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "946:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 877,
												"nodeType": "ExpressionStatement",
												"src": "946:31:5"
											}
										]
									},
									"functionSelector": "39c94d2d",
									"id": 879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "donateMyGovToken",
									"nameLocation": "899:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "921:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "916:11:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 866,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "916:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "915:13:5"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "936:0:5"
									},
									"scope": 947,
									"src": "890:94:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 891,
										"nodeType": "Block",
										"src": "1070:64:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 888,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "1118:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 886,
															"name": "USD_BaseCoinContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "1087:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$651",
																"typeString": "contract ERC20"
															}
														},
														"id": 887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1108:9:5",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 237,
														"src": "1087:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1087:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 885,
												"id": 890,
												"nodeType": "Return",
												"src": "1080:47:5"
											}
										]
									},
									"functionSelector": "c7f48df7",
									"id": 892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUSDBalanceOfAccount",
									"nameLocation": "999:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "1030:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "1022:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1022:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1021:18:5"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "1061:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:9:5"
									},
									"scope": 947,
									"src": "990:144:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "1206:47:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 900,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 894,
																"src": "1233:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 899,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "1223:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 901,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1223:19:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 902,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1245:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1223:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 898,
												"id": 904,
												"nodeType": "Return",
												"src": "1216:30:5"
											}
										]
									},
									"functionSelector": "b3afcee4",
									"id": 906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isMyGovMember",
									"nameLocation": "1149:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1171:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "1163:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1163:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1162:18:5"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "1201:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 896,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1201:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1200:6:5"
									},
									"scope": 947,
									"src": "1140:113:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "1281:282:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 913,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1312:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_MyGov_$947",
																					"typeString": "contract MyGov"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_MyGov_$947",
																					"typeString": "contract MyGov"
																				}
																			],
																			"id": 912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1304:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 911,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1304:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1304:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 910,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 237,
																	"src": "1294:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1294:24:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1321:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1294:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e73206c656674206f6e20636f6e7472616374",
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1324:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_20cd1c00915cfbebfff7ab649d9df8429f6fbe08a7c9fcea251b3bd3d3aa8ca4",
																"typeString": "literal_string \"No tokens left on contract\""
															},
															"value": "No tokens left on contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_20cd1c00915cfbebfff7ab649d9df8429f6fbe08a7c9fcea251b3bd3d3aa8ca4",
																"typeString": "literal_string \"No tokens left on contract\""
															}
														],
														"id": 909,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1286:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1286:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 920,
												"nodeType": "ExpressionStatement",
												"src": "1286:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1365:23:5",
															"subExpression": {
																"baseExpression": {
																	"id": 922,
																	"name": "usedFaucet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "1366:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 925,
																"indexExpression": {
																	"expression": {
																		"id": 923,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1377:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 924,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1381:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1377:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1366:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520616c726561647920726563656976656420746f6b656e2066726f6d20636f6e7472616374",
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1390:42:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_84e8f47ae30a2e0d8c8b6ae2718af42560d516cd69dbfb10c1fd0e2722075210",
																"typeString": "literal_string \"You already received token from contract\""
															},
															"value": "You already received token from contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_84e8f47ae30a2e0d8c8b6ae2718af42560d516cd69dbfb10c1fd0e2722075210",
																"typeString": "literal_string \"You already received token from contract\""
															}
														],
														"id": 921,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1357:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1357:76:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "1357:76:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 933,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1462:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1466:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1462:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "3130",
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1474:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															}
														],
														"expression": {
															"id": 930,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "1448:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_MyGov_$947",
																"typeString": "contract MyGov"
															}
														},
														"id": 932,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1453:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 261,
														"src": "1448:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1448:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 937,
												"nodeType": "ExpressionStatement",
												"src": "1448:29:5"
											},
											{
												"expression": {
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 938,
															"name": "usedFaucet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "1520:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 941,
														"indexExpression": {
															"expression": {
																"id": 939,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1531:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1531:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1520:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 942,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1545:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1520:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "1520:29:5"
											}
										]
									},
									"functionSelector": "de5f72fd",
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "faucet",
									"nameLocation": "1265:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1271:2:5"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1281:0:5"
									},
									"scope": 947,
									"src": "1256:307:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 948,
							"src": "115:1451:5",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "32:1535:5"
				},
				"id": 5
			}
		}
	}
}